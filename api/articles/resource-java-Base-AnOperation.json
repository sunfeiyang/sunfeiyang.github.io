{"title":"Java位运算符及相关问题","num_read":1796,"num_like":1058,"num_collection":184,"num_comments":275,"slug":"resource-java-Base-AnOperation","date":"2021-09-22T16:00:00.000Z","img":"/img/header_img/java/AnOperation.png","format":"max","_id":"clhrbp2dr00ajo5lgfdy27ple","project":"Java","type":"hot","subtitle":"位运算符","site":{"data":{}},"updated":"2022-09-19T14:52:26.814Z","author":"Sunfy","comments":true,"path":"api/articles/resource-java-Base-AnOperation.json","webPath":"2021/09/23/resource-java-Base-AnOperation/","permalink":"https://sunfy9.gitee.io/2021/09/23/resource-java-Base-AnOperation/","excerpt":null,"covers":["../../../../img/AnOperation/image-20220324140131742.png","../../../../img/AnOperation/image-20220324140255497.png","../../../../img/AnOperation/image-20220324140346226.png"],"keywords":"sunfy, hexo-theme-snail","content":"<h1 id=\"一、位运算符\"><a href=\"#一、位运算符\" class=\"headerlink\" title=\"一、位运算符\"></a>一、位运算符</h1><p>Java中支持的位运算符</p>\n<p>&amp;：按位与</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>操作数1</th>\n<th>操作数2</th>\n<th>&amp;</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>总结：</strong>只有两个操作数都为1时，按位与操作的结果才为1，否则为0。（有0结果就为0）</p>\n<p>|：按位或</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>操作数1</th>\n<th>操作数2</th>\n<th>\\</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>总结：只要两个操作数中有一个为1，按位或的结果就为1，否则为0。（有1结果就为1）</p>\n<p>~：按位非</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>操作数</th>\n<th>~</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>操作数1</th>\n<th>操作数2</th>\n<th>^</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>总结：两个操作数相异则为1，相同则为0。<sunfy-line></p>\n<p>&lt;&lt;：左移</p>\n<p>符号位不变，低位补0.</p>\n<p><img src=\"../../../../img/AnOperation/image-20220324140131742.png\" alt=\"image-20220324140131742\"></p>\n<p><code>&gt;&gt;</code>: 右移</p>\n<p>低位溢出，符号位不变，高位溢出补符号位.</p>\n<p><img src=\"../../../../img/AnOperation/image-20220324140255497.png\" alt=\"image-20220324140255497\"></p>\n<p><code>&gt;&gt;&gt;</code>: <strong>无符号右移</strong></p>\n<p>低位溢出，高位补0。无符号为的意思就是把符号位当作数字位看待.</p>\n<p><img src=\"../../../../img/AnOperation/image-20220324140346226.png\" alt=\"image-20220324140346226\"></p>\n<h1 id=\"二、使用位运算符解决问题\"><a href=\"#二、使用位运算符解决问题\" class=\"headerlink\" title=\"二、使用位运算符解决问题\"></a>二、使用位运算符解决问题</h1><h2 id=\"1、求一个整数的二进制表示中1的个数\"><a href=\"#1、求一个整数的二进制表示中1的个数\" class=\"headerlink\" title=\"1、求一个整数的二进制表示中1的个数\"></a>1、求一个整数的二进制表示中1的个数</h2><p>最常用的方法就是/2 ,%2法，其实我们还可以通过位运算符&gt;&gt;&gt;和&amp;来解决这个问题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我们知道&amp;运算符，只有在两个操作数都是1的情况下结果才为1.那么我们可以让该数&gt;&gt;&gt;(无符号右移) 同时 &amp;上1</span><br><span class=\"line\">只要&gt;&gt;&gt;后的数不为0，就一直&amp; 1</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">fun</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span>((n &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">         count++;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">        n = n &gt;&gt;&gt; <span class=\"number\">1</span>; <span class=\"comment\">//&gt;&gt;&gt;无符号右移，避免死循环</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(count);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上述方法并不是最优，我们还可以用另外一种方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">fun</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        n = n &amp; (n - <span class=\"number\">1</span>);  <span class=\"comment\">//一个整数n，每次 n &amp; (n - 1) 就会少一个 1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.peintln(count);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、分别输出一个整数二进制表示的奇数位序列和偶数位序列\"><a href=\"#2、分别输出一个整数二进制表示的奇数位序列和偶数位序列\" class=\"headerlink\" title=\"2、分别输出一个整数二进制表示的奇数位序列和偶数位序列\"></a>2、分别输出一个整数二进制表示的奇数位序列和偶数位序列</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">fun</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">31</span>;i &gt;= <span class=\"number\">0</span>;i -= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        System.out.println(((n &gt;&gt; i) &amp; <span class=\"number\">1</span>) + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">30</span>;i &gt;= <span class=\"number\">0</span>;i -= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        System.out.peintln(((n &gt;&gt; i) &amp; <span class=\"number\">1</span> ) + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、一组数据中，有一个数据只出现了一次，其他数据都出现了两次，求只出现一次的数据是哪个\"><a href=\"#3、一组数据中，有一个数据只出现了一次，其他数据都出现了两次，求只出现一次的数据是哪个\" class=\"headerlink\" title=\"3、一组数据中，有一个数据只出现了一次，其他数据都出现了两次，求只出现一次的数据是哪个\"></a>3、一组数据中，有一个数据只出现了一次，其他数据都出现了两次，求只出现一次的数据是哪个</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">fun</span><span class=\"params\">(<span class=\"keyword\">int</span>[] array)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; array.length;i++) &#123;</span><br><span class=\"line\">        res = res ^ array[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.peintln(res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"三、位运算符与加减运算符之间的关系及实际运用。\"><a href=\"#三、位运算符与加减运算符之间的关系及实际运用。\" class=\"headerlink\" title=\"三、位运算符与加减运算符之间的关系及实际运用。\"></a>三、位运算符与加减运算符之间的关系及实际运用。</h1><p>关系：位运算符比加减运算符运算速度更快。一般能用位运算的就用位运算符。</p>\n<p>实际运用：</p>\n<p>实例1：输入一个整数，输出该数二进制表示中1的个数，如：9的二进制表示是1001，有2位是1，因此如果输入9，该函数输出2.</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>输入</th>\n<th>二进制表示</th>\n<th>输出</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>9</td>\n<td>0000 0000 0000 0000 0000 0000 0000 1001</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>第一种思路：使用 &gt;&gt; 运算符，将数据右移，不断与数字 1做与 &amp; 运算，若与运算结果为1，则该位置二进制表示为1，否则为0；</p>\n<p>代码实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">9</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+a+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(a)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(a));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumOf1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(n!=<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((n&amp;<span class=\"number\">1</span>)==<span class=\"number\">1</span>)</span><br><span class=\"line\">                number++;</span><br><span class=\"line\">            n=n&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>程序执行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字 9 在内存中得二进制表示为：1001  二进制表示法包含的位数是：2</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure>\n<p>问题：<br>       存在问题，移位运算中，当n时正数时，右移的话，最左面补0<br>        正值&gt;&gt; 左面补0     负值&gt;&gt; 左面补1   正负&lt;&lt;  右面补0</p>\n<p>在本段代码中，当a是负数时，右移的话，最左面补位补的是1，一直右移就一直补1.会造成死循环 （1000）&gt;&gt;(1100)&gt;&gt;(1110)&gt;&gt;(1111)&gt;&gt;…&gt;&gt;1111。思考：有没有什么方法，让正负数 在 &gt;&gt; 操作时，左面均补位0 ？  答案： &gt;&gt;&gt; 操作。</p>\n<p>另外，如果我们首先判断数据是否是负值，负值的话，将数据变为相反数，即正值再判断1的个数，这种方法是不可取的，因为在内存中数据存储的是补码。不是源码。我们判断的是数据的补码中 1 出现的次数。将数据变为相反数后，数据在内存中表示，不止符号位发生变化，数据位也发生变化。</p>\n<p>第二种思路：使用 &gt;&gt;&gt; 运算符，将数据右移，不断与数字 1做与 &amp; 运算，若与运算结果为1，则该位置二进制表示为1，否则为0；</p>\n<p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">9</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b=-<span class=\"number\">9</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+a+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(a)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(a));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+b+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(b)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(b));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumOf1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(n!=<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((n&amp;<span class=\"number\">1</span>)==<span class=\"number\">1</span>)</span><br><span class=\"line\">                number++;</span><br><span class=\"line\">            n=n&gt;&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>程序执行结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字 9 在内存中得二进制表示为：1001  二进制表示法包含的位数是：2</span><br><span class=\"line\">数字 -9 在内存中得二进制表示为：11111111111111111111111111110111  二进制表示法包含的位数是：31</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure></p>\n<p>第三种思路：使用  &lt;&lt; 运算符，flag=1，将flag左移，不断与数字 n做与 &amp; 运算，若与运算结果不为0，则该位置二进制表示为1，否则为0直至flag为0；</p>\n<p>这里红色字体：与运算结果不为0。与运算结果情况有两种</p>\n<ol>\n<li><p>与数据位 &amp; ，结果大于0；</p>\n</li>\n<li><p>与符号位 &amp; ，若数据是负数，即符号位为1，则与结果- 2147483648（写个实例看看为何是这个数字），即： 是负数 ，若数据是正数，即符号位为0，则与结果为0。</p>\n</li>\n</ol>\n<p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">9</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b=-<span class=\"number\">9</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+a+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(a)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(a));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+b+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(b)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(b));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumOf1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(flag!=<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((flag&amp;n) != <span class=\"number\">0</span>)</span><br><span class=\"line\">                number++;</span><br><span class=\"line\">            flag=flag&lt;&lt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>程序执行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字 9 在内存中得二进制表示为：1001  二进制表示法包含的位数是：2</span><br><span class=\"line\">数字 -9 在内存中得二进制表示为：11111111111111111111111111110111  二进制表示法包含的位数是：31</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure>\n<p>第四种思路：有没有什么方法，只在1出现时计算，0时不计算？</p>\n<p>对于任意数据n，n-1操作是将n的二进制表示中，最右面的1变为0，且最右面1的后面部分全取反。n=n &amp; (n-1)，则是将n的二进制表示中，最右面的1的后面全变为0。利用这一特性，统计二进制表示中1的个数。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>n-1</th>\n<th>n=n &amp; (n-1)</th>\n<th>二进制表示中1出现的次数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>11 - 0001 0011</td>\n<td>10 - 0001 0010</td>\n<td>10 - 0001 0010</td>\n<td>1</td>\n</tr>\n<tr>\n<td>10 - 0001 0010</td>\n<td>9 - 0001 0001</td>\n<td>8 - 0001 0000</td>\n<td>2</td>\n</tr>\n<tr>\n<td>8 - 0001 0000</td>\n<td>7- 0000 1111</td>\n<td>0 - 0000 0000</td>\n<td>3</td>\n</tr>\n<tr>\n<td>0 - 0000 0000</td>\n<td>结束</td>\n<td></td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">9</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b=-<span class=\"number\">9</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+a+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(a)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(a));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+b+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(b)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(b));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumOf1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(n!=<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            number++;</span><br><span class=\"line\">            n=n&amp;(n-<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>程序执行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字 9 在内存中得二进制表示为：1001  二进制表示法包含的位数是：2</span><br><span class=\"line\">数字 -9 在内存中得二进制表示为：11111111111111111111111111110111  二进制表示法包含的位数是：31</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure>\n<p>其他应用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**用一条语句判断一个整数是不是2的整数次方 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">is2</span><span class=\"params\">(<span class=\"keyword\">int</span> number)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((number&amp;(number-<span class=\"number\">1</span>))==<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**判断两个整数m和n，计算需要改变m的二进制表示中的多少位才能得到n */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">Getn</span><span class=\"params\">(<span class=\"keyword\">int</span> m,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> dif=m^n;<span class=\"comment\">//一共有多少不同的位</span></span><br><span class=\"line\">    <span class=\"comment\">//求dif中的1的位置</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(dif!=<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        number++;</span><br><span class=\"line\">        dif=dif&amp;(dif-<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/** 题目：不使用加减乘除，完成两个数字的加法操作*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> num1, <span class=\"keyword\">int</span> num2)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (num2 != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        sum = (num1 ^ num2);</span><br><span class=\"line\">        num2 = (num1 &amp; num2) &lt;&lt; <span class=\"number\">1</span>;</span><br><span class=\"line\">        num1 = sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/** n除以2 n/2 ，只取整数部分  (n是正数情况下成立) */</span></span><br><span class=\"line\">n&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">/** n乘以2 n/2 （正负数均成立）*/</span></span><br><span class=\"line\">n&lt;&lt;<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n","more":"<h1 id=\"一、位运算符\"><a href=\"#一、位运算符\" class=\"headerlink\" title=\"一、位运算符\"></a>一、位运算符</h1><p>Java中支持的位运算符</p>\n<p>&amp;：按位与</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>操作数1</th>\n<th>操作数2</th>\n<th>&amp;</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>总结：</strong>只有两个操作数都为1时，按位与操作的结果才为1，否则为0。（有0结果就为0）</p>\n<p>|：按位或</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>操作数1</th>\n<th>操作数2</th>\n<th>\\</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>总结：只要两个操作数中有一个为1，按位或的结果就为1，否则为0。（有1结果就为1）</p>\n<p>~：按位非</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>操作数</th>\n<th>~</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>操作数1</th>\n<th>操作数2</th>\n<th>^</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>总结：两个操作数相异则为1，相同则为0。<sunfy-line></p>\n<p>&lt;&lt;：左移</p>\n<p>符号位不变，低位补0.</p>\n<p><img src=\"../../../../img/AnOperation/image-20220324140131742.png\" alt=\"image-20220324140131742\"></p>\n<p><code>&gt;&gt;</code>: 右移</p>\n<p>低位溢出，符号位不变，高位溢出补符号位.</p>\n<p><img src=\"../../../../img/AnOperation/image-20220324140255497.png\" alt=\"image-20220324140255497\"></p>\n<p><code>&gt;&gt;&gt;</code>: <strong>无符号右移</strong></p>\n<p>低位溢出，高位补0。无符号为的意思就是把符号位当作数字位看待.</p>\n<p><img src=\"../../../../img/AnOperation/image-20220324140346226.png\" alt=\"image-20220324140346226\"></p>\n<h1 id=\"二、使用位运算符解决问题\"><a href=\"#二、使用位运算符解决问题\" class=\"headerlink\" title=\"二、使用位运算符解决问题\"></a>二、使用位运算符解决问题</h1><h2 id=\"1、求一个整数的二进制表示中1的个数\"><a href=\"#1、求一个整数的二进制表示中1的个数\" class=\"headerlink\" title=\"1、求一个整数的二进制表示中1的个数\"></a>1、求一个整数的二进制表示中1的个数</h2><p>最常用的方法就是/2 ,%2法，其实我们还可以通过位运算符&gt;&gt;&gt;和&amp;来解决这个问题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我们知道&amp;运算符，只有在两个操作数都是1的情况下结果才为1.那么我们可以让该数&gt;&gt;&gt;(无符号右移) 同时 &amp;上1</span><br><span class=\"line\">只要&gt;&gt;&gt;后的数不为0，就一直&amp; 1</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">fun</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span>((n &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">         count++;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">        n = n &gt;&gt;&gt; <span class=\"number\">1</span>; <span class=\"comment\">//&gt;&gt;&gt;无符号右移，避免死循环</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(count);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上述方法并不是最优，我们还可以用另外一种方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">fun</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        n = n &amp; (n - <span class=\"number\">1</span>);  <span class=\"comment\">//一个整数n，每次 n &amp; (n - 1) 就会少一个 1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.peintln(count);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、分别输出一个整数二进制表示的奇数位序列和偶数位序列\"><a href=\"#2、分别输出一个整数二进制表示的奇数位序列和偶数位序列\" class=\"headerlink\" title=\"2、分别输出一个整数二进制表示的奇数位序列和偶数位序列\"></a>2、分别输出一个整数二进制表示的奇数位序列和偶数位序列</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">fun</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">31</span>;i &gt;= <span class=\"number\">0</span>;i -= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        System.out.println(((n &gt;&gt; i) &amp; <span class=\"number\">1</span>) + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">30</span>;i &gt;= <span class=\"number\">0</span>;i -= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        System.out.peintln(((n &gt;&gt; i) &amp; <span class=\"number\">1</span> ) + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3、一组数据中，有一个数据只出现了一次，其他数据都出现了两次，求只出现一次的数据是哪个\"><a href=\"#3、一组数据中，有一个数据只出现了一次，其他数据都出现了两次，求只出现一次的数据是哪个\" class=\"headerlink\" title=\"3、一组数据中，有一个数据只出现了一次，其他数据都出现了两次，求只出现一次的数据是哪个\"></a>3、一组数据中，有一个数据只出现了一次，其他数据都出现了两次，求只出现一次的数据是哪个</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">fun</span><span class=\"params\">(<span class=\"keyword\">int</span>[] array)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; array.length;i++) &#123;</span><br><span class=\"line\">        res = res ^ array[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.peintln(res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"三、位运算符与加减运算符之间的关系及实际运用。\"><a href=\"#三、位运算符与加减运算符之间的关系及实际运用。\" class=\"headerlink\" title=\"三、位运算符与加减运算符之间的关系及实际运用。\"></a>三、位运算符与加减运算符之间的关系及实际运用。</h1><p>关系：位运算符比加减运算符运算速度更快。一般能用位运算的就用位运算符。</p>\n<p>实际运用：</p>\n<p>实例1：输入一个整数，输出该数二进制表示中1的个数，如：9的二进制表示是1001，有2位是1，因此如果输入9，该函数输出2.</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>输入</th>\n<th>二进制表示</th>\n<th>输出</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>9</td>\n<td>0000 0000 0000 0000 0000 0000 0000 1001</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>第一种思路：使用 &gt;&gt; 运算符，将数据右移，不断与数字 1做与 &amp; 运算，若与运算结果为1，则该位置二进制表示为1，否则为0；</p>\n<p>代码实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">9</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+a+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(a)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(a));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumOf1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(n!=<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((n&amp;<span class=\"number\">1</span>)==<span class=\"number\">1</span>)</span><br><span class=\"line\">                number++;</span><br><span class=\"line\">            n=n&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>程序执行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字 9 在内存中得二进制表示为：1001  二进制表示法包含的位数是：2</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure>\n<p>问题：<br>       存在问题，移位运算中，当n时正数时，右移的话，最左面补0<br>        正值&gt;&gt; 左面补0     负值&gt;&gt; 左面补1   正负&lt;&lt;  右面补0</p>\n<p>在本段代码中，当a是负数时，右移的话，最左面补位补的是1，一直右移就一直补1.会造成死循环 （1000）&gt;&gt;(1100)&gt;&gt;(1110)&gt;&gt;(1111)&gt;&gt;…&gt;&gt;1111。思考：有没有什么方法，让正负数 在 &gt;&gt; 操作时，左面均补位0 ？  答案： &gt;&gt;&gt; 操作。</p>\n<p>另外，如果我们首先判断数据是否是负值，负值的话，将数据变为相反数，即正值再判断1的个数，这种方法是不可取的，因为在内存中数据存储的是补码。不是源码。我们判断的是数据的补码中 1 出现的次数。将数据变为相反数后，数据在内存中表示，不止符号位发生变化，数据位也发生变化。</p>\n<p>第二种思路：使用 &gt;&gt;&gt; 运算符，将数据右移，不断与数字 1做与 &amp; 运算，若与运算结果为1，则该位置二进制表示为1，否则为0；</p>\n<p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">9</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b=-<span class=\"number\">9</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+a+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(a)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(a));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+b+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(b)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(b));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumOf1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(n!=<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((n&amp;<span class=\"number\">1</span>)==<span class=\"number\">1</span>)</span><br><span class=\"line\">                number++;</span><br><span class=\"line\">            n=n&gt;&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>程序执行结果：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字 9 在内存中得二进制表示为：1001  二进制表示法包含的位数是：2</span><br><span class=\"line\">数字 -9 在内存中得二进制表示为：11111111111111111111111111110111  二进制表示法包含的位数是：31</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure></p>\n<p>第三种思路：使用  &lt;&lt; 运算符，flag=1，将flag左移，不断与数字 n做与 &amp; 运算，若与运算结果不为0，则该位置二进制表示为1，否则为0直至flag为0；</p>\n<p>这里红色字体：与运算结果不为0。与运算结果情况有两种</p>\n<ol>\n<li><p>与数据位 &amp; ，结果大于0；</p>\n</li>\n<li><p>与符号位 &amp; ，若数据是负数，即符号位为1，则与结果- 2147483648（写个实例看看为何是这个数字），即： 是负数 ，若数据是正数，即符号位为0，则与结果为0。</p>\n</li>\n</ol>\n<p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">9</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b=-<span class=\"number\">9</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+a+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(a)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(a));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+b+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(b)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(b));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumOf1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(flag!=<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((flag&amp;n) != <span class=\"number\">0</span>)</span><br><span class=\"line\">                number++;</span><br><span class=\"line\">            flag=flag&lt;&lt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>程序执行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字 9 在内存中得二进制表示为：1001  二进制表示法包含的位数是：2</span><br><span class=\"line\">数字 -9 在内存中得二进制表示为：11111111111111111111111111110111  二进制表示法包含的位数是：31</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure>\n<p>第四种思路：有没有什么方法，只在1出现时计算，0时不计算？</p>\n<p>对于任意数据n，n-1操作是将n的二进制表示中，最右面的1变为0，且最右面1的后面部分全取反。n=n &amp; (n-1)，则是将n的二进制表示中，最右面的1的后面全变为0。利用这一特性，统计二进制表示中1的个数。</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>n-1</th>\n<th>n=n &amp; (n-1)</th>\n<th>二进制表示中1出现的次数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>11 - 0001 0011</td>\n<td>10 - 0001 0010</td>\n<td>10 - 0001 0010</td>\n<td>1</td>\n</tr>\n<tr>\n<td>10 - 0001 0010</td>\n<td>9 - 0001 0001</td>\n<td>8 - 0001 0000</td>\n<td>2</td>\n</tr>\n<tr>\n<td>8 - 0001 0000</td>\n<td>7- 0000 1111</td>\n<td>0 - 0000 0000</td>\n<td>3</td>\n</tr>\n<tr>\n<td>0 - 0000 0000</td>\n<td>结束</td>\n<td></td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a=<span class=\"number\">9</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> b=-<span class=\"number\">9</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+a+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(a)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(a));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"数字 \"</span>+b+<span class=\"string\">\" 在内存中得二进制表示为：\"</span>+Integer.toBinaryString(b)+</span><br><span class=\"line\">                <span class=\"string\">\"  二进制表示法包含的位数是：\"</span>+ getNumOf1(b));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getNumOf1</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(n!=<span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            number++;</span><br><span class=\"line\">            n=n&amp;(n-<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>程序执行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数字 9 在内存中得二进制表示为：1001  二进制表示法包含的位数是：2</span><br><span class=\"line\">数字 -9 在内存中得二进制表示为：11111111111111111111111111110111  二进制表示法包含的位数是：31</span><br><span class=\"line\">Process finished with exit code 0</span><br></pre></td></tr></table></figure>\n<p>其他应用：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**用一条语句判断一个整数是不是2的整数次方 */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">is2</span><span class=\"params\">(<span class=\"keyword\">int</span> number)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((number&amp;(number-<span class=\"number\">1</span>))==<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/**判断两个整数m和n，计算需要改变m的二进制表示中的多少位才能得到n */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">Getn</span><span class=\"params\">(<span class=\"keyword\">int</span> m,<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> dif=m^n;<span class=\"comment\">//一共有多少不同的位</span></span><br><span class=\"line\">    <span class=\"comment\">//求dif中的1的位置</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> number=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(dif!=<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        number++;</span><br><span class=\"line\">        dif=dif&amp;(dif-<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> number;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/** 题目：不使用加减乘除，完成两个数字的加法操作*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> num1, <span class=\"keyword\">int</span> num2)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (num2 != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        sum = (num1 ^ num2);</span><br><span class=\"line\">        num2 = (num1 &amp; num2) &lt;&lt; <span class=\"number\">1</span>;</span><br><span class=\"line\">        num1 = sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/** n除以2 n/2 ，只取整数部分  (n是正数情况下成立) */</span></span><br><span class=\"line\">n&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">/** n乘以2 n/2 （正负数均成立）*/</span></span><br><span class=\"line\">n&lt;&lt;<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n","next":{"title":"uniapp(微信小程序) markdown最佳渲染方案","path":"api/articles/resource-desk-vue-uniapp-微信小程序-markdown最佳渲染方案.json","image":"/img/header_img/desk/uniapp.png","num_read":1092,"num_like":399,"num_collection":104,"num_comments":160},"prev":{"title":"Spring启动过程源码解析","path":"api/articles/resource-Spring-Spring-Spring启动过程源码解析.json","image":"/img/header_img/spring/process.png","num_read":1187,"num_like":861,"num_collection":395,"num_comments":185},"categories":[{"name":"Java","path":"api/categories/Java.json","pathContent":"api/categories/Java","description":"知识点、常用功能","cover":"https://sunfy9.gitee.io/project/photo/project/java.png"}],"tags":[]}