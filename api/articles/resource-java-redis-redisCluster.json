{"title":"Redis集群搭建","num_read":1545,"num_like":1056,"num_collection":659,"num_comments":130,"slug":"resource-java-redis-redisCluster","date":"2019-11-22T16:00:00.000Z","img":"/img/header_img/java/redis-sentinel.jpg","_id":"clhrbp2db006po5lg78z3dyjd","site":{"data":{}},"updated":"2022-09-20T01:46:34.664Z","author":"Sunfy","comments":true,"path":"api/articles/resource-java-redis-redisCluster.json","webPath":"2019/11/23/resource-java-redis-redisCluster/","permalink":"https://sunfy9.gitee.io/2019/11/23/resource-java-redis-redisCluster/","excerpt":"Redis集群架构搭建。","covers":["../../../../img/redisCluster/image-20220510092347887.png","../../../../img/redisCluster/image-20220510092428743.png","../../../../img/redisCluster/image-20220510092612918.png","../../../../img/redisCluster/image-20201106095855589.png","../../../../img/redisCluster/image-20201106100219837.png","../../../../img/redisCluster/image-20201106100305703.png","../../../../img/redisCluster/image-20201106112240260.png","../../../../img/redisCluster/image-20201106112529469.png","../../../../img/redisCluster/image-20201106115432547.png","../../../../img/redisCluster/image-20201106120214347.png"],"keywords":"sunfy, hexo-theme-snail","content":"<p>Redis集群架构搭建。<a id=\"more\"></a></p>\n<h3 id=\"Windows搭建基本步骤\"><a href=\"#Windows搭建基本步骤\" class=\"headerlink\" title=\"Windows搭建基本步骤\"></a>Windows搭建基本步骤</h3><p>打开redis文件路径，打开cmd.exe，在相应路径下运行</p>\n<p><code>redis-server --service-install redis.windows.conf --loglevel verbose --service-name Redis6379</code></p>\n<p>执行完成后会在服务中添加一个redis6379的服务</p>\n<p>复制redis6379，粘贴分别命名为redis6380，redis6381然后修改端口和配置主从即可。</p>\n<p><img src=\"../../../../img/redisCluster/image-20220510092347887.png\" alt=\"image-20220510092347887\"></p>\n<p><img src=\"../../../../img/redisCluster/image-20220510092428743.png\" alt=\"image-20220510092428743\"></p>\n<p>修改配置，改端口号port，slaveof</p>\n<p><strong>给从服务器加密码masterauth 配置（忘记了从服务器会没有数据）</strong><br>格式分别为<br>port 6380<br>slaveof 127.0.0.1 6379<br>masterauth +主redis的密码。</p>\n<p>然后分别创建6380和6381服务</p>\n<p><code>redis-server --service-install redis.windows.conf --loglevel verbose --service-name Redis638x</code></p>\n<p><img src=\"../../../../img/redisCluster/image-20220510092612918.png\" alt=\"image-20220510092612918\"></p>\n<h3 id=\"Linux搭建基本步骤\"><a href=\"#Linux搭建基本步骤\" class=\"headerlink\" title=\"Linux搭建基本步骤\"></a>Linux搭建基本步骤</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一步：在第一台机器的/usr/local下创建文件夹redis-cluster，然后在其下面分别创建2个文件夾如下</span><br><span class=\"line\">\t（1）mkdir -p /usr/local/redis-cluster</span><br><span class=\"line\">\t（2）mkdir 8001 8004</span><br><span class=\"line\">第一步：把之前的redis.conf配置文件copy到8001下，修改如下内容：</span><br><span class=\"line\">\t（1）daemonize yes</span><br><span class=\"line\">    （2）port 8001（分别对每个机器的端口号进行设置）</span><br><span class=\"line\">    （3）dir /usr/local/redis-cluster/8001/（指定数据文件存放位置，必须要指定不同的目录位置，不然会丢失数据）</span><br><span class=\"line\">    （4）cluster-enabled yes（启动集群模式）</span><br><span class=\"line\">    （5）cluster-config-file nodes-8001.conf（集群节点信息文件，这里800x最好和port对应上）</span><br><span class=\"line\">    （6）cluster-node-timeout 5000</span><br><span class=\"line\">    （7）# bind 127.0.0.1（bind绑定的是自己机器网卡的ip，如果有多块网卡可以配多个ip，代表允许客户端通过机器的哪些网卡ip去访问，内网一般可以不配置bind，注释掉即可）</span><br><span class=\"line\">     (8)protected-mode  no   （关闭保护模式）</span><br><span class=\"line\">     (9)appendonly yes</span><br><span class=\"line\">设置密码需要增加如下配置：</span><br><span class=\"line\">     (10)requirepass zhuge     (设置redis访问密码)</span><br><span class=\"line\">     (11)masterauth zhuge      (设置集群节点间访问密码，跟上面一致)</span><br><span class=\"line\">第三步：把修改后的配置文件，copy到8004，修改第2、3、5项里的端口号，可以用批量替换：</span><br><span class=\"line\">:%s/源字符串/目的字符串/g </span><br><span class=\"line\">第四步：另外两台机器也需要做上面几步操作，第二台机器用8002和8005，第三台机器用8003和8006</span><br><span class=\"line\">第五步：分别启动6个redis实例，然后检查是否启动成功</span><br><span class=\"line\">    （1）src/redis-server /usr/local/redis-cluster/800*/redis.conf</span><br><span class=\"line\">    （2）ps -ef | grep redis 查看是否启动成功</span><br><span class=\"line\">第六步：用redis-cli创建整个redis集群(redis5以前的版本集群是依靠ruby脚本redis-trib.rb实现)</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 下面命令里的1代表为每个创建的主服务器节点创建一个从服务器节点</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行这条命令需要确认三台机器之间的redis实例要能相互访问，可以先简单把所有机器防火墙关掉，如果不关闭防火墙则需要打开redis服务端口和集群节点gossip通信端口16379(默认是在redis端口号上加1W)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 关闭防火墙</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> systemctl stop firewalld <span class=\"comment\"># 临时关闭防火墙</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> systemctl <span class=\"built_in\">disable</span> firewalld <span class=\"comment\"># 禁止开机启动</span></span></span><br><span class=\"line\">\t（1）/src/redis-cli -a [password] --cluster create --cluster-replicas 1 192.168.0.61:8001 192.168.0.62:8002 192.168.0.63:8003 192.168.0.61:8004 192.168.0.62:8005 192.168.0.63:8006 </span><br><span class=\"line\">第七步：验证集群：</span><br><span class=\"line\">    （1）连接任意一个客户端即可：./redis-cli -c -h -p (-a访问服务端密码，-c表示集群模式，指定ip地址和端口号）</span><br><span class=\"line\">        如：/src/redis-cli -a zhuge -c -h 192.168.0.61 -p 800*</span><br><span class=\"line\">    （2）进行验证： cluster info（查看集群信息）、cluster nodes（查看节点列表）</span><br><span class=\"line\">    （3）进行数据操作验证</span><br><span class=\"line\">\t（4）关闭集群则需要逐个进行关闭，使用命令：</span><br><span class=\"line\">/src/redis-cli -a zhuge -c -h 192.168.0.60 -p 800* shutdown</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建集群确认截图\"><a href=\"#构建集群确认截图\" class=\"headerlink\" title=\"构建集群确认截图\"></a>构建集群确认截图<sunfy-line></h3><p><img src=\"../../../../img/redisCluster/image-20201106095855589.png\" alt=\"image-20201106095855589\"></p>\n<h3 id=\"集群搭建确认\"><a href=\"#集群搭建确认\" class=\"headerlink\" title=\"集群搭建确认\"></a>集群搭建确认</h3><p>任意链接一台集群内客户端，cluster info 查看信息</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106100219837.png\" alt=\"image-20201106100219837\"></p>\n<h3 id=\"节点信息查看\"><a href=\"#节点信息查看\" class=\"headerlink\" title=\"节点信息查看\"></a>节点信息查看</h3><p>使用命令 cluster nodes,也可以在对应的配置目录下找到<code>nodes.conf</code>文件中查看，集群内的所有服务都会有一个对应的nodes 文件</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106100305703.png\" alt=\"image-20201106100305703\"></p>\n<h3 id=\"集群横向扩容\"><a href=\"#集群横向扩容\" class=\"headerlink\" title=\"集群横向扩容\"></a>集群横向扩容</h3><p>配置文件如上，把对应的端口号修改即可</p>\n<p>向集群内添加节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/redis-cli -a [password] --cluster add-node [要添加的ip:端口号] [集群内任一节点ip：端口号]</span><br></pre></td></tr></table></figure>\n<p>此刻可以查看集群节点信息内已经可以看到新增节点信息，新加入节点都是master节点</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106112240260.png\" alt=\"image-20201106112240260\"></p>\n<p>新加入节点并不能直接使用，因为新加入节点没有hash槽，接下来就是分配hash槽</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/redis-cli -a [password] --cluster reshard [集群内任一节点ip：端口号]</span><br><span class=\"line\">How many slots do you want to move (from 1 to 16384)? [输入要给新加入节点分配的槽位个数]</span><br><span class=\"line\">What is the receiving node ID? [待分配槽位节点ID]</span><br><span class=\"line\">Please enter all the source node IDs.</span><br><span class=\"line\">  Type 'all' to use all the nodes as source nodes for the hash slots.</span><br><span class=\"line\">  Type 'done' once you entered all the source nodes IDs.</span><br><span class=\"line\">  [输入all会从所有主节点中抽取槽位，分配给新节点]</span><br><span class=\"line\">Source node 1:all</span><br><span class=\"line\">Do you want to proceed with the proposed reshard plan (yes/no)? yes</span><br><span class=\"line\">随后等待分配槽位完成</span><br></pre></td></tr></table></figure>\n<p>分配槽位完成后查看节点信息如下：</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106112529469.png\" alt=\"image-20201106112529469\"></p>\n<p>然后将8008节点加入集群，加入后同样默认为主节点，然后将8008修改为8007的从节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 连接要变更节点信息的节点</span></span><br><span class=\"line\">src/redis-cli -a zhuge -c -h [变更节点信息的ip] -p [变更节点信息的端口]</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行如下命令</span></span><br><span class=\"line\">cluster replicate [将当前节点分配给哪个主节点的id]</span><br></pre></td></tr></table></figure>\n<p>节点分配前后节点信息对比查看</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106115432547.png\" alt=\"image-20201106115432547\"></p>\n<p>添加节点的工作就完成了</p>\n<hr>\n<p>删除节点</p>\n<p>删除从节点可以直接进行删除，但是主节点不可以，如果直接删除主节点会造成数据丢失</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/redis-cli -a [password] --cluster del-node [要删除节点ip:端口] [删除节点id]</span><br></pre></td></tr></table></figure>\n<p>删除主节点之前需要将主节点的槽位转移给别的槽位，如下操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/redis-cli -a [password] --cluster reshard [要转移槽位节点ip:端口] [转移槽位节点id]</span><br><span class=\"line\">How many slots do you want to move (from 1 to 16384)? [转移槽位个数]</span><br><span class=\"line\">What is the receiving node ID? [将槽位转移到哪个节点的id]</span><br><span class=\"line\">Please enter all the source node IDs.</span><br><span class=\"line\">  Type 'all' to use all the nodes as source nodes for the hash slots.</span><br><span class=\"line\">  Type 'done' once you entered all the source nodes IDs.</span><br><span class=\"line\">Source node 1:[待转移槽位的id]</span><br><span class=\"line\">Source node 2:done</span><br><span class=\"line\">(ps:这里直接输入done 开始生成迁移计划)</span><br><span class=\"line\"> ... ...</span><br><span class=\"line\">Do you want to proceed with the proposed reshard plan (yes/no)? Yes</span><br><span class=\"line\">(ps:这里输入yes开始迁移)</span><br></pre></td></tr></table></figure>\n<p>槽位转移前后节点信息对比</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106120214347.png\" alt=\"image-20201106120214347\"></p>\n<p>转移槽位完成后就可以通过上面删除槽位的命令删除对应的槽位即可</p>\n","more":"</p>\n<h3 id=\"Windows搭建基本步骤\"><a href=\"#Windows搭建基本步骤\" class=\"headerlink\" title=\"Windows搭建基本步骤\"></a>Windows搭建基本步骤</h3><p>打开redis文件路径，打开cmd.exe，在相应路径下运行</p>\n<p><code>redis-server --service-install redis.windows.conf --loglevel verbose --service-name Redis6379</code></p>\n<p>执行完成后会在服务中添加一个redis6379的服务</p>\n<p>复制redis6379，粘贴分别命名为redis6380，redis6381然后修改端口和配置主从即可。</p>\n<p><img src=\"../../../../img/redisCluster/image-20220510092347887.png\" alt=\"image-20220510092347887\"></p>\n<p><img src=\"../../../../img/redisCluster/image-20220510092428743.png\" alt=\"image-20220510092428743\"></p>\n<p>修改配置，改端口号port，slaveof</p>\n<p><strong>给从服务器加密码masterauth 配置（忘记了从服务器会没有数据）</strong><br>格式分别为<br>port 6380<br>slaveof 127.0.0.1 6379<br>masterauth +主redis的密码。</p>\n<p>然后分别创建6380和6381服务</p>\n<p><code>redis-server --service-install redis.windows.conf --loglevel verbose --service-name Redis638x</code></p>\n<p><img src=\"../../../../img/redisCluster/image-20220510092612918.png\" alt=\"image-20220510092612918\"></p>\n<h3 id=\"Linux搭建基本步骤\"><a href=\"#Linux搭建基本步骤\" class=\"headerlink\" title=\"Linux搭建基本步骤\"></a>Linux搭建基本步骤</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一步：在第一台机器的/usr/local下创建文件夹redis-cluster，然后在其下面分别创建2个文件夾如下</span><br><span class=\"line\">\t（1）mkdir -p /usr/local/redis-cluster</span><br><span class=\"line\">\t（2）mkdir 8001 8004</span><br><span class=\"line\">第一步：把之前的redis.conf配置文件copy到8001下，修改如下内容：</span><br><span class=\"line\">\t（1）daemonize yes</span><br><span class=\"line\">    （2）port 8001（分别对每个机器的端口号进行设置）</span><br><span class=\"line\">    （3）dir /usr/local/redis-cluster/8001/（指定数据文件存放位置，必须要指定不同的目录位置，不然会丢失数据）</span><br><span class=\"line\">    （4）cluster-enabled yes（启动集群模式）</span><br><span class=\"line\">    （5）cluster-config-file nodes-8001.conf（集群节点信息文件，这里800x最好和port对应上）</span><br><span class=\"line\">    （6）cluster-node-timeout 5000</span><br><span class=\"line\">    （7）# bind 127.0.0.1（bind绑定的是自己机器网卡的ip，如果有多块网卡可以配多个ip，代表允许客户端通过机器的哪些网卡ip去访问，内网一般可以不配置bind，注释掉即可）</span><br><span class=\"line\">     (8)protected-mode  no   （关闭保护模式）</span><br><span class=\"line\">     (9)appendonly yes</span><br><span class=\"line\">设置密码需要增加如下配置：</span><br><span class=\"line\">     (10)requirepass zhuge     (设置redis访问密码)</span><br><span class=\"line\">     (11)masterauth zhuge      (设置集群节点间访问密码，跟上面一致)</span><br><span class=\"line\">第三步：把修改后的配置文件，copy到8004，修改第2、3、5项里的端口号，可以用批量替换：</span><br><span class=\"line\">:%s/源字符串/目的字符串/g </span><br><span class=\"line\">第四步：另外两台机器也需要做上面几步操作，第二台机器用8002和8005，第三台机器用8003和8006</span><br><span class=\"line\">第五步：分别启动6个redis实例，然后检查是否启动成功</span><br><span class=\"line\">    （1）src/redis-server /usr/local/redis-cluster/800*/redis.conf</span><br><span class=\"line\">    （2）ps -ef | grep redis 查看是否启动成功</span><br><span class=\"line\">第六步：用redis-cli创建整个redis集群(redis5以前的版本集群是依靠ruby脚本redis-trib.rb实现)</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 下面命令里的1代表为每个创建的主服务器节点创建一个从服务器节点</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行这条命令需要确认三台机器之间的redis实例要能相互访问，可以先简单把所有机器防火墙关掉，如果不关闭防火墙则需要打开redis服务端口和集群节点gossip通信端口16379(默认是在redis端口号上加1W)</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 关闭防火墙</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> systemctl stop firewalld <span class=\"comment\"># 临时关闭防火墙</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> systemctl <span class=\"built_in\">disable</span> firewalld <span class=\"comment\"># 禁止开机启动</span></span></span><br><span class=\"line\">\t（1）/src/redis-cli -a [password] --cluster create --cluster-replicas 1 192.168.0.61:8001 192.168.0.62:8002 192.168.0.63:8003 192.168.0.61:8004 192.168.0.62:8005 192.168.0.63:8006 </span><br><span class=\"line\">第七步：验证集群：</span><br><span class=\"line\">    （1）连接任意一个客户端即可：./redis-cli -c -h -p (-a访问服务端密码，-c表示集群模式，指定ip地址和端口号）</span><br><span class=\"line\">        如：/src/redis-cli -a zhuge -c -h 192.168.0.61 -p 800*</span><br><span class=\"line\">    （2）进行验证： cluster info（查看集群信息）、cluster nodes（查看节点列表）</span><br><span class=\"line\">    （3）进行数据操作验证</span><br><span class=\"line\">\t（4）关闭集群则需要逐个进行关闭，使用命令：</span><br><span class=\"line\">/src/redis-cli -a zhuge -c -h 192.168.0.60 -p 800* shutdown</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建集群确认截图\"><a href=\"#构建集群确认截图\" class=\"headerlink\" title=\"构建集群确认截图\"></a>构建集群确认截图<sunfy-line></h3><p><img src=\"../../../../img/redisCluster/image-20201106095855589.png\" alt=\"image-20201106095855589\"></p>\n<h3 id=\"集群搭建确认\"><a href=\"#集群搭建确认\" class=\"headerlink\" title=\"集群搭建确认\"></a>集群搭建确认</h3><p>任意链接一台集群内客户端，cluster info 查看信息</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106100219837.png\" alt=\"image-20201106100219837\"></p>\n<h3 id=\"节点信息查看\"><a href=\"#节点信息查看\" class=\"headerlink\" title=\"节点信息查看\"></a>节点信息查看</h3><p>使用命令 cluster nodes,也可以在对应的配置目录下找到<code>nodes.conf</code>文件中查看，集群内的所有服务都会有一个对应的nodes 文件</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106100305703.png\" alt=\"image-20201106100305703\"></p>\n<h3 id=\"集群横向扩容\"><a href=\"#集群横向扩容\" class=\"headerlink\" title=\"集群横向扩容\"></a>集群横向扩容</h3><p>配置文件如上，把对应的端口号修改即可</p>\n<p>向集群内添加节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/redis-cli -a [password] --cluster add-node [要添加的ip:端口号] [集群内任一节点ip：端口号]</span><br></pre></td></tr></table></figure>\n<p>此刻可以查看集群节点信息内已经可以看到新增节点信息，新加入节点都是master节点</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106112240260.png\" alt=\"image-20201106112240260\"></p>\n<p>新加入节点并不能直接使用，因为新加入节点没有hash槽，接下来就是分配hash槽</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/redis-cli -a [password] --cluster reshard [集群内任一节点ip：端口号]</span><br><span class=\"line\">How many slots do you want to move (from 1 to 16384)? [输入要给新加入节点分配的槽位个数]</span><br><span class=\"line\">What is the receiving node ID? [待分配槽位节点ID]</span><br><span class=\"line\">Please enter all the source node IDs.</span><br><span class=\"line\">  Type 'all' to use all the nodes as source nodes for the hash slots.</span><br><span class=\"line\">  Type 'done' once you entered all the source nodes IDs.</span><br><span class=\"line\">  [输入all会从所有主节点中抽取槽位，分配给新节点]</span><br><span class=\"line\">Source node 1:all</span><br><span class=\"line\">Do you want to proceed with the proposed reshard plan (yes/no)? yes</span><br><span class=\"line\">随后等待分配槽位完成</span><br></pre></td></tr></table></figure>\n<p>分配槽位完成后查看节点信息如下：</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106112529469.png\" alt=\"image-20201106112529469\"></p>\n<p>然后将8008节点加入集群，加入后同样默认为主节点，然后将8008修改为8007的从节点</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 连接要变更节点信息的节点</span></span><br><span class=\"line\">src/redis-cli -a zhuge -c -h [变更节点信息的ip] -p [变更节点信息的端口]</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行如下命令</span></span><br><span class=\"line\">cluster replicate [将当前节点分配给哪个主节点的id]</span><br></pre></td></tr></table></figure>\n<p>节点分配前后节点信息对比查看</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106115432547.png\" alt=\"image-20201106115432547\"></p>\n<p>添加节点的工作就完成了</p>\n<hr>\n<p>删除节点</p>\n<p>删除从节点可以直接进行删除，但是主节点不可以，如果直接删除主节点会造成数据丢失</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/redis-cli -a [password] --cluster del-node [要删除节点ip:端口] [删除节点id]</span><br></pre></td></tr></table></figure>\n<p>删除主节点之前需要将主节点的槽位转移给别的槽位，如下操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src/redis-cli -a [password] --cluster reshard [要转移槽位节点ip:端口] [转移槽位节点id]</span><br><span class=\"line\">How many slots do you want to move (from 1 to 16384)? [转移槽位个数]</span><br><span class=\"line\">What is the receiving node ID? [将槽位转移到哪个节点的id]</span><br><span class=\"line\">Please enter all the source node IDs.</span><br><span class=\"line\">  Type 'all' to use all the nodes as source nodes for the hash slots.</span><br><span class=\"line\">  Type 'done' once you entered all the source nodes IDs.</span><br><span class=\"line\">Source node 1:[待转移槽位的id]</span><br><span class=\"line\">Source node 2:done</span><br><span class=\"line\">(ps:这里直接输入done 开始生成迁移计划)</span><br><span class=\"line\"> ... ...</span><br><span class=\"line\">Do you want to proceed with the proposed reshard plan (yes/no)? Yes</span><br><span class=\"line\">(ps:这里输入yes开始迁移)</span><br></pre></td></tr></table></figure>\n<p>槽位转移前后节点信息对比</p>\n<p><img src=\"../../../../img/redisCluster/image-20201106120214347.png\" alt=\"image-20201106120214347\"></p>\n<p>转移槽位完成后就可以通过上面删除槽位的命令删除对应的槽位即可</p>","next":{"title":"CentOS、windows安装MySql5.7","path":"api/articles/resource-DB-MySQL-MySQl-install.json","image":"/img/header_img/DB/mysql.jpg","num_read":1215,"num_like":931,"num_collection":330,"num_comments":149},"prev":{"title":"批量修改文件后缀名","path":"api/articles/resource-system-Windows-renameFileSuffix.json","image":"/img/header_img/16.gif","num_read":1104,"num_like":214,"num_collection":715,"num_comments":63},"categories":[{"name":"分布式中间件","path":"api/categories/分布式中间件.json","pathContent":"api/categories/分布式中间件","description":"包含Zookeeper、Redis、等相关内容","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}],"tags":[{"name":"Redis","path":"api/tags/Redis.json","pathContent":"api/tags/Redis","description":"[Redis]暂未设置说明","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}