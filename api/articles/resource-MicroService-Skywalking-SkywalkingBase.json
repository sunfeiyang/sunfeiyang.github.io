{"title":"SkyWalking简介","num_read":552,"num_like":680,"num_collection":608,"num_comments":76,"slug":"resource-MicroService-Skywalking-SkywalkingBase","date":"2022-01-09T16:00:00.000Z","img":"/img/header_img/MicroService/SkywalkingBase.png","format":"gallery","_id":"clhrbp2e400dho5lgehqx2i3x","project":"MicroService","type":"hot","subtitle":"分布式系统的应用程序性能监视工具","hot":"collection","site":{"data":{}},"updated":"2022-09-20T02:00:08.284Z","author":"Sunfy","comments":true,"path":"api/articles/resource-MicroService-Skywalking-SkywalkingBase.json","webPath":"2022/01/10/resource-MicroService-Skywalking-SkywalkingBase/","permalink":"https://sunfy9.gitee.io/2022/01/10/resource-MicroService-Skywalking-SkywalkingBase/","excerpt":null,"covers":["../../../../img/SkywalkingBase/clipboard-16421276081381.png","../../../../img/SkywalkingBase/clipboard-16421277822062.png","../../../../img/SkywalkingBase/image-20220114104759271.png","../../../../img/SkywalkingBase/image-20220114103946783.png"],"keywords":"sunfy, hexo-theme-snail","content":"<h1 id=\"SkyWalking是什么\"><a href=\"#SkyWalking是什么\" class=\"headerlink\" title=\"SkyWalking是什么\"></a>SkyWalking是什么</h1><p>对于一个大型的几十个、几百个微服务构成的微服务架构系统，通常会遇到下面一些问题，比如：</p>\n<ul>\n<li>如何串联整个调用链路，快速定位问题？</li>\n<li>如何理清各个微服务之间的依赖关系？</li>\n<li>如何进行各个微服务接口的性能分折？</li>\n<li>如何跟踪整个业务流程的调用处理顺序？</li>\n</ul>\n<p>skywalking是分布式系统的应用程序性能监视工具，专为微服务、云原生架构和基于容器（Docker、K8s、Mesos）架构而设计。SkyWalking 是观察性分析平台和应用性能管理系统，提供分布式追踪、服务网格遥测分析、度量聚合和可视化一体化解决方案。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 官网：http://skywalking.apache.org/</span><br><span class=\"line\">- 下载：http://skywalking.apache.org/downloads/</span><br><span class=\"line\">- Github：https://github.com/apache/skywalking</span><br><span class=\"line\">- 文档： https://skywalking.apache.org/docs/main/v8.4.0/readme/</span><br><span class=\"line\">- 中文文档： https://skyapm.github.io/document-cn-translation-of-skywalking/</span><br></pre></td></tr></table></figure>\n<h2 id=\"调用链选型\"><a href=\"#调用链选型\" class=\"headerlink\" title=\"调用链选型\"></a><strong>调用链选型</strong></h2><ul>\n<li>Zipkin是Twitter开源的调用链分析工具，目前基于springcloud sleuth得到了广泛的使用，特点是轻量，使用部署简单。</li>\n<li>Pinpoint是韩国人开源的基于字节码注入的调用链分析，以及应用监控分析工具。特点是支持多种插件，UI功能强大，接入端无代码侵入。</li>\n<li>SkyWalking是本土开源的基于字节码注入的调用链分析，以及应用监控分析工具。特点是支持多种插件，UI功能较强，接入端无代码侵入。目前已加入Apache孵化器。</li>\n<li>CAT是大众点评开源的基于编码和配置的调用链分析，应用监控分析，日志采集，监控报警等一系列的监控平台工具。<sunfy-line></li>\n</ul>\n<p><img src=\"../../../../img/SkywalkingBase/clipboard-16421276081381.png\" alt=\"img\"></p>\n<h2 id=\"探针性能对比\"><a href=\"#探针性能对比\" class=\"headerlink\" title=\"探针性能对比\"></a><strong>探针性能对比</strong></h2><p>模拟了三种并发用户：500，750，1000。使用jmeter测试，每个线程发送30个请求，设置思考时间为10ms。使用的采样率为1，即100%，这边与生产可能有差别。pinpoint默认的采样率为20，即50%，通过设置agent的配置文件改为100%。zipkin默认也是1。组合起来，一共有12种。下面看下汇总表：</p>\n<p><strong>skywalking的探针对吞吐量的影响最小，zipkin的吞吐量居中。pinpoint的探针对吞吐量的影响较为明显</strong>，在500并发用户时，测试服务的吞吐量从1385降低到774，影响很大。然后再看下CPU和memory的影响，在内部服务器进行的压测，对CPU和memory的影响都差不多在10%之内。</p>\n<h2 id=\"Skywalking主要功能特性\"><a href=\"#Skywalking主要功能特性\" class=\"headerlink\" title=\"Skywalking主要功能特性\"></a>Skywalking主要功能特性</h2><ul>\n<li>1、多种监控手段，可以通过语言探针和service mesh获得监控的数据；</li>\n<li>2、支持多种语言自动探针，包括 Java，.NET Core 和 Node.JS；</li>\n<li>3、轻量高效，无需大数据平台和大量的服务器资源；</li>\n<li>4、模块化，UI、存储、集群管理都有多种机制可选；</li>\n<li>5、支持告警；</li>\n<li>6、优秀的可视化解决方案；</li>\n</ul>\n<h2 id=\"Skywalking整体架构\"><a href=\"#Skywalking整体架构\" class=\"headerlink\" title=\"Skywalking整体架构\"></a>Skywalking整体架构</h2><p><img src=\"../../../../img/SkywalkingBase/clipboard-16421277822062.png\" alt=\"img\"></p>\n<p><strong>四部分：</strong></p>\n<ul>\n<li>1、上部分Agent ：负责从应用中，收集链路信息，发送给 SkyWalking OAP 服务器；</li>\n<li>2、下部分 SkyWalking OAP ：负责接收Agent发送的Tracing数据信息，然后进行分析(Analysis Core)，存储到外部存储器(Storage)，最终提供查询(Query)功能；</li>\n<li>3、右部分Storage：Tracing数据存储，目前支持ES、MySQL、Sharding Sphere、TiDB、H2多种存储器，目前采用较多的是ES，主要考虑是SkyWalking开发团队自己的生产环境采用ES为主；</li>\n<li>4、左部分SkyWalking UI：负责提供控制台，查看链路等等；</li>\n</ul>\n<p><strong>支持三种探针：</strong></p>\n<ul>\n<li>Agent – 基于ByteBuddy字节码增强技术实现，通过jvm的agent参数加载，并在程序启动时拦截指定的方法来收集数据。</li>\n<li>SDK – 程序中显式调用SkyWalking提供的SDK来收集数据，对应用有侵入。</li>\n<li>Service Mesh – 通过Service mesh的网络代理来收集数据。</li>\n</ul>\n<p><strong>后端（Backend）</strong></p>\n<p>接受探针发送过来的数据，进行度量分析，调用链分析和存储。后端主要分为两部分：</p>\n<ul>\n<li>OAP（Observability Analysis Platform）- 进行度量分析和调用链分析的后端平台，并支持将数据存储到各种数据库中，如：ElasticSearch，MySQL，InfluxDB等。</li>\n<li>OAL（Observability Analysis Language）- 用来进行度量分析的DSL，类似于SQL，用于查询度量分析结果和警报。</li>\n</ul>\n<p><strong>界面(UI)</strong></p>\n<ul>\n<li>RocketBot UI – SkyWalking 7.0.0 的默认web UI</li>\n<li>CLI – 命令行界面</li>\n</ul>\n<p><strong>三个模块的交互流程</strong></p>\n<p><img src=\"../../../../img/SkywalkingBase/image-20220114104759271.png\" alt=\"image-20220114104759271\"></p>\n<p><strong>SkyWalking环境搭建部署图示</strong></p>\n<p><img src=\"../../../../img/SkywalkingBase/image-20220114103946783.png\" alt=\"image-20220114103946783\"></p>\n","more":"<h1 id=\"SkyWalking是什么\"><a href=\"#SkyWalking是什么\" class=\"headerlink\" title=\"SkyWalking是什么\"></a>SkyWalking是什么</h1><p>对于一个大型的几十个、几百个微服务构成的微服务架构系统，通常会遇到下面一些问题，比如：</p>\n<ul>\n<li>如何串联整个调用链路，快速定位问题？</li>\n<li>如何理清各个微服务之间的依赖关系？</li>\n<li>如何进行各个微服务接口的性能分折？</li>\n<li>如何跟踪整个业务流程的调用处理顺序？</li>\n</ul>\n<p>skywalking是分布式系统的应用程序性能监视工具，专为微服务、云原生架构和基于容器（Docker、K8s、Mesos）架构而设计。SkyWalking 是观察性分析平台和应用性能管理系统，提供分布式追踪、服务网格遥测分析、度量聚合和可视化一体化解决方案。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 官网：http://skywalking.apache.org/</span><br><span class=\"line\">- 下载：http://skywalking.apache.org/downloads/</span><br><span class=\"line\">- Github：https://github.com/apache/skywalking</span><br><span class=\"line\">- 文档： https://skywalking.apache.org/docs/main/v8.4.0/readme/</span><br><span class=\"line\">- 中文文档： https://skyapm.github.io/document-cn-translation-of-skywalking/</span><br></pre></td></tr></table></figure>\n<h2 id=\"调用链选型\"><a href=\"#调用链选型\" class=\"headerlink\" title=\"调用链选型\"></a><strong>调用链选型</strong></h2><ul>\n<li>Zipkin是Twitter开源的调用链分析工具，目前基于springcloud sleuth得到了广泛的使用，特点是轻量，使用部署简单。</li>\n<li>Pinpoint是韩国人开源的基于字节码注入的调用链分析，以及应用监控分析工具。特点是支持多种插件，UI功能强大，接入端无代码侵入。</li>\n<li>SkyWalking是本土开源的基于字节码注入的调用链分析，以及应用监控分析工具。特点是支持多种插件，UI功能较强，接入端无代码侵入。目前已加入Apache孵化器。</li>\n<li>CAT是大众点评开源的基于编码和配置的调用链分析，应用监控分析，日志采集，监控报警等一系列的监控平台工具。<sunfy-line></li>\n</ul>\n<p><img src=\"../../../../img/SkywalkingBase/clipboard-16421276081381.png\" alt=\"img\"></p>\n<h2 id=\"探针性能对比\"><a href=\"#探针性能对比\" class=\"headerlink\" title=\"探针性能对比\"></a><strong>探针性能对比</strong></h2><p>模拟了三种并发用户：500，750，1000。使用jmeter测试，每个线程发送30个请求，设置思考时间为10ms。使用的采样率为1，即100%，这边与生产可能有差别。pinpoint默认的采样率为20，即50%，通过设置agent的配置文件改为100%。zipkin默认也是1。组合起来，一共有12种。下面看下汇总表：</p>\n<p><strong>skywalking的探针对吞吐量的影响最小，zipkin的吞吐量居中。pinpoint的探针对吞吐量的影响较为明显</strong>，在500并发用户时，测试服务的吞吐量从1385降低到774，影响很大。然后再看下CPU和memory的影响，在内部服务器进行的压测，对CPU和memory的影响都差不多在10%之内。</p>\n<h2 id=\"Skywalking主要功能特性\"><a href=\"#Skywalking主要功能特性\" class=\"headerlink\" title=\"Skywalking主要功能特性\"></a>Skywalking主要功能特性</h2><ul>\n<li>1、多种监控手段，可以通过语言探针和service mesh获得监控的数据；</li>\n<li>2、支持多种语言自动探针，包括 Java，.NET Core 和 Node.JS；</li>\n<li>3、轻量高效，无需大数据平台和大量的服务器资源；</li>\n<li>4、模块化，UI、存储、集群管理都有多种机制可选；</li>\n<li>5、支持告警；</li>\n<li>6、优秀的可视化解决方案；</li>\n</ul>\n<h2 id=\"Skywalking整体架构\"><a href=\"#Skywalking整体架构\" class=\"headerlink\" title=\"Skywalking整体架构\"></a>Skywalking整体架构</h2><p><img src=\"../../../../img/SkywalkingBase/clipboard-16421277822062.png\" alt=\"img\"></p>\n<p><strong>四部分：</strong></p>\n<ul>\n<li>1、上部分Agent ：负责从应用中，收集链路信息，发送给 SkyWalking OAP 服务器；</li>\n<li>2、下部分 SkyWalking OAP ：负责接收Agent发送的Tracing数据信息，然后进行分析(Analysis Core)，存储到外部存储器(Storage)，最终提供查询(Query)功能；</li>\n<li>3、右部分Storage：Tracing数据存储，目前支持ES、MySQL、Sharding Sphere、TiDB、H2多种存储器，目前采用较多的是ES，主要考虑是SkyWalking开发团队自己的生产环境采用ES为主；</li>\n<li>4、左部分SkyWalking UI：负责提供控制台，查看链路等等；</li>\n</ul>\n<p><strong>支持三种探针：</strong></p>\n<ul>\n<li>Agent – 基于ByteBuddy字节码增强技术实现，通过jvm的agent参数加载，并在程序启动时拦截指定的方法来收集数据。</li>\n<li>SDK – 程序中显式调用SkyWalking提供的SDK来收集数据，对应用有侵入。</li>\n<li>Service Mesh – 通过Service mesh的网络代理来收集数据。</li>\n</ul>\n<p><strong>后端（Backend）</strong></p>\n<p>接受探针发送过来的数据，进行度量分析，调用链分析和存储。后端主要分为两部分：</p>\n<ul>\n<li>OAP（Observability Analysis Platform）- 进行度量分析和调用链分析的后端平台，并支持将数据存储到各种数据库中，如：ElasticSearch，MySQL，InfluxDB等。</li>\n<li>OAL（Observability Analysis Language）- 用来进行度量分析的DSL，类似于SQL，用于查询度量分析结果和警报。</li>\n</ul>\n<p><strong>界面(UI)</strong></p>\n<ul>\n<li>RocketBot UI – SkyWalking 7.0.0 的默认web UI</li>\n<li>CLI – 命令行界面</li>\n</ul>\n<p><strong>三个模块的交互流程</strong></p>\n<p><img src=\"../../../../img/SkywalkingBase/image-20220114104759271.png\" alt=\"image-20220114104759271\"></p>\n<p><strong>SkyWalking环境搭建部署图示</strong></p>\n<p><img src=\"../../../../img/SkywalkingBase/image-20220114103946783.png\" alt=\"image-20220114103946783\"></p>\n","next":{"title":"Redis实现分布式锁","path":"api/articles/resource-MicroService-seata-DistributedLockRedis.json","image":"/img/header_img/MicroService/distributedTransactionRedis.PNG","num_read":223,"num_like":70,"num_collection":744,"num_comments":97},"prev":{"title":"IDEA导入eclipse项目","path":"api/articles/resource-tools-IDEA-IDEA-eclipse.json","image":"/img/header_img/tools/idea/importEclipse.png","num_read":811,"num_like":274,"num_collection":294,"num_comments":133},"categories":[{"name":"微服务","path":"api/categories/微服务.json","pathContent":"api/categories/微服务","description":"一种云原生框架方法，其中单个应用程序由许多松散耦合且可独立部署的较小组件或服务组成","cover":"https://sunfy9.gitee.io/project/photo/project/MicroService.PNG"}],"tags":[{"name":"SkyWalking","path":"api/tags/SkyWalking.json","pathContent":"api/tags/SkyWalking","description":"[SkyWalking]暂未设置说明","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}