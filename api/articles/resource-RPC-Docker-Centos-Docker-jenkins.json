{"title":"Docker 搭建 Jenkins 实现自动部署","num_read":1761,"num_like":502,"num_collection":61,"num_comments":179,"slug":"resource-RPC-Docker-Centos-Docker-jenkins","date":"2020-11-01T16:00:00.000Z","img":"/img/header_img/docker/docker.jpg","_id":"clhrbp2fn00eso5lg088jgqmz","project":"RPC","site":{"data":{}},"updated":"2022-09-20T02:05:36.707Z","author":"Sunfy","comments":true,"path":"api/articles/resource-RPC-Docker-Centos-Docker-jenkins.json","webPath":"2020/11/02/resource-RPC-Docker-Centos-Docker-jenkins/","permalink":"https://sunfy9.gitee.io/2020/11/02/resource-RPC-Docker-Centos-Docker-jenkins/","excerpt":"Docker 搭建 Jenkins 实现自动部署","covers":["../../../../img/Centos-Docker-jenkins/image-20210222230257822.png","../../../../img/Centos-Docker-jenkins/image-20210222230336460.png","../../../../img/Centos-Docker-jenkins/image-20210222230353895.png","../../../../img/Centos-Docker-jenkins/image-20210222230422305.png","../../../../img/Centos-Docker-jenkins/image-20210222230437518.png","../../../../img/Centos-Docker-jenkins/image-20210222230458505.png","../../../../img/Centos-Docker-jenkins/image-20210222230522215.png","../../../../img/Centos-Docker-jenkins/image-20210222230703546.png","../../../../img/Centos-Docker-jenkins/image-20210222230604348.png","../../../../img/Centos-Docker-jenkins/image-20210222230616065.png","../../../../img/Centos-Docker-jenkins/image-20210222230629441.png"],"keywords":"sunfy, hexo-theme-snail","content":"<p>Docker 搭建 Jenkins 实现自动部署<a id=\"more\"></a></p>\n<p>自动化部署（持续集成 / CI + 持续交付 / CD）不仅可以提升开发效率，让程序员更专注产品与业务的开发，还可以节省很多运维成本以及提升运维效率。其中，Jenkins 是自动化部署中最流行的工具，尤其是 Docker+Jenkins 的完美搭配，每个程序员都应该掌握这两个工具的使用。</p>\n<p>环境配置<br>操作系统：CentOS Linux release 7.6.1810<br>Docker 版本：19.03.5<br>Jenkins 版本：2.204.1<br>Docker 安装 Jenkins<br>Docker 下载 Jenkins<br>docker pull jenkins/jenkins:lts //最新版<br>查看 Jenkins 镜像<br>docker images<br>docker inspect jenkins镜像ID</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230257822.png\" alt=\"image-20210222230257822\"></p>\n<p>创建一个 Jenkins 目录<br>mkdir /data/jenkins_home;<br>安装启动 Jenkins 容器<br>docker run -d —name jenkins -p 8081:8080 -v /data/jenkins_home:/var/jenkins_home jenkins/jenkins:lts;<br>备注：<br>-d //启动在后台<br>—name //容器名字<br>-p //端口映射（8081：宿主主机端口，8080：容器内部端口）<br>-v //数据卷挂载映射（/data/jenkins_home：宿主主机目录，另外一个即是容器目录）<br>enkins/jenkins:lts //Jenkins镜像（最新版）<br>查看 Jenkins 启动情况<br>docker ps | grep jenkins;<sunfy-line></p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230336460.png\" alt=\"image-20210222230336460\"></p>\n<p>安装过程遇到的小问题<br>Jenkins 容器 docker run 之后状态总是 Exited<br>查看docker日志 ：<br>docker logs jenkins<br>发现是目前权限问题<br>因为/data/jenkins_home 目录是root权限</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230353895.png\" alt=\"image-20210222230353895\"></p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230422305.png\" alt=\"image-20210222230422305\"></p>\n<p>解决：<br>chown -R 1000:1000 /data/jenkins_home //用户组改变</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230437518.png\" alt=\"image-20210222230437518\"></p>\n<p>宿主主机端口要开启<br>因为本操作是在阿里云ECS上进行安装的，需要在安全组里开放8081此端口。<br>访问 Jenkins<br><a href=\"http://120.26.50.165:8081\" target=\"_blank\" rel=\"noopener\">http://120.26.50.165:8081</a> //ip:端口号<br>管理配置 Jenkins<br>解锁<br>在安装完成后，默认生成了一个登录密码，首次登录需要这个密码。<br>密码路径：var/jenkins_home/secrets/initialAdminPassword //容器内部<br>查找密码：<br>docker exec -it jenkins_01 bash //进入jenkins容器<br>cat /var/jenkins_home/secrets/initialAdminPassword //查看密码</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230458505.png\" alt=\"image-20210222230458505\"></p>\n<p>安装插件<br>新手安装建议选择：Install suggested plugins，安装过程大概半个多小时。</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230522215.png\" alt=\"image-20210222230522215\"></p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230703546.png\" alt=\"image-20210222230703546\"></p>\n<p>管理用户创建<br>这个用户就是最大管理者权限，相当于admin</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230604348.png\" alt=\"image-20210222230604348\"></p>\n<p>Jenkins 配置完成<br>到此步，安装就大功告成！<br><a href=\"http://120.26.50.165:8081\" target=\"_blank\" rel=\"noopener\">http://120.26.50.165:8081</a> //ip:端口号</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230616065.png\" alt=\"image-20210222230616065\"></p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230629441.png\" alt=\"image-20210222230629441\"></p>\n<p>实现自动化部署<br>有了Jenkins，接下来就是代码的自动部署过程了。</p>\n","more":"</p>\n<p>自动化部署（持续集成 / CI + 持续交付 / CD）不仅可以提升开发效率，让程序员更专注产品与业务的开发，还可以节省很多运维成本以及提升运维效率。其中，Jenkins 是自动化部署中最流行的工具，尤其是 Docker+Jenkins 的完美搭配，每个程序员都应该掌握这两个工具的使用。</p>\n<p>环境配置<br>操作系统：CentOS Linux release 7.6.1810<br>Docker 版本：19.03.5<br>Jenkins 版本：2.204.1<br>Docker 安装 Jenkins<br>Docker 下载 Jenkins<br>docker pull jenkins/jenkins:lts //最新版<br>查看 Jenkins 镜像<br>docker images<br>docker inspect jenkins镜像ID</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230257822.png\" alt=\"image-20210222230257822\"></p>\n<p>创建一个 Jenkins 目录<br>mkdir /data/jenkins_home;<br>安装启动 Jenkins 容器<br>docker run -d —name jenkins -p 8081:8080 -v /data/jenkins_home:/var/jenkins_home jenkins/jenkins:lts;<br>备注：<br>-d //启动在后台<br>—name //容器名字<br>-p //端口映射（8081：宿主主机端口，8080：容器内部端口）<br>-v //数据卷挂载映射（/data/jenkins_home：宿主主机目录，另外一个即是容器目录）<br>enkins/jenkins:lts //Jenkins镜像（最新版）<br>查看 Jenkins 启动情况<br>docker ps | grep jenkins;<sunfy-line></p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230336460.png\" alt=\"image-20210222230336460\"></p>\n<p>安装过程遇到的小问题<br>Jenkins 容器 docker run 之后状态总是 Exited<br>查看docker日志 ：<br>docker logs jenkins<br>发现是目前权限问题<br>因为/data/jenkins_home 目录是root权限</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230353895.png\" alt=\"image-20210222230353895\"></p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230422305.png\" alt=\"image-20210222230422305\"></p>\n<p>解决：<br>chown -R 1000:1000 /data/jenkins_home //用户组改变</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230437518.png\" alt=\"image-20210222230437518\"></p>\n<p>宿主主机端口要开启<br>因为本操作是在阿里云ECS上进行安装的，需要在安全组里开放8081此端口。<br>访问 Jenkins<br><a href=\"http://120.26.50.165:8081\" target=\"_blank\" rel=\"noopener\">http://120.26.50.165:8081</a> //ip:端口号<br>管理配置 Jenkins<br>解锁<br>在安装完成后，默认生成了一个登录密码，首次登录需要这个密码。<br>密码路径：var/jenkins_home/secrets/initialAdminPassword //容器内部<br>查找密码：<br>docker exec -it jenkins_01 bash //进入jenkins容器<br>cat /var/jenkins_home/secrets/initialAdminPassword //查看密码</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230458505.png\" alt=\"image-20210222230458505\"></p>\n<p>安装插件<br>新手安装建议选择：Install suggested plugins，安装过程大概半个多小时。</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230522215.png\" alt=\"image-20210222230522215\"></p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230703546.png\" alt=\"image-20210222230703546\"></p>\n<p>管理用户创建<br>这个用户就是最大管理者权限，相当于admin</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230604348.png\" alt=\"image-20210222230604348\"></p>\n<p>Jenkins 配置完成<br>到此步，安装就大功告成！<br><a href=\"http://120.26.50.165:8081\" target=\"_blank\" rel=\"noopener\">http://120.26.50.165:8081</a> //ip:端口号</p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230616065.png\" alt=\"image-20210222230616065\"></p>\n<p><img src=\"../../../../img/Centos-Docker-jenkins/image-20210222230629441.png\" alt=\"image-20210222230629441\"></p>\n<p>实现自动化部署<br>有了Jenkins，接下来就是代码的自动部署过程了。</p>","next":{"title":"Netty入门示例及核心功能了解","path":"api/articles/resource-java-Netty-IOModule-NettyBase.json","image":"/img/header_img/15.gif","num_read":1640,"num_like":514,"num_collection":272,"num_comments":121},"prev":{"title":"MQ入门和RabbitMQ基础","path":"api/articles/resource-MQ-rabbitMQ-RabbitMQBase.json","image":"/img/header_img/MQ/rabbitmq.PNG","num_read":842,"num_like":1053,"num_collection":89,"num_comments":168},"categories":[{"name":"RPC远程调用","path":"api/categories/RPC远程调用.json","pathContent":"api/categories/RPC远程调用","description":"RPC（Remote Procedure Call）远程过程调用，简单的理解是一个节点请求另一个节点提供的服务","cover":"https://sunfy9.gitee.io/project/photo/project/rpc.jpg"}],"tags":[{"name":"CentOS","path":"api/tags/CentOS.json","pathContent":"api/tags/CentOS","description":"免费的、开源的、可以重新分发的开源操作系统","cover":"https://sunfy9.gitee.io/img/header_img/windows/centos.png"},{"name":"Docker","path":"api/tags/Docker.json","pathContent":"api/tags/Docker","description":"一个开源的应用容器引擎。","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"},{"name":"Jenkins","path":"api/tags/Jenkins.json","pathContent":"api/tags/Jenkins","description":"[Jenkins]暂未设置说明","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}