{"title":"Docker 修改容器hosts文件","num_read":1566,"num_like":65,"num_collection":347,"num_comments":129,"slug":"resource-RPC-Docker-docker修改容器hosts","date":"2023-05-08T16:00:00.000Z","img":"/sunfy-rpc/img/header_img/docker/docker.jpg","_id":"clhrbp2fn00eio5lg35bxa3le","project":"RPC","site":{"data":{}},"updated":"2023-05-09T05:32:49.905Z","author":"Sunfy","comments":true,"path":"api/articles/resource-RPC-Docker-docker修改容器hosts.json","webPath":"2023/05/09/resource-RPC-Docker-docker修改容器hosts/","permalink":"https://sunfy9.gitee.io/2023/05/09/resource-RPC-Docker-docker%E4%BF%AE%E6%94%B9%E5%AE%B9%E5%99%A8hosts/","excerpt":null,"covers":null,"keywords":"sunfy, hexo-theme-snail","content":"<h2 id=\"一、命令\"><a href=\"#一、命令\" class=\"headerlink\" title=\"一、命令\"></a>一、命令</h2><p>一般正式环境的镜像都是提前编译好的，如果不是采取docker-compose编译的镜像，很难修改host,所以我们只能在启动的时候通过参数配置。</p>\n<p>使用命令参数指定—add-host</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run \\</span><br><span class=\"line\">--add-host=www.scalerwang.com:<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">1</span>.<span class=\"number\">100</span> \\</span><br><span class=\"line\">--add-host=blog.scalerwang.com:<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">1</span>.<span class=\"number\">200</span> \\</span><br><span class=\"line\">--name XXX -it mydocker</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、docker-compose-yml\"><a href=\"#二、docker-compose-yml\" class=\"headerlink\" title=\"二、docker-compose.yml\"></a>二、docker-compose.yml<sunfy-line></h2><p>在yml中指定，编译的docker容器自动配置host文件，yaml相关内容如下</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">services:</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">service</span>-<span class=\"title\">nginx</span>:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">image</span>: <span class=\"title\">nginx</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">extra_hosts</span>:</span></span><br><span class=\"line\"><span class=\"function\">    - \"<span class=\"title\">www.scalerwang.com</span>:192.168.1.100\"</span></span><br><span class=\"line\"><span class=\"function\">    - \"<span class=\"title\">blog.scalerwang.com</span>:192.168.1.200\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"三、dockerfile\"><a href=\"#三、dockerfile\" class=\"headerlink\" title=\"三、dockerfile\"></a>三、dockerfile</h2><p>替换hosts文件：dockerfile没有直接的参数可以直接修改host文件，如果想通过dockerfile修改host文件，需要事先准备好host文件放在你的代码根目录下</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 整个hosts替换</span><br><span class=\"line\">RUN cat /wangscaler/hosts &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>\n<p>在原有的hosts文件上追加：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RUN <span class=\"built_in\">echo</span> '<span class=\"number\">1</span>.<span class=\"number\">2</span>.<span class=\"number\">3</span>.<span class=\"number\">4</span> test.a' &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、使用sh脚本结合dockerfile优化方法\"><a href=\"#四、使用sh脚本结合dockerfile优化方法\" class=\"headerlink\" title=\"四、使用sh脚本结合dockerfile优化方法\"></a>四、使用sh脚本结合dockerfile优化方法</h2><p>在dockerfile同目录添加执行脚本：hosts.sh</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"><span class=\"built_in\">set</span> -x</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 'Starting....'</span><br><span class=\"line\"></span><br><span class=\"line\"># 在容器的hosts文件中追加</span><br><span class=\"line\"><span class=\"built_in\">echo</span> '<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span> www.test.com' &gt;&gt; /etc/hosts</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar /tmp/app.jar</span><br></pre></td></tr></table></figure>\n<p>修改dockerfile文件，改成下面的内容</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">COPY</span> hosts.sh /tmp/hosts.sh</span><br><span class=\"line\">RUN chmod +x /tmp/hosts.sh</span><br><span class=\"line\">ENTRYPOINT [ \"sh\", \"/tmp/hosts.sh\" ]</span><br></pre></td></tr></table></figure>\n<p>这种方式就是容器启动之后，将服务初始化命令改成脚本，在脚本中添加修改hosts文件的相关指令。</p>\n","more":"<h2 id=\"一、命令\"><a href=\"#一、命令\" class=\"headerlink\" title=\"一、命令\"></a>一、命令</h2><p>一般正式环境的镜像都是提前编译好的，如果不是采取docker-compose编译的镜像，很难修改host,所以我们只能在启动的时候通过参数配置。</p>\n<p>使用命令参数指定—add-host</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run \\</span><br><span class=\"line\">--add-host=www.scalerwang.com:<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">1</span>.<span class=\"number\">100</span> \\</span><br><span class=\"line\">--add-host=blog.scalerwang.com:<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">1</span>.<span class=\"number\">200</span> \\</span><br><span class=\"line\">--name XXX -it mydocker</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、docker-compose-yml\"><a href=\"#二、docker-compose-yml\" class=\"headerlink\" title=\"二、docker-compose.yml\"></a>二、docker-compose.yml<sunfy-line></h2><p>在yml中指定，编译的docker容器自动配置host文件，yaml相关内容如下</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">services:</span></span><br><span class=\"line\"><span class=\"function\">  <span class=\"title\">service</span>-<span class=\"title\">nginx</span>:</span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">image</span>: <span class=\"title\">nginx</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"title\">extra_hosts</span>:</span></span><br><span class=\"line\"><span class=\"function\">    - \"<span class=\"title\">www.scalerwang.com</span>:192.168.1.100\"</span></span><br><span class=\"line\"><span class=\"function\">    - \"<span class=\"title\">blog.scalerwang.com</span>:192.168.1.200\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"三、dockerfile\"><a href=\"#三、dockerfile\" class=\"headerlink\" title=\"三、dockerfile\"></a>三、dockerfile</h2><p>替换hosts文件：dockerfile没有直接的参数可以直接修改host文件，如果想通过dockerfile修改host文件，需要事先准备好host文件放在你的代码根目录下</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 整个hosts替换</span><br><span class=\"line\">RUN cat /wangscaler/hosts &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>\n<p>在原有的hosts文件上追加：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RUN <span class=\"built_in\">echo</span> '<span class=\"number\">1</span>.<span class=\"number\">2</span>.<span class=\"number\">3</span>.<span class=\"number\">4</span> test.a' &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>\n<h2 id=\"四、使用sh脚本结合dockerfile优化方法\"><a href=\"#四、使用sh脚本结合dockerfile优化方法\" class=\"headerlink\" title=\"四、使用sh脚本结合dockerfile优化方法\"></a>四、使用sh脚本结合dockerfile优化方法</h2><p>在dockerfile同目录添加执行脚本：hosts.sh</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"><span class=\"built_in\">set</span> -x</span><br><span class=\"line\"><span class=\"built_in\">echo</span> 'Starting....'</span><br><span class=\"line\"></span><br><span class=\"line\"># 在容器的hosts文件中追加</span><br><span class=\"line\"><span class=\"built_in\">echo</span> '<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">0</span>.<span class=\"number\">1</span> www.test.com' &gt;&gt; /etc/hosts</span><br><span class=\"line\"></span><br><span class=\"line\">java -jar /tmp/app.jar</span><br></pre></td></tr></table></figure>\n<p>修改dockerfile文件，改成下面的内容</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">COPY</span> hosts.sh /tmp/hosts.sh</span><br><span class=\"line\">RUN chmod +x /tmp/hosts.sh</span><br><span class=\"line\">ENTRYPOINT [ \"sh\", \"/tmp/hosts.sh\" ]</span><br></pre></td></tr></table></figure>\n<p>这种方式就是容器启动之后，将服务初始化命令改成脚本，在脚本中添加修改hosts文件的相关指令。</p>\n","next":{"title":"Oracle-审计日志","path":"api/articles/resource-DB-Oracle-Oracle审计日志.json","image":"/img/header_img/DB/oracle审计日志.png","num_read":1868,"num_like":88,"num_collection":460,"num_comments":96},"prev":{"title":"SPRINGBOOT上传文件到自定义路径并查看","path":"api/articles/resource-java-Base-SPRINGBOOT上传文件到自定义路径并查看.json","image":"/sunfy-java/img/header_img/java/java.png","num_read":1872,"num_like":233,"num_collection":646,"num_comments":137},"categories":[{"name":"RPC远程调用","path":"api/categories/RPC远程调用.json","pathContent":"api/categories/RPC远程调用","description":"RPC（Remote Procedure Call）远程过程调用，简单的理解是一个节点请求另一个节点提供的服务","cover":"https://sunfy9.gitee.io/project/photo/project/rpc.jpg"}],"tags":[{"name":"CentOS","path":"api/tags/CentOS.json","pathContent":"api/tags/CentOS","description":"免费的、开源的、可以重新分发的开源操作系统","cover":"https://sunfy9.gitee.io/img/header_img/windows/centos.png"},{"name":"Docker","path":"api/tags/Docker.json","pathContent":"api/tags/Docker","description":"一个开源的应用容器引擎。","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}