{"title":"java设计模式之责任链模式","num_read":169,"num_like":720,"num_collection":258,"num_comments":141,"slug":"resource-designpattern-behavior-Responsibility","date":"2020-09-09T16:00:00.000Z","img":"/img/header_img/Design/Chain.PNG","_id":"clhrbp2b2003ho5lgcqj19ylo","project":"designPattern","hot":"comments","site":{"data":{}},"updated":"2022-09-20T01:32:34.187Z","author":"Sunfy","comments":true,"path":"api/articles/resource-designpattern-behavior-Responsibility.json","webPath":"2020/09/10/resource-designpattern-behavior-Responsibility/","permalink":"https://sunfy9.gitee.io/2020/09/10/resource-designpattern-behavior-Responsibility/","excerpt":null,"covers":["../../../../img/Responsibility/2021-chain-of-responsibility.svg"],"keywords":"sunfy, hexo-theme-snail","content":"<p>顾名思义，责任链模式（Chain of Responsibility Pattern）为请求创建了一个接收者对象的链。这种模式给予请求的类型，对请求的发送者和接收者进行解耦。这种类型的设计模式属于行为型模式。</p>\n<p>在这种模式中，通常每个接收者都包含对另一个接收者的引用。如果一个对象不能处理该请求，那么它会把相同的请求传给下一个接收者，依此类推。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><strong>意图：</strong>避免请求发送者与接收者耦合在一起，让多个对象都有可能接收请求，将这些对象连接成一条链，并且沿着这条链传递请求，直到有对象处理它为止。</p>\n<p><strong>主要解决：</strong>职责链上的处理者负责处理请求，客户只需要将请求发送到职责链上即可，无须关心请求的处理细节和请求的传递，所以职责链将请求的发送者和请求的处理者解耦了。</p>\n<p><strong>何时使用：</strong>在处理消息的时候以过滤很多道。</p>\n<p><strong>如何解决：</strong>拦截的类都实现统一接口。</p>\n<p><strong>关键代码：</strong>Handler 里面聚合它自己，在 HandlerRequest 里判断是否合适，如果没达到条件则向下传递，向谁传递之前 set 进去。</p>\n<p><strong>应用实例：</strong> 1、红楼梦中的”击鼓传花”。 2、JS 中的事件冒泡。 3、JAVA WEB 中 Apache Tomcat 对 Encoding 的处理，Struts2 的拦截器，jsp servlet 的 Filter。</p>\n<p><strong>优点：</strong> 1、降低耦合度。它将请求的发送者和接收者解耦。 2、简化了对象。使得对象不需要知道链的结构。 3、增强给对象指派职责的灵活性。通过改变链内的成员或者调动它们的次序，允许动态地新增或者删除责任。 4、增加新的请求处理类很方便。</p>\n<p><strong>缺点：</strong> 1、不能保证请求一定被接收。 2、系统性能将受到一定影响，而且在进行代码调试时不太方便，可能会造成循环调用。 3、可能不容易观察运行时的特征，有碍于除错。</p>\n<p><strong>使用场景：</strong> 1、有多个对象可以处理同一个请求，具体哪个对象处理该请求由运行时刻自动确定。 2、在不明确指定接收者的情况下，向多个对象中的一个提交一个请求。 3、可动态指定一组对象处理请求。</p>\n<p><strong>注意事项：</strong>在 JAVA WEB 中遇到很多应用。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现<sunfy-line></h2><p>我们创建抽象类 <em>AbstractLogger</em>，带有详细的日志记录级别。然后我们创建三种类型的记录器，都扩展了 <em>AbstractLogger</em>。每个记录器消息的级别是否属于自己的级别，如果是则相应地打印出来，否则将不打印并把消息传给下一个记录器。</p>\n<p><img src=\"../../../../img/Responsibility/2021-chain-of-responsibility.svg\" alt=\"责任链模式的 UML 图\"></p>\n<h3 id=\"步骤-1\"><a href=\"#步骤-1\" class=\"headerlink\" title=\"步骤 1\"></a>步骤 1</h3><p>创建抽象的记录器类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractLogger</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> INFO = <span class=\"number\">1</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> DEBUG = <span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> ERROR = <span class=\"number\">3</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> level;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"comment\">//责任链中的下一个元素</span></span><br><span class=\"line\">   <span class=\"keyword\">protected</span> AbstractLogger nextLogger;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNextLogger</span><span class=\"params\">(AbstractLogger nextLogger)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.nextLogger = nextLogger;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logMessage</span><span class=\"params\">(<span class=\"keyword\">int</span> level, String message)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.level &lt;= level)&#123;</span><br><span class=\"line\">         write(message);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(nextLogger !=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">         nextLogger.logMessage(level, message);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(String message)</span></span>;</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-2\"><a href=\"#步骤-2\" class=\"headerlink\" title=\"步骤 2\"></a>步骤 2</h3><p>创建扩展了该记录器类的实体类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConsoleLogger</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLogger</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ConsoleLogger</span><span class=\"params\">(<span class=\"keyword\">int</span> level)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.level = level;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(String message)</span> </span>&#123;    </span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Standard Console::Logger: \"</span> + message);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ErrorLogger</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLogger</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ErrorLogger</span><span class=\"params\">(<span class=\"keyword\">int</span> level)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.level = level;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(String message)</span> </span>&#123;    </span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Error Console::Logger: \"</span> + message);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileLogger</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLogger</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FileLogger</span><span class=\"params\">(<span class=\"keyword\">int</span> level)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.level = level;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(String message)</span> </span>&#123;    </span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"File::Logger: \"</span> + message);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-3\"><a href=\"#步骤-3\" class=\"headerlink\" title=\"步骤 3\"></a>步骤 3</h3><p>创建不同类型的记录器。赋予它们不同的错误级别，并在每个记录器中设置下一个记录器。每个记录器中的下一个记录器代表的是链的一部分。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ChainPatternDemo</span> </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> AbstractLogger <span class=\"title\">getChainOfLoggers</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">      AbstractLogger errorLogger = <span class=\"keyword\">new</span> ErrorLogger(AbstractLogger.ERROR);</span><br><span class=\"line\">      AbstractLogger fileLogger = <span class=\"keyword\">new</span> FileLogger(AbstractLogger.DEBUG);</span><br><span class=\"line\">      AbstractLogger consoleLogger = <span class=\"keyword\">new</span> ConsoleLogger(AbstractLogger.INFO);</span><br><span class=\"line\"> </span><br><span class=\"line\">      errorLogger.setNextLogger(fileLogger);</span><br><span class=\"line\">      fileLogger.setNextLogger(consoleLogger);</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"keyword\">return</span> errorLogger;  </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">      AbstractLogger loggerChain = getChainOfLoggers();</span><br><span class=\"line\"> </span><br><span class=\"line\">      loggerChain.logMessage(AbstractLogger.INFO, <span class=\"string\">\"This is an information.\"</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      loggerChain.logMessage(AbstractLogger.DEBUG, </span><br><span class=\"line\">         <span class=\"string\">\"This is a debug level information.\"</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      loggerChain.logMessage(AbstractLogger.ERROR, </span><br><span class=\"line\">         <span class=\"string\">\"This is an error information.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-4\"><a href=\"#步骤-4\" class=\"headerlink\" title=\"步骤 4\"></a>步骤 4</h3><p>执行程序，输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Standard Console::Logger: This is an information.</span><br><span class=\"line\">File::Logger: This is a debug level information.</span><br><span class=\"line\">Standard Console::Logger: This is a debug level information.</span><br><span class=\"line\">Error Console::Logger: This is an error information.</span><br><span class=\"line\">File::Logger: This is an error information.</span><br><span class=\"line\">Standard Console::Logger: This is an error information.</span><br></pre></td></tr></table></figure>\n","more":"<p>顾名思义，责任链模式（Chain of Responsibility Pattern）为请求创建了一个接收者对象的链。这种模式给予请求的类型，对请求的发送者和接收者进行解耦。这种类型的设计模式属于行为型模式。</p>\n<p>在这种模式中，通常每个接收者都包含对另一个接收者的引用。如果一个对象不能处理该请求，那么它会把相同的请求传给下一个接收者，依此类推。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><strong>意图：</strong>避免请求发送者与接收者耦合在一起，让多个对象都有可能接收请求，将这些对象连接成一条链，并且沿着这条链传递请求，直到有对象处理它为止。</p>\n<p><strong>主要解决：</strong>职责链上的处理者负责处理请求，客户只需要将请求发送到职责链上即可，无须关心请求的处理细节和请求的传递，所以职责链将请求的发送者和请求的处理者解耦了。</p>\n<p><strong>何时使用：</strong>在处理消息的时候以过滤很多道。</p>\n<p><strong>如何解决：</strong>拦截的类都实现统一接口。</p>\n<p><strong>关键代码：</strong>Handler 里面聚合它自己，在 HandlerRequest 里判断是否合适，如果没达到条件则向下传递，向谁传递之前 set 进去。</p>\n<p><strong>应用实例：</strong> 1、红楼梦中的”击鼓传花”。 2、JS 中的事件冒泡。 3、JAVA WEB 中 Apache Tomcat 对 Encoding 的处理，Struts2 的拦截器，jsp servlet 的 Filter。</p>\n<p><strong>优点：</strong> 1、降低耦合度。它将请求的发送者和接收者解耦。 2、简化了对象。使得对象不需要知道链的结构。 3、增强给对象指派职责的灵活性。通过改变链内的成员或者调动它们的次序，允许动态地新增或者删除责任。 4、增加新的请求处理类很方便。</p>\n<p><strong>缺点：</strong> 1、不能保证请求一定被接收。 2、系统性能将受到一定影响，而且在进行代码调试时不太方便，可能会造成循环调用。 3、可能不容易观察运行时的特征，有碍于除错。</p>\n<p><strong>使用场景：</strong> 1、有多个对象可以处理同一个请求，具体哪个对象处理该请求由运行时刻自动确定。 2、在不明确指定接收者的情况下，向多个对象中的一个提交一个请求。 3、可动态指定一组对象处理请求。</p>\n<p><strong>注意事项：</strong>在 JAVA WEB 中遇到很多应用。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现<sunfy-line></h2><p>我们创建抽象类 <em>AbstractLogger</em>，带有详细的日志记录级别。然后我们创建三种类型的记录器，都扩展了 <em>AbstractLogger</em>。每个记录器消息的级别是否属于自己的级别，如果是则相应地打印出来，否则将不打印并把消息传给下一个记录器。</p>\n<p><img src=\"../../../../img/Responsibility/2021-chain-of-responsibility.svg\" alt=\"责任链模式的 UML 图\"></p>\n<h3 id=\"步骤-1\"><a href=\"#步骤-1\" class=\"headerlink\" title=\"步骤 1\"></a>步骤 1</h3><p>创建抽象的记录器类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractLogger</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> INFO = <span class=\"number\">1</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> DEBUG = <span class=\"number\">2</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> ERROR = <span class=\"number\">3</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> level;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"comment\">//责任链中的下一个元素</span></span><br><span class=\"line\">   <span class=\"keyword\">protected</span> AbstractLogger nextLogger;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNextLogger</span><span class=\"params\">(AbstractLogger nextLogger)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.nextLogger = nextLogger;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logMessage</span><span class=\"params\">(<span class=\"keyword\">int</span> level, String message)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.level &lt;= level)&#123;</span><br><span class=\"line\">         write(message);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(nextLogger !=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">         nextLogger.logMessage(level, message);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(String message)</span></span>;</span><br><span class=\"line\">   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-2\"><a href=\"#步骤-2\" class=\"headerlink\" title=\"步骤 2\"></a>步骤 2</h3><p>创建扩展了该记录器类的实体类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConsoleLogger</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLogger</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ConsoleLogger</span><span class=\"params\">(<span class=\"keyword\">int</span> level)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.level = level;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(String message)</span> </span>&#123;    </span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Standard Console::Logger: \"</span> + message);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ErrorLogger</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLogger</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ErrorLogger</span><span class=\"params\">(<span class=\"keyword\">int</span> level)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.level = level;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(String message)</span> </span>&#123;    </span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Error Console::Logger: \"</span> + message);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileLogger</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractLogger</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FileLogger</span><span class=\"params\">(<span class=\"keyword\">int</span> level)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.level = level;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">write</span><span class=\"params\">(String message)</span> </span>&#123;    </span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"File::Logger: \"</span> + message);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-3\"><a href=\"#步骤-3\" class=\"headerlink\" title=\"步骤 3\"></a>步骤 3</h3><p>创建不同类型的记录器。赋予它们不同的错误级别，并在每个记录器中设置下一个记录器。每个记录器中的下一个记录器代表的是链的一部分。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ChainPatternDemo</span> </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> AbstractLogger <span class=\"title\">getChainOfLoggers</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">      AbstractLogger errorLogger = <span class=\"keyword\">new</span> ErrorLogger(AbstractLogger.ERROR);</span><br><span class=\"line\">      AbstractLogger fileLogger = <span class=\"keyword\">new</span> FileLogger(AbstractLogger.DEBUG);</span><br><span class=\"line\">      AbstractLogger consoleLogger = <span class=\"keyword\">new</span> ConsoleLogger(AbstractLogger.INFO);</span><br><span class=\"line\"> </span><br><span class=\"line\">      errorLogger.setNextLogger(fileLogger);</span><br><span class=\"line\">      fileLogger.setNextLogger(consoleLogger);</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"keyword\">return</span> errorLogger;  </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">      AbstractLogger loggerChain = getChainOfLoggers();</span><br><span class=\"line\"> </span><br><span class=\"line\">      loggerChain.logMessage(AbstractLogger.INFO, <span class=\"string\">\"This is an information.\"</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      loggerChain.logMessage(AbstractLogger.DEBUG, </span><br><span class=\"line\">         <span class=\"string\">\"This is a debug level information.\"</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      loggerChain.logMessage(AbstractLogger.ERROR, </span><br><span class=\"line\">         <span class=\"string\">\"This is an error information.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-4\"><a href=\"#步骤-4\" class=\"headerlink\" title=\"步骤 4\"></a>步骤 4</h3><p>执行程序，输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Standard Console::Logger: This is an information.</span><br><span class=\"line\">File::Logger: This is a debug level information.</span><br><span class=\"line\">Standard Console::Logger: This is a debug level information.</span><br><span class=\"line\">Error Console::Logger: This is an error information.</span><br><span class=\"line\">File::Logger: This is an error information.</span><br><span class=\"line\">Standard Console::Logger: This is an error information.</span><br></pre></td></tr></table></figure>\n","next":{"title":"java设计模式之抽象工厂模式","path":"api/articles/resource-designpattern-build-Abstractfactory.json","image":"/img/header_img/Design/AbstractFactory.PNG","num_read":1126,"num_like":83,"num_collection":403,"num_comments":184},"prev":{"title":"Ubuntu系统安装easyconnect","path":"api/articles/resource-system-Linux-ubuntu-easyconnect.json","image":"/img/header_img/15.gif","num_read":1449,"num_like":472,"num_collection":196,"num_comments":25},"categories":[{"name":"设计模式","path":"api/categories/设计模式.json","pathContent":"api/categories/设计模式","description":"简单快捷、解决方案","cover":"https://sunfy9.gitee.io/project/photo/project/design.jpg"}],"tags":[]}