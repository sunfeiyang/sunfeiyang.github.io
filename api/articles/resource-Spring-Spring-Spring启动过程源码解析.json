{"title":"Spring启动过程源码解析","num_read":444,"num_like":964,"num_collection":792,"num_comments":141,"slug":"resource-Spring-Spring-Spring启动过程源码解析","date":"2021-09-25T16:00:00.000Z","img":"/img/header_img/spring/process.png","format":"list","_id":"clhrbp2fs00ggo5lgco1jfn17","project":"Spring","type":"hot","subtitle":"Spring启动过程源码解析","hot":"collection","site":{"data":{}},"updated":"2022-08-18T06:41:44.000Z","author":"Sunfy","comments":true,"path":"api/articles/resource-Spring-Spring-Spring启动过程源码解析.json","webPath":"2021/09/26/resource-Spring-Spring-Spring启动过程源码解析/","permalink":"https://sunfy9.gitee.io/2021/09/26/resource-Spring-Spring-Spring%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","excerpt":null,"covers":null,"keywords":"sunfy, hexo-theme-snail","content":"<h1 id=\"Spring启动过程源码解析\"><a href=\"#Spring启动过程源码解析\" class=\"headerlink\" title=\"Spring启动过程源码解析\"></a>Spring启动过程源码解析</h1><p>通常，我们说的Spring启动，就是构造ApplicationContext对象以及调用refresh()方法的过程。 </p>\n<p>首先，Spring启动过程主要做了这么几件事情：</p>\n<ul>\n<li>构造一个BeanFactory对象</li>\n<li>解析配置类，得到BeanDefinition，并注册到BeanFactory中<ul>\n<li>解析@ComponentScan，此时就会完成扫描</li>\n<li>解析@Import</li>\n<li>解析@Bean</li>\n<li>…<sunfy-line></li>\n</ul>\n</li>\n<li>因为ApplicationContext还支持国际化，所以还需要初始化MessageSource对象</li>\n<li>因为ApplicationContext还支持事件机制，所以还需要初始化ApplicationEventMulticaster对象</li>\n<li>把用户定义的ApplicationListener对象添加到ApplicationContext中，等Spring启动完了就要发布事件了</li>\n<li>创建<strong>非懒加载的单例</strong>Bean对象，并存在BeanFactory的单例池中。</li>\n<li>调用Lifecycle Bean的start()方法</li>\n<li>发布<strong>ContextRefreshedEvent</strong>事件</li>\n</ul>\n<p>由于Spring启动过程中要创建非懒加载的单例Bean对象，那么就需要用到BeanPostProcessor，所以Spring在启动过程中就需要做两件事：</p>\n<ul>\n<li>生成默认的BeanPostProcessor对象，并添加到BeanFactory中<ul>\n<li>AutowiredAnnotationBeanPostProcessor：处理@Autowired、@Value</li>\n<li>CommonAnnotationBeanPostProcessor：处理@Resource、@PostConstruct、@PreDestroy</li>\n<li>ApplicationContextAwareProcessor：处理ApplicationContextAware等回调</li>\n</ul>\n</li>\n<li>找到外部用户所定义的BeanPostProcessor对象（类型为BeanPostProcessor的Bean对象），并添加到BeanFactory中</li>\n</ul>\n","more":"<h1 id=\"Spring启动过程源码解析\"><a href=\"#Spring启动过程源码解析\" class=\"headerlink\" title=\"Spring启动过程源码解析\"></a>Spring启动过程源码解析</h1><p>通常，我们说的Spring启动，就是构造ApplicationContext对象以及调用refresh()方法的过程。 </p>\n<p>首先，Spring启动过程主要做了这么几件事情：</p>\n<ul>\n<li>构造一个BeanFactory对象</li>\n<li>解析配置类，得到BeanDefinition，并注册到BeanFactory中<ul>\n<li>解析@ComponentScan，此时就会完成扫描</li>\n<li>解析@Import</li>\n<li>解析@Bean</li>\n<li>…<sunfy-line></li>\n</ul>\n</li>\n<li>因为ApplicationContext还支持国际化，所以还需要初始化MessageSource对象</li>\n<li>因为ApplicationContext还支持事件机制，所以还需要初始化ApplicationEventMulticaster对象</li>\n<li>把用户定义的ApplicationListener对象添加到ApplicationContext中，等Spring启动完了就要发布事件了</li>\n<li>创建<strong>非懒加载的单例</strong>Bean对象，并存在BeanFactory的单例池中。</li>\n<li>调用Lifecycle Bean的start()方法</li>\n<li>发布<strong>ContextRefreshedEvent</strong>事件</li>\n</ul>\n<p>由于Spring启动过程中要创建非懒加载的单例Bean对象，那么就需要用到BeanPostProcessor，所以Spring在启动过程中就需要做两件事：</p>\n<ul>\n<li>生成默认的BeanPostProcessor对象，并添加到BeanFactory中<ul>\n<li>AutowiredAnnotationBeanPostProcessor：处理@Autowired、@Value</li>\n<li>CommonAnnotationBeanPostProcessor：处理@Resource、@PostConstruct、@PreDestroy</li>\n<li>ApplicationContextAwareProcessor：处理ApplicationContextAware等回调</li>\n</ul>\n</li>\n<li>找到外部用户所定义的BeanPostProcessor对象（类型为BeanPostProcessor的Bean对象），并添加到BeanFactory中</li>\n</ul>\n","next":{"title":"Java位运算符及相关问题","path":"api/articles/resource-java-Base-AnOperation.json","image":"/img/header_img/java/AnOperation.png","num_read":1231,"num_like":1004,"num_collection":776,"num_comments":165},"prev":{"title":"js实现模糊查询的几种方法","path":"api/articles/resource-desk-js-js实现模糊查询.json","image":"/img/header_img/desk/vue.gif","num_read":162,"num_like":417,"num_collection":88,"num_comments":181},"categories":[{"name":"Spring全家桶","path":"api/categories/Spring全家桶.json","pathContent":"api/categories/Spring全家桶","description":"更快、更容易、更安全","cover":"https://sunfy9.gitee.io/project/photo/project/spring.png"}],"tags":[{"name":"Spring","path":"api/tags/Spring.json","pathContent":"api/tags/Spring","description":"更快、更容易、更安全","cover":"https://sunfy9.gitee.io/project/photo/project/spring.png"}]}