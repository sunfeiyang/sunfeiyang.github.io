{"title":"SQL四种连接","num_read":579,"num_like":657,"num_collection":631,"num_comments":71,"slug":"resource-DB-MySQL-SQL四种连接","date":"2022-05-15T16:00:00.000Z","img":"/img/header_img/DB/connections.png","_id":"clhrbp2as0018o5lg9tllgg5r","project":"DB","subtitle":"SQL四种连接","site":{"data":{}},"updated":"2022-07-20T05:45:44.000Z","comments":true,"path":"api/articles/resource-DB-MySQL-SQL四种连接.json","webPath":"2022/05/16/resource-DB-MySQL-SQL四种连接/","permalink":"https://sunfy9.gitee.io/2022/05/16/resource-DB-MySQL-SQL%E5%9B%9B%E7%A7%8D%E8%BF%9E%E6%8E%A5/","excerpt":null,"covers":null,"keywords":"sunfy, hexo-theme-snail","content":"<h3 id=\"深入理解SQL的四种连接-左外连接、右外连接、内连接、全连接\"><a href=\"#深入理解SQL的四种连接-左外连接、右外连接、内连接、全连接\" class=\"headerlink\" title=\"深入理解SQL的四种连接-左外连接、右外连接、内连接、全连接\"></a><a href=\"https://www.cnblogs.com/yyjie/p/7788413.html\" target=\"_blank\" rel=\"noopener\">深入理解SQL的四种连接-左外连接、右外连接、内连接、全连接</a></h3><h4 id=\"1、内联接\"><a href=\"#1、内联接\" class=\"headerlink\" title=\"1、内联接\"></a><strong>1、内联接</strong></h4><p>（典型的联接运算，使用像 =  或 &lt;&gt; 之类的比较运算符）。包括相等联接和自然联接。     </p>\n<p>内联接使用比较运算符根据每个表共有的列的值匹配两个表中的行。例如，检索 students和courses表中学生标识号相同的所有行。   </p>\n<h4 id=\"2、外联接。\"><a href=\"#2、外联接。\" class=\"headerlink\" title=\"2、外联接。\"></a><strong>2、外联接。</strong></h4><p>外联接可以是左向外联接、右向外联接或完整外部联接。     </p>\n<p>在 FROM子句中指定外联接时，可以由下列几组关键字中的一组指定：</p>\n<p>1）LEFT  JOIN或LEFT OUTER JOIN     </p>\n<p>左向外联接的结果集包括  LEFT OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。       </p>\n<p>2）RIGHT  JOIN 或 RIGHT  OUTER  JOIN     </p>\n<p>右向外联接是左向外联接的反向联接。将返回右表的所有行。如果右表的某行在左表中没有匹配行，则将为左表返回空值。       </p>\n<p>3）FULL  JOIN 或 FULL OUTER JOIN<br>完整外部联接返回左表和右表中的所有行。当某行在另一个表中没有匹配行时，则另一个表的选择列表列包含空值。如果表之间有匹配行，则整个结果集行包含基表的数据值。   </p>\n<h4 id=\"3、交叉联接\"><a href=\"#3、交叉联接\" class=\"headerlink\" title=\"3、交叉联接\"></a><strong>3、交叉联接</strong></h4><p>交叉联接返回左表中的所有行，左表中的每一行与右表中的所有行组合。交叉联接也称作笛卡尔积。<br>FROM 子句中的表或视图可通过内联接或完整外部联接按任意顺序指定；但是，用左或右向外联接指定表或视图时，表或视图的顺序很重要。有关使用左或右向外联接排列表的更多信息，请参见使用外联接。     </p>\n<p><strong>例子：</strong>   </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-------------------------------------------------</span></span><br><span class=\"line\">  a表     id   name     b表     id   job   parent_id   </span><br><span class=\"line\">              1   张3                   1     23     1   </span><br><span class=\"line\">              2   李四                 2     34     2   </span><br><span class=\"line\">              3   王武                 3     34     4       </span><br><span class=\"line\">  a.id同parent_id   存在关系   </span><br><span class=\"line\"><span class=\"comment\">--------------------------------------------------    </span></span><br><span class=\"line\"> 1） 内连接   </span><br><span class=\"line\">  <span class=\"keyword\">select</span>   a.,b.   <span class=\"keyword\">from</span>   a   <span class=\"keyword\">inner</span>   <span class=\"keyword\">join</span>   b     <span class=\"keyword\">on</span>   a.id=b.parent_id       </span><br><span class=\"line\">  结果是     </span><br><span class=\"line\">  <span class=\"number\">1</span>   张<span class=\"number\">3</span>                   <span class=\"number\">1</span>     <span class=\"number\">23</span>     <span class=\"number\">1</span>   </span><br><span class=\"line\">  <span class=\"number\">2</span>   李四                  <span class=\"number\">2</span>     <span class=\"number\">34</span>     <span class=\"number\">2</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">2</span>）左连接   </span><br><span class=\"line\">  <span class=\"keyword\">select</span>   a.,b.   <span class=\"keyword\">from</span>   a   <span class=\"keyword\">left</span>   <span class=\"keyword\">join</span>   b     <span class=\"keyword\">on</span>   a.id=b.parent_id       </span><br><span class=\"line\">  结果是     </span><br><span class=\"line\">  <span class=\"number\">1</span>   张<span class=\"number\">3</span>                   <span class=\"number\">1</span>     <span class=\"number\">23</span>     <span class=\"number\">1</span>   </span><br><span class=\"line\">  <span class=\"number\">2</span>   李四                  <span class=\"number\">2</span>     <span class=\"number\">34</span>     <span class=\"number\">2</span>   </span><br><span class=\"line\">  <span class=\"number\">3</span>   王武                  <span class=\"literal\">null</span>   </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"number\">3</span>） 右连接   </span><br><span class=\"line\">  <span class=\"keyword\">select</span>   a.,b.   <span class=\"keyword\">from</span>   a   <span class=\"keyword\">right</span>   <span class=\"keyword\">join</span>   b     <span class=\"keyword\">on</span>   a.id=b.parent_id       </span><br><span class=\"line\">  结果是     </span><br><span class=\"line\">  <span class=\"number\">1</span>   张<span class=\"number\">3</span>                   <span class=\"number\">1</span>     <span class=\"number\">23</span>     <span class=\"number\">1</span>   </span><br><span class=\"line\">  <span class=\"number\">2</span>   李四                  <span class=\"number\">2</span>     <span class=\"number\">34</span>     <span class=\"number\">2</span>   </span><br><span class=\"line\">  <span class=\"literal\">null</span>                       <span class=\"number\">3</span>     <span class=\"number\">34</span>     <span class=\"number\">4</span>   </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"number\">4</span>） 完全连接   </span><br><span class=\"line\">  <span class=\"keyword\">select</span>   a.,b.   <span class=\"keyword\">from</span>   a   <span class=\"keyword\">full</span>   <span class=\"keyword\">join</span>   b     <span class=\"keyword\">on</span>   a.id=b.parent_id   </span><br><span class=\"line\">  结果是     </span><br><span class=\"line\">  <span class=\"number\">1</span>   张<span class=\"number\">3</span>                  <span class=\"number\">1</span>     <span class=\"number\">23</span>     <span class=\"number\">1</span>   </span><br><span class=\"line\">  <span class=\"number\">2</span>   李四                 <span class=\"number\">2</span>     <span class=\"number\">34</span>     <span class=\"number\">2</span>   </span><br><span class=\"line\">  <span class=\"literal\">null</span>               　　  <span class=\"number\">3</span>     <span class=\"number\">34</span>     <span class=\"number\">4</span>   </span><br><span class=\"line\">  <span class=\"number\">3</span>   王武                 <span class=\"literal\">null</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"一、交叉连接（CROSS-JOIN）\"><a href=\"#一、交叉连接（CROSS-JOIN）\" class=\"headerlink\" title=\"一、交叉连接（CROSS JOIN）\"></a><strong>一、交叉连接（CROSS JOIN）</strong></h4><p>交叉连接（CROSS JOIN）：有两种，显式的和隐式的，不带ON子句，返回的是两表的乘积，也叫笛卡尔积。<br>例如：下面的语句1和语句2的结果是相同的。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句1：隐式的交叉连接，没有CROSS JOIN。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID, O.ORDER_NUMBER, C.ID, C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O , CUSTOMERS C</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> O.ID=<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句2：显式的交叉连接，使用CROSS JOIN。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,C.ID,</span><br><span class=\"line\">C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">CROSS</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> O.ID=<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"二、内连接（INNER-JOIN）\"><a href=\"#二、内连接（INNER-JOIN）\" class=\"headerlink\" title=\"二、内连接（INNER JOIN）\"></a><strong>二、内连接（INNER JOIN）</strong></h4><p>内连接（INNER JOIN）：有两种，显式的和隐式的，返回连接表中符合连接条件和查询条件的数据行。（所谓的链接表就是数据库在做查询形成的中间表）。<br>例如：下面的语句3和语句4的结果是相同的。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句3：隐式的内连接，没有INNER JOIN，形成的中间表为两个表的笛卡尔积。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> CUSTOMERS C,ORDERS O</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句4：显示的内连接，一般称为内连接，有INNER JOIN，形成的中间表为两个表经过ON条件过滤后的笛卡尔积。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> CUSTOMERS C <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> ORDERS O <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br></pre></td></tr></table></figure>\n<h4 id=\"三、外连接（OUTER-JOIN\"><a href=\"#三、外连接（OUTER-JOIN\" class=\"headerlink\" title=\"三、外连接（OUTER JOIN)\"></a><strong>三、外连接（OUTER JOIN)</strong></h4><p>外连不但返回符合连接和查询条件的数据行，还返回不符合条件的一些行。外连接分三类：左外连接（LEFT OUTER JOIN）、右外连接（RIGHT OUTER JOIN）和全外连接（FULL OUTER JOIN）。<br>三者的共同点是都返回符合连接条件和查询条件（即：内连接）的数据行。不同点如下：<br>左外连接还返回左表中不符合连接条件单符合查询条件的数据行。<br>右外连接还返回右表中不符合连接条件单符合查询条件的数据行。<br>全外连接还返回左表中不符合连接条件单符合查询条件的数据行，并且还返回右表中不符合连接条件单符合查询条件的数据行。全外连接实际是上左外连接和右外连接的数学合集（去掉重复），即“全外=左外 UNION 右外”。<br>说明：左表就是在“（LEFT OUTER JOIN）”关键字左边的表。右表当然就是右边的了。在三种类型的外连接中，OUTER 关键字是可省略的。</p>\n<p>下面举例说明：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句5：左外连接（LEFT OUTER JOIN）</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句6：右外连接（RIGHT OUTER JOIN）</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"><span class=\"comment\">--注意：WHERE条件放在ON后面查询的结果是不一样的。例如：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句7：WHERE条件独立。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> O.ORDER_NUMBER&lt;&gt;<span class=\"string\">'MIKE_ORDER001'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句8：将语句7中的WHERE条件放到ON后面。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID <span class=\"keyword\">AND</span> O.ORDER_NUMBER&lt;&gt;<span class=\"string\">'MIKE_ORDER001'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--从语句7和语句8查询的结果来看，显然是不相同的，语句8显示的结果是难以理解的。因此，推荐在写连接查询的时候，ON后面只跟连接条件，而对中间表限制的条件都写到WHERE子句中。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句9：全外连接（FULL OUTER JOIN）。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"><span class=\"comment\">--注意：MySQL是不支持全外的连接的，这里给出的写法适合Oracle和DB2。但是可以通过左外和右外求合集来获取全外连接的查询结果。下图是上面SQL在Oracle下执行的结果：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句10：左外和右外的合集，实际上查询结果和语句9是相同的。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"><span class=\"keyword\">UNION</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br></pre></td></tr></table></figure>\n<h4 id=\"四、联合连接（UNION-JOIN）\"><a href=\"#四、联合连接（UNION-JOIN）\" class=\"headerlink\" title=\"四、联合连接（UNION JOIN）\"></a><strong>四、联合连接（UNION JOIN）</strong></h4><p>这是一种很少见的连接方式。<code>Oracle</code>、<code>MySQL</code>均不支持，其作用是：找出全外连接和内连接之间差异的所有行。这在数据分析中排错中比较常用。也可以利用数据库的集合操作来实现此功能。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句11：联合查询（UNION JOIN）例句，还没有找到能执行的SQL环境。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">UNION</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句12：语句11在DB2下的等价实现。还不知道DB2是否支持语句11呢！</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"><span class=\"keyword\">EXCEPT</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句13：语句11在Oracle下的等价实现。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"><span class=\"keyword\">MINUS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br></pre></td></tr></table></figure>\n<h4 id=\"五、自然连接（NATURAL-INNER-JOIN）\"><a href=\"#五、自然连接（NATURAL-INNER-JOIN）\" class=\"headerlink\" title=\"五、自然连接（NATURAL INNER JOIN）\"></a><strong>五、自然连接（NATURAL INNER JOIN）</strong></h4><p>说真的，这种连接查询没有存在的价值，既然是<code>SQL2</code>标准中定义的，就给出个例子看看吧。自然连接无需指定连接列，<code>SQL</code>会检查两个表中是否相同名称的列，且假设他们在连接条件中使用，并且在连接条件中仅包含一个连接列。不允许使用ON语句，不允许指定显示列，显示列只能用*表示（ORACLE环境下测试的）。对于每种连接类型（除了交叉连接外），均可指定NATURAL。下面给出几个例子。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句14：SELECT *</span></span><br><span class=\"line\">FROM ORDERS O NATURAL INNER JOIN CUSTOMERS C;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句15：SELECT *</span></span><br><span class=\"line\">FROM ORDERS O NATURAL LEFT OUTER JOIN CUSTOMERS C;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句16：SELECT *</span></span><br><span class=\"line\">FROM ORDERS O NATURAL RIGHT OUTER JOIN CUSTOMERS C;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句17：SELECT *</span></span><br><span class=\"line\">FROM ORDERS O NATURAL FULL OUTER JOIN CUSTOMERS C;</span><br></pre></td></tr></table></figure>\n<h4 id=\"六、SQL查询的基本原理\"><a href=\"#六、SQL查询的基本原理\" class=\"headerlink\" title=\"六、SQL查询的基本原理\"></a><strong>六、<code>SQL</code>查询的基本原理</strong></h4><p><strong>两种情况介绍</strong></p>\n<ol>\n<li><p>单表查询：根据WHERE条件过滤表中的记录，形成中间表（这个中间表对用户是不可见的）；然后根据SELECT的选择列选择相应的列进行返回最终结果。</p>\n</li>\n<li><p>两表连接查询：对两表求积（笛卡尔积）并用ON条件和连接连接类型进行过滤形成中间表；然后根据WHERE条件过滤中间表的记录，并根据SELECT指定的列返回查询结果。</p>\n</li>\n<li><p>多表连接查询：先对第一个和第二个表按照两表连接做查询，然后用查询结果和第三个表做连接查询，以此类推，直到所有的表都连接上为止，最终形成一个中间的结果表，然后根据WHERE条件过滤中间表的记录，并根据SELECT指定的列返回查询结果。</p>\n<p>理解<code>SQL</code>查询的过程是进行<code>SQL</code>优化的理论依据。</p>\n</li>\n</ol>\n<h4 id=\"七、ON条件和WHERE条件的区别\"><a href=\"#七、ON条件和WHERE条件的区别\" class=\"headerlink\" title=\"七、ON条件和WHERE条件的区别\"></a><strong>七、ON条件和WHERE条件的区别</strong></h4><p>ON条件：是过滤两个链接表笛卡尔积形成中间表的约束条件。<br>WHERE条件：在有ON条件的SELECT语句中是过滤中间表的约束条件。在没有ON的单表查询中，是限制物理表或者中间查询结果返回记录的约束。在两表或多表连接中是限制连接形成最终中间表的返回结果的约束。<br>从这里可以看出，将WHERE条件移入ON后面是不恰当的。推荐的做法是：</p>\n<font style=\"color:red\">ON只进行连接操作，WHERE只过滤中间表的记录。</font>\n\n<h4 id=\"八、总结\"><a href=\"#八、总结\" class=\"headerlink\" title=\"八、总结\"></a><strong>八、总结</strong></h4><p>连接查询是<code>SQL</code>查询的核心，连接查询的连接类型选择依据实际需求。如果选择不当，非但不能提高查询效率，反而会带来一些逻辑错误或者性能低下。下面总结一下两表连接查询选择方式的依据：<br>1、 查两表关联列相等的数据用内连接。<br>2、 Col_L是Col_R的子集时用右外连接。<br>3、 Col_R是Col_L的子集时用左外连接。<br>4、 Col_R和Col_L彼此有交集但彼此互不为子集时候用全外。<br>5、 求差操作的时候用联合查询。<br>多个表查询的时候，这些不同的连接类型可以写到一块。例如：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> T1.C1,T2.CX,T3.CY</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> TAB1 T1</span><br><span class=\"line\">       <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> TAB2 T2 <span class=\"keyword\">ON</span> (T1.C1=T2.C2)</span><br><span class=\"line\">       <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> TAB3 T3 <span class=\"keyword\">ON</span> (T1.C1=T2.C3)</span><br><span class=\"line\">       <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> TAB4 <span class=\"keyword\">ON</span>(T2.C2=T3.C3);</span><br><span class=\"line\">WHERE T1.X &gt;T3.Y;</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"深入理解SQL的四种连接-左外连接、右外连接、内连接、全连接\"><a href=\"#深入理解SQL的四种连接-左外连接、右外连接、内连接、全连接\" class=\"headerlink\" title=\"深入理解SQL的四种连接-左外连接、右外连接、内连接、全连接\"></a><a href=\"https://www.cnblogs.com/yyjie/p/7788413.html\" target=\"_blank\" rel=\"noopener\">深入理解SQL的四种连接-左外连接、右外连接、内连接、全连接</a></h3><h4 id=\"1、内联接\"><a href=\"#1、内联接\" class=\"headerlink\" title=\"1、内联接\"></a><strong>1、内联接</strong></h4><p>（典型的联接运算，使用像 =  或 &lt;&gt; 之类的比较运算符）。包括相等联接和自然联接。     </p>\n<p>内联接使用比较运算符根据每个表共有的列的值匹配两个表中的行。例如，检索 students和courses表中学生标识号相同的所有行。   </p>\n<h4 id=\"2、外联接。\"><a href=\"#2、外联接。\" class=\"headerlink\" title=\"2、外联接。\"></a><strong>2、外联接。</strong></h4><p>外联接可以是左向外联接、右向外联接或完整外部联接。     </p>\n<p>在 FROM子句中指定外联接时，可以由下列几组关键字中的一组指定：</p>\n<p>1）LEFT  JOIN或LEFT OUTER JOIN     </p>\n<p>左向外联接的结果集包括  LEFT OUTER子句中指定的左表的所有行，而不仅仅是联接列所匹配的行。如果左表的某行在右表中没有匹配行，则在相关联的结果集行中右表的所有选择列表列均为空值。       </p>\n<p>2）RIGHT  JOIN 或 RIGHT  OUTER  JOIN     </p>\n<p>右向外联接是左向外联接的反向联接。将返回右表的所有行。如果右表的某行在左表中没有匹配行，则将为左表返回空值。       </p>\n<p>3）FULL  JOIN 或 FULL OUTER JOIN<br>完整外部联接返回左表和右表中的所有行。当某行在另一个表中没有匹配行时，则另一个表的选择列表列包含空值。如果表之间有匹配行，则整个结果集行包含基表的数据值。   </p>\n<h4 id=\"3、交叉联接\"><a href=\"#3、交叉联接\" class=\"headerlink\" title=\"3、交叉联接\"></a><strong>3、交叉联接</strong></h4><p>交叉联接返回左表中的所有行，左表中的每一行与右表中的所有行组合。交叉联接也称作笛卡尔积。<br>FROM 子句中的表或视图可通过内联接或完整外部联接按任意顺序指定；但是，用左或右向外联接指定表或视图时，表或视图的顺序很重要。有关使用左或右向外联接排列表的更多信息，请参见使用外联接。     </p>\n<p><strong>例子：</strong>   </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-------------------------------------------------</span></span><br><span class=\"line\">  a表     id   name     b表     id   job   parent_id   </span><br><span class=\"line\">              1   张3                   1     23     1   </span><br><span class=\"line\">              2   李四                 2     34     2   </span><br><span class=\"line\">              3   王武                 3     34     4       </span><br><span class=\"line\">  a.id同parent_id   存在关系   </span><br><span class=\"line\"><span class=\"comment\">--------------------------------------------------    </span></span><br><span class=\"line\"> 1） 内连接   </span><br><span class=\"line\">  <span class=\"keyword\">select</span>   a.,b.   <span class=\"keyword\">from</span>   a   <span class=\"keyword\">inner</span>   <span class=\"keyword\">join</span>   b     <span class=\"keyword\">on</span>   a.id=b.parent_id       </span><br><span class=\"line\">  结果是     </span><br><span class=\"line\">  <span class=\"number\">1</span>   张<span class=\"number\">3</span>                   <span class=\"number\">1</span>     <span class=\"number\">23</span>     <span class=\"number\">1</span>   </span><br><span class=\"line\">  <span class=\"number\">2</span>   李四                  <span class=\"number\">2</span>     <span class=\"number\">34</span>     <span class=\"number\">2</span>   </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">2</span>）左连接   </span><br><span class=\"line\">  <span class=\"keyword\">select</span>   a.,b.   <span class=\"keyword\">from</span>   a   <span class=\"keyword\">left</span>   <span class=\"keyword\">join</span>   b     <span class=\"keyword\">on</span>   a.id=b.parent_id       </span><br><span class=\"line\">  结果是     </span><br><span class=\"line\">  <span class=\"number\">1</span>   张<span class=\"number\">3</span>                   <span class=\"number\">1</span>     <span class=\"number\">23</span>     <span class=\"number\">1</span>   </span><br><span class=\"line\">  <span class=\"number\">2</span>   李四                  <span class=\"number\">2</span>     <span class=\"number\">34</span>     <span class=\"number\">2</span>   </span><br><span class=\"line\">  <span class=\"number\">3</span>   王武                  <span class=\"literal\">null</span>   </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"number\">3</span>） 右连接   </span><br><span class=\"line\">  <span class=\"keyword\">select</span>   a.,b.   <span class=\"keyword\">from</span>   a   <span class=\"keyword\">right</span>   <span class=\"keyword\">join</span>   b     <span class=\"keyword\">on</span>   a.id=b.parent_id       </span><br><span class=\"line\">  结果是     </span><br><span class=\"line\">  <span class=\"number\">1</span>   张<span class=\"number\">3</span>                   <span class=\"number\">1</span>     <span class=\"number\">23</span>     <span class=\"number\">1</span>   </span><br><span class=\"line\">  <span class=\"number\">2</span>   李四                  <span class=\"number\">2</span>     <span class=\"number\">34</span>     <span class=\"number\">2</span>   </span><br><span class=\"line\">  <span class=\"literal\">null</span>                       <span class=\"number\">3</span>     <span class=\"number\">34</span>     <span class=\"number\">4</span>   </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"number\">4</span>） 完全连接   </span><br><span class=\"line\">  <span class=\"keyword\">select</span>   a.,b.   <span class=\"keyword\">from</span>   a   <span class=\"keyword\">full</span>   <span class=\"keyword\">join</span>   b     <span class=\"keyword\">on</span>   a.id=b.parent_id   </span><br><span class=\"line\">  结果是     </span><br><span class=\"line\">  <span class=\"number\">1</span>   张<span class=\"number\">3</span>                  <span class=\"number\">1</span>     <span class=\"number\">23</span>     <span class=\"number\">1</span>   </span><br><span class=\"line\">  <span class=\"number\">2</span>   李四                 <span class=\"number\">2</span>     <span class=\"number\">34</span>     <span class=\"number\">2</span>   </span><br><span class=\"line\">  <span class=\"literal\">null</span>               　　  <span class=\"number\">3</span>     <span class=\"number\">34</span>     <span class=\"number\">4</span>   </span><br><span class=\"line\">  <span class=\"number\">3</span>   王武                 <span class=\"literal\">null</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"一、交叉连接（CROSS-JOIN）\"><a href=\"#一、交叉连接（CROSS-JOIN）\" class=\"headerlink\" title=\"一、交叉连接（CROSS JOIN）\"></a><strong>一、交叉连接（CROSS JOIN）</strong></h4><p>交叉连接（CROSS JOIN）：有两种，显式的和隐式的，不带ON子句，返回的是两表的乘积，也叫笛卡尔积。<br>例如：下面的语句1和语句2的结果是相同的。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句1：隐式的交叉连接，没有CROSS JOIN。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID, O.ORDER_NUMBER, C.ID, C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O , CUSTOMERS C</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> O.ID=<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句2：显式的交叉连接，使用CROSS JOIN。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,C.ID,</span><br><span class=\"line\">C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">CROSS</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> O.ID=<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"二、内连接（INNER-JOIN）\"><a href=\"#二、内连接（INNER-JOIN）\" class=\"headerlink\" title=\"二、内连接（INNER JOIN）\"></a><strong>二、内连接（INNER JOIN）</strong></h4><p>内连接（INNER JOIN）：有两种，显式的和隐式的，返回连接表中符合连接条件和查询条件的数据行。（所谓的链接表就是数据库在做查询形成的中间表）。<br>例如：下面的语句3和语句4的结果是相同的。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句3：隐式的内连接，没有INNER JOIN，形成的中间表为两个表的笛卡尔积。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> CUSTOMERS C,ORDERS O</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句4：显示的内连接，一般称为内连接，有INNER JOIN，形成的中间表为两个表经过ON条件过滤后的笛卡尔积。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> CUSTOMERS C <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> ORDERS O <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br></pre></td></tr></table></figure>\n<h4 id=\"三、外连接（OUTER-JOIN\"><a href=\"#三、外连接（OUTER-JOIN\" class=\"headerlink\" title=\"三、外连接（OUTER JOIN)\"></a><strong>三、外连接（OUTER JOIN)</strong></h4><p>外连不但返回符合连接和查询条件的数据行，还返回不符合条件的一些行。外连接分三类：左外连接（LEFT OUTER JOIN）、右外连接（RIGHT OUTER JOIN）和全外连接（FULL OUTER JOIN）。<br>三者的共同点是都返回符合连接条件和查询条件（即：内连接）的数据行。不同点如下：<br>左外连接还返回左表中不符合连接条件单符合查询条件的数据行。<br>右外连接还返回右表中不符合连接条件单符合查询条件的数据行。<br>全外连接还返回左表中不符合连接条件单符合查询条件的数据行，并且还返回右表中不符合连接条件单符合查询条件的数据行。全外连接实际是上左外连接和右外连接的数学合集（去掉重复），即“全外=左外 UNION 右外”。<br>说明：左表就是在“（LEFT OUTER JOIN）”关键字左边的表。右表当然就是右边的了。在三种类型的外连接中，OUTER 关键字是可省略的。</p>\n<p>下面举例说明：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句5：左外连接（LEFT OUTER JOIN）</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句6：右外连接（RIGHT OUTER JOIN）</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"><span class=\"comment\">--注意：WHERE条件放在ON后面查询的结果是不一样的。例如：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句7：WHERE条件独立。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> O.ORDER_NUMBER&lt;&gt;<span class=\"string\">'MIKE_ORDER001'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句8：将语句7中的WHERE条件放到ON后面。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID <span class=\"keyword\">AND</span> O.ORDER_NUMBER&lt;&gt;<span class=\"string\">'MIKE_ORDER001'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--从语句7和语句8查询的结果来看，显然是不相同的，语句8显示的结果是难以理解的。因此，推荐在写连接查询的时候，ON后面只跟连接条件，而对中间表限制的条件都写到WHERE子句中。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句9：全外连接（FULL OUTER JOIN）。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"><span class=\"comment\">--注意：MySQL是不支持全外的连接的，这里给出的写法适合Oracle和DB2。但是可以通过左外和右外求合集来获取全外连接的查询结果。下图是上面SQL在Oracle下执行的结果：</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句10：左外和右外的合集，实际上查询结果和语句9是相同的。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"><span class=\"keyword\">UNION</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">RIGHT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br></pre></td></tr></table></figure>\n<h4 id=\"四、联合连接（UNION-JOIN）\"><a href=\"#四、联合连接（UNION-JOIN）\" class=\"headerlink\" title=\"四、联合连接（UNION JOIN）\"></a><strong>四、联合连接（UNION JOIN）</strong></h4><p>这是一种很少见的连接方式。<code>Oracle</code>、<code>MySQL</code>均不支持，其作用是：找出全外连接和内连接之间差异的所有行。这在数据分析中排错中比较常用。也可以利用数据库的集合操作来实现此功能。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句11：联合查询（UNION JOIN）例句，还没有找到能执行的SQL环境。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">UNION</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句12：语句11在DB2下的等价实现。还不知道DB2是否支持语句11呢！</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"><span class=\"keyword\">EXCEPT</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句13：语句11在Oracle下的等价实现。</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">FULL</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID</span><br><span class=\"line\"><span class=\"keyword\">MINUS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> O.ID,O.ORDER_NUMBER,O.CUSTOMER_ID,C.ID,C.NAME</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> ORDERS O <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> CUSTOMERS C <span class=\"keyword\">ON</span> C.ID=O.CUSTOMER_ID;</span><br></pre></td></tr></table></figure>\n<h4 id=\"五、自然连接（NATURAL-INNER-JOIN）\"><a href=\"#五、自然连接（NATURAL-INNER-JOIN）\" class=\"headerlink\" title=\"五、自然连接（NATURAL INNER JOIN）\"></a><strong>五、自然连接（NATURAL INNER JOIN）</strong></h4><p>说真的，这种连接查询没有存在的价值，既然是<code>SQL2</code>标准中定义的，就给出个例子看看吧。自然连接无需指定连接列，<code>SQL</code>会检查两个表中是否相同名称的列，且假设他们在连接条件中使用，并且在连接条件中仅包含一个连接列。不允许使用ON语句，不允许指定显示列，显示列只能用*表示（ORACLE环境下测试的）。对于每种连接类型（除了交叉连接外），均可指定NATURAL。下面给出几个例子。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--语句14：SELECT *</span></span><br><span class=\"line\">FROM ORDERS O NATURAL INNER JOIN CUSTOMERS C;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句15：SELECT *</span></span><br><span class=\"line\">FROM ORDERS O NATURAL LEFT OUTER JOIN CUSTOMERS C;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句16：SELECT *</span></span><br><span class=\"line\">FROM ORDERS O NATURAL RIGHT OUTER JOIN CUSTOMERS C;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--语句17：SELECT *</span></span><br><span class=\"line\">FROM ORDERS O NATURAL FULL OUTER JOIN CUSTOMERS C;</span><br></pre></td></tr></table></figure>\n<h4 id=\"六、SQL查询的基本原理\"><a href=\"#六、SQL查询的基本原理\" class=\"headerlink\" title=\"六、SQL查询的基本原理\"></a><strong>六、<code>SQL</code>查询的基本原理</strong></h4><p><strong>两种情况介绍</strong></p>\n<ol>\n<li><p>单表查询：根据WHERE条件过滤表中的记录，形成中间表（这个中间表对用户是不可见的）；然后根据SELECT的选择列选择相应的列进行返回最终结果。</p>\n</li>\n<li><p>两表连接查询：对两表求积（笛卡尔积）并用ON条件和连接连接类型进行过滤形成中间表；然后根据WHERE条件过滤中间表的记录，并根据SELECT指定的列返回查询结果。</p>\n</li>\n<li><p>多表连接查询：先对第一个和第二个表按照两表连接做查询，然后用查询结果和第三个表做连接查询，以此类推，直到所有的表都连接上为止，最终形成一个中间的结果表，然后根据WHERE条件过滤中间表的记录，并根据SELECT指定的列返回查询结果。</p>\n<p>理解<code>SQL</code>查询的过程是进行<code>SQL</code>优化的理论依据。</p>\n</li>\n</ol>\n<h4 id=\"七、ON条件和WHERE条件的区别\"><a href=\"#七、ON条件和WHERE条件的区别\" class=\"headerlink\" title=\"七、ON条件和WHERE条件的区别\"></a><strong>七、ON条件和WHERE条件的区别</strong></h4><p>ON条件：是过滤两个链接表笛卡尔积形成中间表的约束条件。<br>WHERE条件：在有ON条件的SELECT语句中是过滤中间表的约束条件。在没有ON的单表查询中，是限制物理表或者中间查询结果返回记录的约束。在两表或多表连接中是限制连接形成最终中间表的返回结果的约束。<br>从这里可以看出，将WHERE条件移入ON后面是不恰当的。推荐的做法是：</p>\n<font style=\"color:red\">ON只进行连接操作，WHERE只过滤中间表的记录。</font>\n\n<h4 id=\"八、总结\"><a href=\"#八、总结\" class=\"headerlink\" title=\"八、总结\"></a><strong>八、总结</strong></h4><p>连接查询是<code>SQL</code>查询的核心，连接查询的连接类型选择依据实际需求。如果选择不当，非但不能提高查询效率，反而会带来一些逻辑错误或者性能低下。下面总结一下两表连接查询选择方式的依据：<br>1、 查两表关联列相等的数据用内连接。<br>2、 Col_L是Col_R的子集时用右外连接。<br>3、 Col_R是Col_L的子集时用左外连接。<br>4、 Col_R和Col_L彼此有交集但彼此互不为子集时候用全外。<br>5、 求差操作的时候用联合查询。<br>多个表查询的时候，这些不同的连接类型可以写到一块。例如：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> T1.C1,T2.CX,T3.CY</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> TAB1 T1</span><br><span class=\"line\">       <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> TAB2 T2 <span class=\"keyword\">ON</span> (T1.C1=T2.C2)</span><br><span class=\"line\">       <span class=\"keyword\">INNER</span> <span class=\"keyword\">JOIN</span> TAB3 T3 <span class=\"keyword\">ON</span> (T1.C1=T2.C3)</span><br><span class=\"line\">       <span class=\"keyword\">LEFT</span> <span class=\"keyword\">OUTER</span> <span class=\"keyword\">JOIN</span> TAB4 <span class=\"keyword\">ON</span>(T2.C2=T3.C3);</span><br><span class=\"line\">WHERE T1.X &gt;T3.Y;</span><br></pre></td></tr></table></figure>","next":{"title":"MySQL 远程访问Mysql服务错误","path":"api/articles/resource-DB-MySQL-远程访问Mysql服务错误.json","image":"/img/header_img/DB/Remoteaccesserror.png","num_read":1239,"num_like":256,"num_collection":413,"num_comments":128},"prev":{"title":"配置https","path":"api/articles/resource-tools-Server-配置https.json","image":"/img/header_img/server/https.png","num_read":1104,"num_like":980,"num_collection":634,"num_comments":171},"categories":[{"name":"数据库","path":"api/categories/数据库.json","pathContent":"api/categories/数据库","description":"结构化存储格式+事务和并发控制+内存管理+SQL访问接口","cover":"https://sunfy9.gitee.io/project/photo/project/db.jpg"}],"tags":[{"name":"MySQL","path":"api/tags/MySQL.json","pathContent":"api/tags/MySQL","description":"一种关系型数据库管理系统","cover":"https://sunfy9.gitee.io/project/photo/project/desk.jpg"}]}