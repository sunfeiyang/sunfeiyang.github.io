{"title":"java设计模式之组合模式","num_read":974,"num_like":731,"num_collection":201,"num_comments":78,"slug":"resource-designpattern-structure-Composite","date":"2020-10-11T16:00:00.000Z","img":"/img/header_img/Design/Composite.png","_id":"clhrbp2b80053o5lg5qflcfsu","project":"designPattern","site":{"data":{}},"updated":"2022-09-20T01:36:10.332Z","author":"Sunfy","comments":true,"path":"api/articles/resource-designpattern-structure-Composite.json","webPath":"2020/10/12/resource-designpattern-structure-Composite/","permalink":"https://sunfy9.gitee.io/2020/10/12/resource-designpattern-structure-Composite/","excerpt":null,"covers":["../../../../img/Composite/20210817-composite-composite.svg"],"keywords":"sunfy, hexo-theme-snail","content":"<p>组合模式（Composite Pattern），又叫部分整体模式，是用于把一组相似的对象当作一个单一的对象。组合模式依据树形结构来组合对象，用来表示部分以及整体层次。这种类型的设计模式属于结构型模式，它创建了对象组的树形结构。</p>\n<p>这种模式创建了一个包含自己对象组的类。该类提供了修改相同对象组的方式。</p>\n<p>我们通过下面的实例来演示组合模式的用法。实例演示了一个组织中员工的层次结构。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><strong>意图：</strong>将对象组合成树形结构以表示”部分-整体”的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。</p>\n<p><strong>主要解决：</strong>它在我们树型结构的问题中，模糊了简单元素和复杂元素的概念，客户程序可以像处理简单元素一样来处理复杂元素，从而使得客户程序与复杂元素的内部结构解耦。</p>\n<p><strong>何时使用：</strong> 1、您想表示对象的部分-整体层次结构（树形结构）。 2、您希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。</p>\n<p><strong>如何解决：</strong>树枝和叶子实现统一接口，树枝内部组合该接口。</p>\n<p><strong>关键代码：</strong>树枝内部组合该接口，并且含有内部属性 List，里面放 Component。</p>\n<p><strong>应用实例：</strong> 1、算术表达式包括操作数、操作符和另一个操作数，其中，另一个操作数也可以是操作数、操作符和另一个操作数。 2、在 JAVA AWT 和 SWING 中，对于 Button 和 Checkbox 是树叶，Container 是树枝。</p>\n<p><strong>优点：</strong> 1、高层模块调用简单。 2、节点自由增加。</p>\n<p><strong>缺点：</strong>在使用组合模式时，其叶子和树枝的声明都是实现类，而不是接口，违反了依赖倒置原则。</p>\n<p><strong>使用场景：</strong>部分、整体场景，如树形菜单，文件、文件夹的管理。</p>\n<p><strong>注意事项：</strong>定义时为具体类。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现<sunfy-line></h2><p>我们有一个类 <em>Employee</em>，该类被当作组合模型类。<em>CompositePatternDemo</em> 类使用 <em>Employee</em> 类来添加部门层次结构，并打印所有员工。</p>\n<p><img src=\"../../../../img/Composite/20210817-composite-composite.svg\" alt=\"组合模式的 UML 图\"></p>\n<h3 id=\"步骤-1\"><a href=\"#步骤-1\" class=\"headerlink\" title=\"步骤 1\"></a>步骤 1</h3><p>创建 <em>Employee</em> 类，该类带有 <em>Employee</em> 对象的列表。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Employee</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String dept;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> salary;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> List&lt;Employee&gt; subordinates;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"comment\">//构造函数</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Employee</span><span class=\"params\">(String name,String dept, <span class=\"keyword\">int</span> sal)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dept = dept;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.salary = sal;</span><br><span class=\"line\">      subordinates = <span class=\"keyword\">new</span> ArrayList&lt;Employee&gt;();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Employee e)</span> </span>&#123;</span><br><span class=\"line\">      subordinates.add(e);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">(Employee e)</span> </span>&#123;</span><br><span class=\"line\">      subordinates.remove(e);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> List&lt;Employee&gt; <span class=\"title\">getSubordinates</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> subordinates;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> (<span class=\"string\">\"Employee :[ Name : \"</span>+ name </span><br><span class=\"line\">      +<span class=\"string\">\", dept : \"</span>+ dept + <span class=\"string\">\", salary :\"</span></span><br><span class=\"line\">      + salary+<span class=\"string\">\" ]\"</span>);</span><br><span class=\"line\">   &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-2\"><a href=\"#步骤-2\" class=\"headerlink\" title=\"步骤 2\"></a>步骤 2</h3><p>使用 <em>Employee</em> 类来创建和打印员工的层次结构。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CompositePatternDemo</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">      Employee CEO = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"John\"</span>,<span class=\"string\">\"CEO\"</span>, <span class=\"number\">30000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      Employee headSales = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Robert\"</span>,<span class=\"string\">\"Head Sales\"</span>, <span class=\"number\">20000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      Employee headMarketing = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Michel\"</span>,<span class=\"string\">\"Head Marketing\"</span>, <span class=\"number\">20000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      Employee clerk1 = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Laura\"</span>,<span class=\"string\">\"Marketing\"</span>, <span class=\"number\">10000</span>);</span><br><span class=\"line\">      Employee clerk2 = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Bob\"</span>,<span class=\"string\">\"Marketing\"</span>, <span class=\"number\">10000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      Employee salesExecutive1 = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Richard\"</span>,<span class=\"string\">\"Sales\"</span>, <span class=\"number\">10000</span>);</span><br><span class=\"line\">      Employee salesExecutive2 = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Rob\"</span>,<span class=\"string\">\"Sales\"</span>, <span class=\"number\">10000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      CEO.add(headSales);</span><br><span class=\"line\">      CEO.add(headMarketing);</span><br><span class=\"line\"> </span><br><span class=\"line\">      headSales.add(salesExecutive1);</span><br><span class=\"line\">      headSales.add(salesExecutive2);</span><br><span class=\"line\"> </span><br><span class=\"line\">      headMarketing.add(clerk1);</span><br><span class=\"line\">      headMarketing.add(clerk2);</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"comment\">//打印该组织的所有员工</span></span><br><span class=\"line\">      System.out.println(CEO); </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (Employee headEmployee : CEO.getSubordinates()) &#123;</span><br><span class=\"line\">         System.out.println(headEmployee);</span><br><span class=\"line\">         <span class=\"keyword\">for</span> (Employee employee : headEmployee.getSubordinates()) &#123;</span><br><span class=\"line\">            System.out.println(employee);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      &#125;        </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-3\"><a href=\"#步骤-3\" class=\"headerlink\" title=\"步骤 3\"></a>步骤 3</h3><p>执行程序，输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Employee :[ Name : John, dept : CEO, salary :30000 ]</span><br><span class=\"line\">Employee :[ Name : Robert, dept : Head Sales, salary :20000 ]</span><br><span class=\"line\">Employee :[ Name : Richard, dept : Sales, salary :10000 ]</span><br><span class=\"line\">Employee :[ Name : Rob, dept : Sales, salary :10000 ]</span><br><span class=\"line\">Employee :[ Name : Michel, dept : Head Marketing, salary :20000 ]</span><br><span class=\"line\">Employee :[ Name : Laura, dept : Marketing, salary :10000 ]</span><br><span class=\"line\">Employee :[ Name : Bob, dept : Marketing, salary :10000 ]</span><br></pre></td></tr></table></figure>\n","more":"<p>组合模式（Composite Pattern），又叫部分整体模式，是用于把一组相似的对象当作一个单一的对象。组合模式依据树形结构来组合对象，用来表示部分以及整体层次。这种类型的设计模式属于结构型模式，它创建了对象组的树形结构。</p>\n<p>这种模式创建了一个包含自己对象组的类。该类提供了修改相同对象组的方式。</p>\n<p>我们通过下面的实例来演示组合模式的用法。实例演示了一个组织中员工的层次结构。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><strong>意图：</strong>将对象组合成树形结构以表示”部分-整体”的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。</p>\n<p><strong>主要解决：</strong>它在我们树型结构的问题中，模糊了简单元素和复杂元素的概念，客户程序可以像处理简单元素一样来处理复杂元素，从而使得客户程序与复杂元素的内部结构解耦。</p>\n<p><strong>何时使用：</strong> 1、您想表示对象的部分-整体层次结构（树形结构）。 2、您希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中的所有对象。</p>\n<p><strong>如何解决：</strong>树枝和叶子实现统一接口，树枝内部组合该接口。</p>\n<p><strong>关键代码：</strong>树枝内部组合该接口，并且含有内部属性 List，里面放 Component。</p>\n<p><strong>应用实例：</strong> 1、算术表达式包括操作数、操作符和另一个操作数，其中，另一个操作数也可以是操作数、操作符和另一个操作数。 2、在 JAVA AWT 和 SWING 中，对于 Button 和 Checkbox 是树叶，Container 是树枝。</p>\n<p><strong>优点：</strong> 1、高层模块调用简单。 2、节点自由增加。</p>\n<p><strong>缺点：</strong>在使用组合模式时，其叶子和树枝的声明都是实现类，而不是接口，违反了依赖倒置原则。</p>\n<p><strong>使用场景：</strong>部分、整体场景，如树形菜单，文件、文件夹的管理。</p>\n<p><strong>注意事项：</strong>定义时为具体类。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现<sunfy-line></h2><p>我们有一个类 <em>Employee</em>，该类被当作组合模型类。<em>CompositePatternDemo</em> 类使用 <em>Employee</em> 类来添加部门层次结构，并打印所有员工。</p>\n<p><img src=\"../../../../img/Composite/20210817-composite-composite.svg\" alt=\"组合模式的 UML 图\"></p>\n<h3 id=\"步骤-1\"><a href=\"#步骤-1\" class=\"headerlink\" title=\"步骤 1\"></a>步骤 1</h3><p>创建 <em>Employee</em> 类，该类带有 <em>Employee</em> 对象的列表。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Employee</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> String dept;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> salary;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> List&lt;Employee&gt; subordinates;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"comment\">//构造函数</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Employee</span><span class=\"params\">(String name,String dept, <span class=\"keyword\">int</span> sal)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.dept = dept;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.salary = sal;</span><br><span class=\"line\">      subordinates = <span class=\"keyword\">new</span> ArrayList&lt;Employee&gt;();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(Employee e)</span> </span>&#123;</span><br><span class=\"line\">      subordinates.add(e);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">remove</span><span class=\"params\">(Employee e)</span> </span>&#123;</span><br><span class=\"line\">      subordinates.remove(e);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> List&lt;Employee&gt; <span class=\"title\">getSubordinates</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> subordinates;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> (<span class=\"string\">\"Employee :[ Name : \"</span>+ name </span><br><span class=\"line\">      +<span class=\"string\">\", dept : \"</span>+ dept + <span class=\"string\">\", salary :\"</span></span><br><span class=\"line\">      + salary+<span class=\"string\">\" ]\"</span>);</span><br><span class=\"line\">   &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-2\"><a href=\"#步骤-2\" class=\"headerlink\" title=\"步骤 2\"></a>步骤 2</h3><p>使用 <em>Employee</em> 类来创建和打印员工的层次结构。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CompositePatternDemo</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">      Employee CEO = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"John\"</span>,<span class=\"string\">\"CEO\"</span>, <span class=\"number\">30000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      Employee headSales = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Robert\"</span>,<span class=\"string\">\"Head Sales\"</span>, <span class=\"number\">20000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      Employee headMarketing = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Michel\"</span>,<span class=\"string\">\"Head Marketing\"</span>, <span class=\"number\">20000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      Employee clerk1 = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Laura\"</span>,<span class=\"string\">\"Marketing\"</span>, <span class=\"number\">10000</span>);</span><br><span class=\"line\">      Employee clerk2 = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Bob\"</span>,<span class=\"string\">\"Marketing\"</span>, <span class=\"number\">10000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      Employee salesExecutive1 = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Richard\"</span>,<span class=\"string\">\"Sales\"</span>, <span class=\"number\">10000</span>);</span><br><span class=\"line\">      Employee salesExecutive2 = <span class=\"keyword\">new</span> Employee(<span class=\"string\">\"Rob\"</span>,<span class=\"string\">\"Sales\"</span>, <span class=\"number\">10000</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">      CEO.add(headSales);</span><br><span class=\"line\">      CEO.add(headMarketing);</span><br><span class=\"line\"> </span><br><span class=\"line\">      headSales.add(salesExecutive1);</span><br><span class=\"line\">      headSales.add(salesExecutive2);</span><br><span class=\"line\"> </span><br><span class=\"line\">      headMarketing.add(clerk1);</span><br><span class=\"line\">      headMarketing.add(clerk2);</span><br><span class=\"line\"> </span><br><span class=\"line\">      <span class=\"comment\">//打印该组织的所有员工</span></span><br><span class=\"line\">      System.out.println(CEO); </span><br><span class=\"line\">      <span class=\"keyword\">for</span> (Employee headEmployee : CEO.getSubordinates()) &#123;</span><br><span class=\"line\">         System.out.println(headEmployee);</span><br><span class=\"line\">         <span class=\"keyword\">for</span> (Employee employee : headEmployee.getSubordinates()) &#123;</span><br><span class=\"line\">            System.out.println(employee);</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      &#125;        </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-3\"><a href=\"#步骤-3\" class=\"headerlink\" title=\"步骤 3\"></a>步骤 3</h3><p>执行程序，输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Employee :[ Name : John, dept : CEO, salary :30000 ]</span><br><span class=\"line\">Employee :[ Name : Robert, dept : Head Sales, salary :20000 ]</span><br><span class=\"line\">Employee :[ Name : Richard, dept : Sales, salary :10000 ]</span><br><span class=\"line\">Employee :[ Name : Rob, dept : Sales, salary :10000 ]</span><br><span class=\"line\">Employee :[ Name : Michel, dept : Head Marketing, salary :20000 ]</span><br><span class=\"line\">Employee :[ Name : Laura, dept : Marketing, salary :10000 ]</span><br><span class=\"line\">Employee :[ Name : Bob, dept : Marketing, salary :10000 ]</span><br></pre></td></tr></table></figure>\n","next":{"title":"java设计模式之享元模式","path":"api/articles/resource-designpattern-structure-Flyweight.json","image":"/img/header_img/Design/Flyweight.png","num_read":1699,"num_like":547,"num_collection":580,"num_comments":148},"prev":{"title":"java设计模式之拦截过滤器模式","path":"api/articles/resource-designpattern-J2EE-Intercepting.json","image":"/img/header_img/Design/Intercepting.png","num_read":1380,"num_like":258,"num_collection":711,"num_comments":144},"categories":[{"name":"设计模式","path":"api/categories/设计模式.json","pathContent":"api/categories/设计模式","description":"简单快捷、解决方案","cover":"https://sunfy9.gitee.io/project/photo/project/design.jpg"}],"tags":[]}