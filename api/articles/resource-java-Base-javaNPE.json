{"title":"java NPE问题","num_read":1784,"num_like":182,"num_collection":702,"num_comments":145,"slug":"resource-java-Base-javaNPE","date":"2022-02-19T16:00:00.000Z","img":"/img/header_img/java/npe.png","_id":"clhrbp2dv00b6o5lg5gz74pp2","project":"Java","type":"hot","subtitle":"防止 NPE，是程序员的基本修养。","site":{"data":{}},"updated":"2022-03-01T05:34:14.000Z","author":"Sunfy","comments":true,"path":"api/articles/resource-java-Base-javaNPE.json","webPath":"2022/02/20/resource-java-Base-javaNPE/","permalink":"https://sunfy9.gitee.io/2022/02/20/resource-java-Base-javaNPE/","excerpt":null,"covers":null,"keywords":"sunfy, hexo-theme-snail","content":"<h1 id=\"阿里巴巴代码规范\"><a href=\"#阿里巴巴代码规范\" class=\"headerlink\" title=\"阿里巴巴代码规范\"></a>阿里巴巴代码规范</h1><p>【推荐】方法的返回值可以为 null，不强制返回空集合，或者空对象等，必须添加注释充分 说明什么情况下会返回 null 值。调用方需要进行 null 判断防止 NPE 问题。<br>说明：本手册明确防止 NPE 是调用者的责任。即使被调用方法返回空集合或者空对象，对调用 者来说，也并非高枕无忧，必须考虑到远程调用失败、序列化失败、运行时异常等场景返回 null 的情况。</p>\n<p>【推荐】防止 NPE，是程序员的基本修养，注意 NPE 产生的场景</p>\n<ul>\n<li>1）返回类型为基本数据类型，return 包装数据类型的对象时，自动拆箱有可能产生 NPE。 反例：public int f() { return Integer 对象}， 如果为 null，</li>\n<li>2） 数据库的查询结果可能为 null。</li>\n<li>3） 集合里的元素即使 isNotEmpty，取出的数据元素也可能为 null。</li>\n<li>4） 远程调用返回对象时，一律要求进行空指针判断，防止 NPE。</li>\n<li>5） 对于 Session 中获取的数据，建议 NPE 检查，避免空指针。</li>\n<li>6） 级联调用 obj.getA().getB().getC()；一连串调用，易产生 NPE。 </li>\n</ul>\n<p>正例：使用 JDK8 的 Optional 类来防止 NPE 问题。</p>\n<h1 id=\"NPE-Null-Pointer-Exception\"><a href=\"#NPE-Null-Pointer-Exception\" class=\"headerlink\" title=\"NPE(Null Pointer Exception)\"></a>NPE(Null Pointer Exception)<sunfy-line></h1><p>一直是我们最头疼的问题，也是最容易忽视的地方，先总结几条不同场景的解决方案，望后续补充。<br> 1.RPC调用某个规定好的接口，如获取某一范围内查询结果，返回结果我们约定好是List<String>。<br> 若没有结果，我们是返回null还是Collections.emptyList() ？虽然NPE问题大部分是调用者问题，但是我们可以从源头解决，比如我们不允许null值，必须返回对应类型（当然实际业务可能不一样）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getLists</span><span class=\"params\">(Map&lt;String, Object&gt; condition)</span> </span>&#123;</span><br><span class=\"line\">    List&lt;String&gt; records = getRecords(condition);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (records != <span class=\"keyword\">null</span> &amp;&amp; records.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> records;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Collections.emptyList();</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>2.foreach遍历循环时候要做集合null值判断，以前我们这么写</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (records != <span class=\"keyword\">null</span> &amp;&amp; records.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String record : records) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//some codes</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//next step</span></span><br></pre></td></tr></table></figure>\n<p>我们可以直接使用org.springframework.util.CollectionUtils;</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!CollectionUtils.isEmpty(records)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String record : records) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//some codes</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//next step</span></span><br></pre></td></tr></table></figure>\n<p>3.与2对应的jdk8提供了一些“工具”类java.util.Objects对对象进行非空判断：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (Objects.nonNull(str)) &#123; <span class=\"comment\">// 等价于 str != null</span></span><br><span class=\"line\">    <span class=\"comment\">// some codes</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// next step</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (Objects.equals(a, b)) &#123; <span class=\"comment\">// 等价于 (a == b) || (a != null &amp;&amp; a.equals(b));</span></span><br><span class=\"line\">    <span class=\"comment\">// some codes</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// next step</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">// 等价于 String str = a == null ? null : a.toString();</span></span><br><span class=\"line\">String str = Objects.toString(a, <span class=\"keyword\">null</span>);</span><br></pre></td></tr></table></figure>\n<p>4.还有一些pojo里面的类型尽量使用包装类（之前<a href=\"https://www.jianshu.com/p/0b4cc1da6ada?_blank\" target=\"_blank\" rel=\"noopener\">《java中包装类与基本类型的运用对比》</a>提到过），这会导致null值出现，根据不同场景进行处理，但是不建议在pojo里面处理，要保证pojo的完整干净。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 反例：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setCreateTime</span><span class=\"params\">(Date createTime)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Objects.isNull(createTime)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.createTime = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.createTime = createTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5.spring注解@NonNull @Nullable<br> 如果可以传入NULL值，则标记为@Nullable，如果不可以，则标注为@NonNull。如果违反了这些协定，IntelliJ IDEA 将出现警告。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> List&lt;Person&gt; <span class=\"title\">query</span><span class=\"params\">(@NonNull PersonQueryBean queryBean)</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"comment\">// to do some codes...</span></span><br><span class=\"line\">    Sort sort = queryBean.getSort();</span><br><span class=\"line\">    ....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","more":"<h1 id=\"阿里巴巴代码规范\"><a href=\"#阿里巴巴代码规范\" class=\"headerlink\" title=\"阿里巴巴代码规范\"></a>阿里巴巴代码规范</h1><p>【推荐】方法的返回值可以为 null，不强制返回空集合，或者空对象等，必须添加注释充分 说明什么情况下会返回 null 值。调用方需要进行 null 判断防止 NPE 问题。<br>说明：本手册明确防止 NPE 是调用者的责任。即使被调用方法返回空集合或者空对象，对调用 者来说，也并非高枕无忧，必须考虑到远程调用失败、序列化失败、运行时异常等场景返回 null 的情况。</p>\n<p>【推荐】防止 NPE，是程序员的基本修养，注意 NPE 产生的场景</p>\n<ul>\n<li>1）返回类型为基本数据类型，return 包装数据类型的对象时，自动拆箱有可能产生 NPE。 反例：public int f() { return Integer 对象}， 如果为 null，</li>\n<li>2） 数据库的查询结果可能为 null。</li>\n<li>3） 集合里的元素即使 isNotEmpty，取出的数据元素也可能为 null。</li>\n<li>4） 远程调用返回对象时，一律要求进行空指针判断，防止 NPE。</li>\n<li>5） 对于 Session 中获取的数据，建议 NPE 检查，避免空指针。</li>\n<li>6） 级联调用 obj.getA().getB().getC()；一连串调用，易产生 NPE。 </li>\n</ul>\n<p>正例：使用 JDK8 的 Optional 类来防止 NPE 问题。</p>\n<h1 id=\"NPE-Null-Pointer-Exception\"><a href=\"#NPE-Null-Pointer-Exception\" class=\"headerlink\" title=\"NPE(Null Pointer Exception)\"></a>NPE(Null Pointer Exception)<sunfy-line></h1><p>一直是我们最头疼的问题，也是最容易忽视的地方，先总结几条不同场景的解决方案，望后续补充。<br> 1.RPC调用某个规定好的接口，如获取某一范围内查询结果，返回结果我们约定好是List<String>。<br> 若没有结果，我们是返回null还是Collections.emptyList() ？虽然NPE问题大部分是调用者问题，但是我们可以从源头解决，比如我们不允许null值，必须返回对应类型（当然实际业务可能不一样）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">getLists</span><span class=\"params\">(Map&lt;String, Object&gt; condition)</span> </span>&#123;</span><br><span class=\"line\">    List&lt;String&gt; records = getRecords(condition);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (records != <span class=\"keyword\">null</span> &amp;&amp; records.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> records;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Collections.emptyList();</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>2.foreach遍历循环时候要做集合null值判断，以前我们这么写</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (records != <span class=\"keyword\">null</span> &amp;&amp; records.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String record : records) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//some codes</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//next step</span></span><br></pre></td></tr></table></figure>\n<p>我们可以直接使用org.springframework.util.CollectionUtils;</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!CollectionUtils.isEmpty(records)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String record : records) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//some codes</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//next step</span></span><br></pre></td></tr></table></figure>\n<p>3.与2对应的jdk8提供了一些“工具”类java.util.Objects对对象进行非空判断：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (Objects.nonNull(str)) &#123; <span class=\"comment\">// 等价于 str != null</span></span><br><span class=\"line\">    <span class=\"comment\">// some codes</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// next step</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (Objects.equals(a, b)) &#123; <span class=\"comment\">// 等价于 (a == b) || (a != null &amp;&amp; a.equals(b));</span></span><br><span class=\"line\">    <span class=\"comment\">// some codes</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// next step</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">// 等价于 String str = a == null ? null : a.toString();</span></span><br><span class=\"line\">String str = Objects.toString(a, <span class=\"keyword\">null</span>);</span><br></pre></td></tr></table></figure>\n<p>4.还有一些pojo里面的类型尽量使用包装类（之前<a href=\"https://www.jianshu.com/p/0b4cc1da6ada?_blank\" target=\"_blank\" rel=\"noopener\">《java中包装类与基本类型的运用对比》</a>提到过），这会导致null值出现，根据不同场景进行处理，但是不建议在pojo里面处理，要保证pojo的完整干净。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 反例：</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setCreateTime</span><span class=\"params\">(Date createTime)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Objects.isNull(createTime)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.createTime = <span class=\"keyword\">new</span> Date();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.createTime = createTime;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5.spring注解@NonNull @Nullable<br> 如果可以传入NULL值，则标记为@Nullable，如果不可以，则标注为@NonNull。如果违反了这些协定，IntelliJ IDEA 将出现警告。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> List&lt;Person&gt; <span class=\"title\">query</span><span class=\"params\">(@NonNull PersonQueryBean queryBean)</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"comment\">// to do some codes...</span></span><br><span class=\"line\">    Sort sort = queryBean.getSort();</span><br><span class=\"line\">    ....</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","next":{"title":"阿里千万实例可观测采集器-iLogtail正式开源","path":"api/articles/resource-DB-Logtail-iLogtail.json","image":"/img/header_img/DB/Logtail.png","num_read":1279,"num_like":518,"num_collection":335,"num_comments":43},"prev":{"title":"为什么 Java 中“1000==1000”为false，而”100==100“为true？","path":"api/articles/resource-java-Base-Integer.json","image":"/img/header_img/java/integer.png","num_read":482,"num_like":316,"num_collection":739,"num_comments":96},"categories":[{"name":"Java","path":"api/categories/Java.json","pathContent":"api/categories/Java","description":"知识点、常用功能","cover":"https://sunfy9.gitee.io/project/photo/project/java.png"}],"tags":[{"name":"NPE","path":"api/tags/NPE.json","pathContent":"api/tags/NPE","description":"[NPE]暂未设置说明","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}