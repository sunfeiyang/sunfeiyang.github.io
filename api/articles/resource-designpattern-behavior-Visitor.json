{"title":"java设计模式之访问者模式","num_read":640,"num_like":566,"num_collection":166,"num_comments":176,"slug":"resource-designpattern-behavior-Visitor","date":"2020-10-11T16:00:00.000Z","img":"/img/header_img/Design/Visitor.png","_id":"clhrbp2b00032o5lg8jus31wn","project":"designPattern","hot":"comments","site":{"data":{}},"updated":"2022-09-20T01:33:18.295Z","author":"Sunfy","comments":true,"path":"api/articles/resource-designpattern-behavior-Visitor.json","webPath":"2020/10/12/resource-designpattern-behavior-Visitor/","permalink":"https://sunfy9.gitee.io/2020/10/12/resource-designpattern-behavior-Visitor/","excerpt":null,"covers":["../../../../img/Visitor/visitor_pattern_uml_diagram.jpg"],"keywords":"sunfy, hexo-theme-snail","content":"<p>在访问者模式（Visitor Pattern）中，我们使用了一个访问者类，它改变了元素类的执行算法。通过这种方式，元素的执行算法可以随着访问者改变而改变。这种类型的设计模式属于行为型模式。根据模式，元素对象已接受访问者对象，这样访问者对象就可以处理元素对象上的操作。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><strong>意图：</strong>主要将数据结构与数据操作分离。</p>\n<p><strong>主要解决：</strong>稳定的数据结构和易变的操作耦合问题。</p>\n<p><strong>何时使用：</strong>需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免让这些操作”污染”这些对象的类，使用访问者模式将这些封装到类中。</p>\n<p><strong>如何解决：</strong>在被访问的类里面加一个对外提供接待访问者的接口。</p>\n<p><strong>关键代码：</strong>在数据基础类里面有一个方法接受访问者，将自身引用传入访问者。</p>\n<p><strong>应用实例：</strong>您在朋友家做客，您是访问者，朋友接受您的访问，您通过朋友的描述，然后对朋友的描述做出一个判断，这就是访问者模式。</p>\n<p><strong>优点：</strong> 1、符合单一职责原则。 2、优秀的扩展性。 3、灵活性。</p>\n<p><strong>缺点：</strong> 1、具体元素对访问者公布细节，违反了迪米特原则。 2、具体元素变更比较困难。 3、违反了依赖倒置原则，依赖了具体类，没有依赖抽象。</p>\n<p><strong>使用场景：</strong> 1、对象结构中对象对应的类很少改变，但经常需要在此对象结构上定义新的操作。 2、需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免让这些操作”污染”这些对象的类，也不希望在增加新操作时修改这些类。</p>\n<p><strong>注意事项：</strong>访问者可以对功能进行统一，可以做报表、UI、拦截器与过滤器。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现<sunfy-line></h2><p>我们将创建一个定义接受操作的 <em>ComputerPart</em> 接口。<em>Keyboard</em>、<em>Mouse</em>、<em>Monitor</em> 和 <em>Computer</em> 是实现了 <em>ComputerPart</em> 接口的实体类。我们将定义另一个接口 <em>ComputerPartVisitor</em>，它定义了访问者类的操作。<em>Computer</em> 使用实体访问者来执行相应的动作。</p>\n<p><em>VisitorPatternDemo</em>，我们的演示类使用 <em>Computer</em>、<em>ComputerPartVisitor</em> 类来演示访问者模式的用法。</p>\n<p><img src=\"../../../../img/Visitor/visitor_pattern_uml_diagram.jpg\" alt=\"访问者模式的 UML 图\"></p>\n<h3 id=\"步骤-1\"><a href=\"#步骤-1\" class=\"headerlink\" title=\"步骤 1\"></a>步骤 1</h3><p>定义一个表示元素的接口。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-2\"><a href=\"#步骤-2\" class=\"headerlink\" title=\"步骤 2\"></a>步骤 2</h3><p>创建扩展了上述类的实体类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Keyboard</span>  <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span> </span>&#123;</span><br><span class=\"line\">      computerPartVisitor.visit(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Monitor</span>  <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span> </span>&#123;</span><br><span class=\"line\">      computerPartVisitor.visit(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mouse</span>  <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span> </span>&#123;</span><br><span class=\"line\">      computerPartVisitor.visit(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Computer</span> <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   ComputerPart[] parts;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Computer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      parts = <span class=\"keyword\">new</span> ComputerPart[] &#123;<span class=\"keyword\">new</span> Mouse(), <span class=\"keyword\">new</span> Keyboard(), <span class=\"keyword\">new</span> Monitor()&#125;;      </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; parts.length; i++) &#123;</span><br><span class=\"line\">         parts[i].accept(computerPartVisitor);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      computerPartVisitor.visit(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-3\"><a href=\"#步骤-3\" class=\"headerlink\" title=\"步骤 3\"></a>步骤 3</h3><p>定义一个表示访问者的接口。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ComputerPartVisitor</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Computer computer)</span></span>;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Mouse mouse)</span></span>;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Keyboard keyboard)</span></span>;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Monitor monitor)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-4\"><a href=\"#步骤-4\" class=\"headerlink\" title=\"步骤 4\"></a>步骤 4</h3><p>创建实现了上述类的实体访问者。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ComputerPartDisplayVisitor</span> <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPartVisitor</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Computer computer)</span> </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Displaying Computer.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Mouse mouse)</span> </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Displaying Mouse.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Keyboard keyboard)</span> </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Displaying Keyboard.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Monitor monitor)</span> </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Displaying Monitor.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-5\"><a href=\"#步骤-5\" class=\"headerlink\" title=\"步骤 5\"></a>步骤 5</h3><p>使用 <em>ComputerPartDisplayVisitor</em> 来显示 <em>Computer</em> 的组成部分。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class VisitorPatternDemo &#123;</span><br><span class=\"line\">   public static void main(String[] args) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">      ComputerPart computer &#x3D; new Computer();</span><br><span class=\"line\">      computer.accept(new ComputerPartDisplayVisitor());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-6\"><a href=\"#步骤-6\" class=\"headerlink\" title=\"步骤 6\"></a>步骤 6</h3><p>执行程序，输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Displaying Mouse.</span><br><span class=\"line\">Displaying Keyboard.</span><br><span class=\"line\">Displaying Monitor.</span><br><span class=\"line\">Displaying Computer.</span><br></pre></td></tr></table></figure>\n","more":"<p>在访问者模式（Visitor Pattern）中，我们使用了一个访问者类，它改变了元素类的执行算法。通过这种方式，元素的执行算法可以随着访问者改变而改变。这种类型的设计模式属于行为型模式。根据模式，元素对象已接受访问者对象，这样访问者对象就可以处理元素对象上的操作。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p><strong>意图：</strong>主要将数据结构与数据操作分离。</p>\n<p><strong>主要解决：</strong>稳定的数据结构和易变的操作耦合问题。</p>\n<p><strong>何时使用：</strong>需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免让这些操作”污染”这些对象的类，使用访问者模式将这些封装到类中。</p>\n<p><strong>如何解决：</strong>在被访问的类里面加一个对外提供接待访问者的接口。</p>\n<p><strong>关键代码：</strong>在数据基础类里面有一个方法接受访问者，将自身引用传入访问者。</p>\n<p><strong>应用实例：</strong>您在朋友家做客，您是访问者，朋友接受您的访问，您通过朋友的描述，然后对朋友的描述做出一个判断，这就是访问者模式。</p>\n<p><strong>优点：</strong> 1、符合单一职责原则。 2、优秀的扩展性。 3、灵活性。</p>\n<p><strong>缺点：</strong> 1、具体元素对访问者公布细节，违反了迪米特原则。 2、具体元素变更比较困难。 3、违反了依赖倒置原则，依赖了具体类，没有依赖抽象。</p>\n<p><strong>使用场景：</strong> 1、对象结构中对象对应的类很少改变，但经常需要在此对象结构上定义新的操作。 2、需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免让这些操作”污染”这些对象的类，也不希望在增加新操作时修改这些类。</p>\n<p><strong>注意事项：</strong>访问者可以对功能进行统一，可以做报表、UI、拦截器与过滤器。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现<sunfy-line></h2><p>我们将创建一个定义接受操作的 <em>ComputerPart</em> 接口。<em>Keyboard</em>、<em>Mouse</em>、<em>Monitor</em> 和 <em>Computer</em> 是实现了 <em>ComputerPart</em> 接口的实体类。我们将定义另一个接口 <em>ComputerPartVisitor</em>，它定义了访问者类的操作。<em>Computer</em> 使用实体访问者来执行相应的动作。</p>\n<p><em>VisitorPatternDemo</em>，我们的演示类使用 <em>Computer</em>、<em>ComputerPartVisitor</em> 类来演示访问者模式的用法。</p>\n<p><img src=\"../../../../img/Visitor/visitor_pattern_uml_diagram.jpg\" alt=\"访问者模式的 UML 图\"></p>\n<h3 id=\"步骤-1\"><a href=\"#步骤-1\" class=\"headerlink\" title=\"步骤 1\"></a>步骤 1</h3><p>定义一个表示元素的接口。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-2\"><a href=\"#步骤-2\" class=\"headerlink\" title=\"步骤 2\"></a>步骤 2</h3><p>创建扩展了上述类的实体类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Keyboard</span>  <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span> </span>&#123;</span><br><span class=\"line\">      computerPartVisitor.visit(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Monitor</span>  <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span> </span>&#123;</span><br><span class=\"line\">      computerPartVisitor.visit(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Mouse</span>  <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span> </span>&#123;</span><br><span class=\"line\">      computerPartVisitor.visit(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Computer</span> <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPart</span> </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   ComputerPart[] parts;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Computer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      parts = <span class=\"keyword\">new</span> ComputerPart[] &#123;<span class=\"keyword\">new</span> Mouse(), <span class=\"keyword\">new</span> Keyboard(), <span class=\"keyword\">new</span> Monitor()&#125;;      </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">accept</span><span class=\"params\">(ComputerPartVisitor computerPartVisitor)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; parts.length; i++) &#123;</span><br><span class=\"line\">         parts[i].accept(computerPartVisitor);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      computerPartVisitor.visit(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-3\"><a href=\"#步骤-3\" class=\"headerlink\" title=\"步骤 3\"></a>步骤 3</h3><p>定义一个表示访问者的接口。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ComputerPartVisitor</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Computer computer)</span></span>;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Mouse mouse)</span></span>;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Keyboard keyboard)</span></span>;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Monitor monitor)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-4\"><a href=\"#步骤-4\" class=\"headerlink\" title=\"步骤 4\"></a>步骤 4</h3><p>创建实现了上述类的实体访问者。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ComputerPartDisplayVisitor</span> <span class=\"keyword\">implements</span> <span class=\"title\">ComputerPartVisitor</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Computer computer)</span> </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Displaying Computer.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Mouse mouse)</span> </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Displaying Mouse.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Keyboard keyboard)</span> </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Displaying Keyboard.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">visit</span><span class=\"params\">(Monitor monitor)</span> </span>&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Displaying Monitor.\"</span>);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-5\"><a href=\"#步骤-5\" class=\"headerlink\" title=\"步骤 5\"></a>步骤 5</h3><p>使用 <em>ComputerPartDisplayVisitor</em> 来显示 <em>Computer</em> 的组成部分。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class VisitorPatternDemo &#123;</span><br><span class=\"line\">   public static void main(String[] args) &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">      ComputerPart computer &#x3D; new Computer();</span><br><span class=\"line\">      computer.accept(new ComputerPartDisplayVisitor());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-6\"><a href=\"#步骤-6\" class=\"headerlink\" title=\"步骤 6\"></a>步骤 6</h3><p>执行程序，输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Displaying Mouse.</span><br><span class=\"line\">Displaying Keyboard.</span><br><span class=\"line\">Displaying Monitor.</span><br><span class=\"line\">Displaying Computer.</span><br></pre></td></tr></table></figure>\n","next":{"title":"java设计模式之迭代器模式","path":"api/articles/resource-designpattern-behavior-Iterator.json","image":"/img/header_img/Design/Iterator.png","num_read":1162,"num_like":517,"num_collection":556,"num_comments":120},"prev":{"title":"shiro入门基础教程","path":"api/articles/resource-java-shiro-shirotoUse.json","num_read":1547,"num_like":975,"num_collection":636,"num_comments":57},"categories":[{"name":"设计模式","path":"api/categories/设计模式.json","pathContent":"api/categories/设计模式","description":"简单快捷、解决方案","cover":"https://sunfy9.gitee.io/project/photo/project/design.jpg"}],"tags":[]}