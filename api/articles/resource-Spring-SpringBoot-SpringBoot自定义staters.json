{"title":"SpringBoot自定义staters","num_read":1025,"num_like":1078,"num_collection":106,"num_comments":219,"slug":"resource-Spring-SpringBoot-SpringBoot自定义staters","date":"2020-10-10T16:00:00.000Z","img":"/img/header_img/spring/springstaters.PNG","format":"max","_id":"clhrbp2fq00fpo5lgg46nh4dt","project":"Spring","type":"banner","subtitle":"SpringBoot 最强大的功能就是把我们常用的场景抽取成了一个个starter（场景启动器）","hot":"like","site":{"data":{}},"updated":"2022-09-20T02:20:38.434Z","author":"Sunfy","comments":true,"path":"api/articles/resource-Spring-SpringBoot-SpringBoot自定义staters.json","webPath":"2020/10/11/resource-Spring-SpringBoot-SpringBoot自定义staters/","permalink":"https://sunfy9.gitee.io/2020/10/11/resource-Spring-SpringBoot-SpringBoot%E8%87%AA%E5%AE%9A%E4%B9%89staters/","excerpt":"SpringBoot 最强大的功能就是把我们常用的场景抽取成了一个个starter（场景启动器），我们通过引入springboot 为我提供的这些场景启动器，我们再进行少量的配置就能使用相应的功能。即使是这样，springboot也不能囊括我们所有的使用场景，往往我们需要自定义starter，来简化我们对springboot的使用。官网中starter的相关介绍","covers":["../../../../img/SpringBoot自定义staters/image-20210119111957403.png","../../../../img/SpringBoot自定义staters/image-20210119112125961.png","../../../../img/SpringBoot自定义staters/image-20210119112849108.png","../../../../img/SpringBoot自定义staters/image-20210119112928679.png"],"keywords":"sunfy, hexo-theme-snail","content":"<p>SpringBoot 最强大的功能就是把我们常用的场景抽取成了一个个starter（场景启动器），我们通过引入springboot 为我提供的这些场景启动器，我们再进行少量的配置就能使用相应的功能。即使是这样，springboot也不能囊括我们所有的使用场景，往往我们需要自定义starter，来简化我们对springboot的使用。</p>\n<p><a href=\"https://docs.spring.io/spring-boot/docs/2.3.8.RELEASE/reference/html/using-spring-boot.html#using-boot-starter\" target=\"_blank\" rel=\"noopener\">官网中starter的相关介绍</a><a id=\"more\"></a></p>\n<h2 id=\"1、官网简介\"><a href=\"#1、官网简介\" class=\"headerlink\" title=\"1、官网简介\"></a>1、官网简介</h2><p>入门程序是一组便捷的依赖项描述符，您可以在应用程序中包括它们。您可以一站式购买所需的所有Spring和相关技术，而不必遍历示例代码和依赖描述符的复制粘贴负载。例如，如果要开始使用Spring和JPA进行数据库访问，请<code>spring-boot-starter-data-jpa</code>在项目中包括依赖项。</p>\n<p>入门程序包含许多启动项目并快速运行所需的依赖项，并且具有一组受支持的受管传递性依赖项。</p>\n<p><img src=\"../../../../img/SpringBoot自定义staters/image-20210119111957403.png\" alt=\"image-20210119111957403\"></p>\n<h2 id=\"2、官网推荐命名\"><a href=\"#2、官网推荐命名\" class=\"headerlink\" title=\"2、官网推荐命名\"></a>2、官网推荐命名</h2><p>官方starter名称</p>\n<p><img src=\"../../../../img/SpringBoot自定义staters/image-20210119112125961.png\" alt=\"image-20210119112125961\"></p>\n<p>推荐的自建starter命名</p>\n<p><code>thirdpartyproject-spring-boot-starter</code>.</p>\n<p>官方命名空间</p>\n<ul>\n<li>前缀：spring-boot-starter-</li>\n<li>模式：spring-boot-starter-模块名</li>\n<li>举例：spring-boot-starter-web、spring-boot-starter-jdbc</li>\n</ul>\n<p>自定义命名空间</p>\n<ul>\n<li>后缀：-spring-boot-starter</li>\n<li>模式：模块-spring-boot-starter</li>\n<li>举例：mybatis-spring-boot-starter</li>\n</ul>\n<p>命名规范可以参看myBatis命名，SpringBoot关于MyBatis的Stater是MyBatis提供的，并非SpringBoot提供。<sunfy-line></p>\n<p><img src=\"../../../../img/SpringBoot自定义staters/image-20210119112849108.png\" alt=\"image-20210119112849108\"></p>\n<p><img src=\"../../../../img/SpringBoot自定义staters/image-20210119112928679.png\" alt=\"image-20210119112928679\"></p>\n<p>mybatis-spring-boot-starter依赖mybatis-spring-boot-autoconfigure</p>\n<h2 id=\"3、自定义starter\"><a href=\"#3、自定义starter\" class=\"headerlink\" title=\"3、自定义starter\"></a>3、自定义starter</h2><h3 id=\"1-启动器模块\"><a href=\"#1-启动器模块\" class=\"headerlink\" title=\"1.  启动器模块\"></a>1.  启动器模块</h3><ul>\n<li>根据命名规范创建模块</li>\n<li>空的jar文件，仅仅提供辅助性依赖管理，这些依赖可能用于自动装配或其他类库。</li>\n<li>需要专门写一个类似spring-boot-autoconfigure的配置模块</li>\n<li>pom依赖中添加autoconfigure项目依赖</li>\n<li>用的时候只需要引入启动器starter，就可以使用自动配置了</li>\n</ul>\n<h3 id=\"2-自动配置模块\"><a href=\"#2-自动配置模块\" class=\"headerlink\" title=\"2. 自动配置模块\"></a>2. 自动配置模块</h3><p>创建 xxxxx-spring-boot-autoconfigure项目，并配置自动配置类</p>\n<p><strong>不需要启动类</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span>  <span class=\"comment\">//指定这个类是一个配置类</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnXXX</span>  <span class=\"comment\">//指定条件成立的情况下自动配置类生效</span></span><br><span class=\"line\"><span class=\"meta\">@AutoConfigureOrder</span>  <span class=\"comment\">//指定自动配置类的顺序</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span>  <span class=\"comment\">//向容器中添加组件</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>  <span class=\"comment\">//结合相关xxxProperties来绑定相关的配置</span></span><br><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>  <span class=\"comment\">//让xxxProperties生效加入到容器中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自动配置类要能加载需要将自动配置类，配置在META-INF/spring.factories中</span></span><br><span class=\"line\"><span class=\"comment\">// demo</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\</span><br><span class=\"line\">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\</span><br><span class=\"line\">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// -------------自动配置类-------------</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnProperty</span>(value = <span class=\"string\">\"hello.name\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>(HelloProperties<span class=\"class\">.<span class=\"keyword\">class</span>)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">public</span> <span class=\"title\">class</span> <span class=\"title\">HelloAutoConfitguration</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    HelloProperties helloProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IndexController <span class=\"title\">indexController</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> IndexController(helloProperties);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// -------------属性注入-------------</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>(<span class=\"string\">\"hello\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloProperties</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// -------------具体业务处理-------------</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    HelloProperties helloProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">IndexController</span><span class=\"params\">(HelloProperties helloProperties)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.helloProperties=helloProperties;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">index</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> helloProperties.getName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">//</span> <span class=\"string\">-------------spring.factories配置类-------------</span></span><br><span class=\"line\"><span class=\"string\">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\</span></span><br><span class=\"line\">  <span class=\"string\">com.starter.HelloAutoConfitguration</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4、项目安装\"><a href=\"#4、项目安装\" class=\"headerlink\" title=\"4、项目安装\"></a>4、项目安装</h2><p>使用maven命令将两个项目安装至maven仓库，然后在其他项目中就可以引入starter，配置文件中根据自定义的starter规则配置，直接就可以实现开箱即用。</p>\n","more":"</p>\n<h2 id=\"1、官网简介\"><a href=\"#1、官网简介\" class=\"headerlink\" title=\"1、官网简介\"></a>1、官网简介</h2><p>入门程序是一组便捷的依赖项描述符，您可以在应用程序中包括它们。您可以一站式购买所需的所有Spring和相关技术，而不必遍历示例代码和依赖描述符的复制粘贴负载。例如，如果要开始使用Spring和JPA进行数据库访问，请<code>spring-boot-starter-data-jpa</code>在项目中包括依赖项。</p>\n<p>入门程序包含许多启动项目并快速运行所需的依赖项，并且具有一组受支持的受管传递性依赖项。</p>\n<p><img src=\"../../../../img/SpringBoot自定义staters/image-20210119111957403.png\" alt=\"image-20210119111957403\"></p>\n<h2 id=\"2、官网推荐命名\"><a href=\"#2、官网推荐命名\" class=\"headerlink\" title=\"2、官网推荐命名\"></a>2、官网推荐命名</h2><p>官方starter名称</p>\n<p><img src=\"../../../../img/SpringBoot自定义staters/image-20210119112125961.png\" alt=\"image-20210119112125961\"></p>\n<p>推荐的自建starter命名</p>\n<p><code>thirdpartyproject-spring-boot-starter</code>.</p>\n<p>官方命名空间</p>\n<ul>\n<li>前缀：spring-boot-starter-</li>\n<li>模式：spring-boot-starter-模块名</li>\n<li>举例：spring-boot-starter-web、spring-boot-starter-jdbc</li>\n</ul>\n<p>自定义命名空间</p>\n<ul>\n<li>后缀：-spring-boot-starter</li>\n<li>模式：模块-spring-boot-starter</li>\n<li>举例：mybatis-spring-boot-starter</li>\n</ul>\n<p>命名规范可以参看myBatis命名，SpringBoot关于MyBatis的Stater是MyBatis提供的，并非SpringBoot提供。<sunfy-line></p>\n<p><img src=\"../../../../img/SpringBoot自定义staters/image-20210119112849108.png\" alt=\"image-20210119112849108\"></p>\n<p><img src=\"../../../../img/SpringBoot自定义staters/image-20210119112928679.png\" alt=\"image-20210119112928679\"></p>\n<p>mybatis-spring-boot-starter依赖mybatis-spring-boot-autoconfigure</p>\n<h2 id=\"3、自定义starter\"><a href=\"#3、自定义starter\" class=\"headerlink\" title=\"3、自定义starter\"></a>3、自定义starter</h2><h3 id=\"1-启动器模块\"><a href=\"#1-启动器模块\" class=\"headerlink\" title=\"1.  启动器模块\"></a>1.  启动器模块</h3><ul>\n<li>根据命名规范创建模块</li>\n<li>空的jar文件，仅仅提供辅助性依赖管理，这些依赖可能用于自动装配或其他类库。</li>\n<li>需要专门写一个类似spring-boot-autoconfigure的配置模块</li>\n<li>pom依赖中添加autoconfigure项目依赖</li>\n<li>用的时候只需要引入启动器starter，就可以使用自动配置了</li>\n</ul>\n<h3 id=\"2-自动配置模块\"><a href=\"#2-自动配置模块\" class=\"headerlink\" title=\"2. 自动配置模块\"></a>2. 自动配置模块</h3><p>创建 xxxxx-spring-boot-autoconfigure项目，并配置自动配置类</p>\n<p><strong>不需要启动类</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span>  <span class=\"comment\">//指定这个类是一个配置类</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnXXX</span>  <span class=\"comment\">//指定条件成立的情况下自动配置类生效</span></span><br><span class=\"line\"><span class=\"meta\">@AutoConfigureOrder</span>  <span class=\"comment\">//指定自动配置类的顺序</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span>  <span class=\"comment\">//向容器中添加组件</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>  <span class=\"comment\">//结合相关xxxProperties来绑定相关的配置</span></span><br><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>  <span class=\"comment\">//让xxxProperties生效加入到容器中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自动配置类要能加载需要将自动配置类，配置在META-INF/spring.factories中</span></span><br><span class=\"line\"><span class=\"comment\">// demo</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\</span><br><span class=\"line\">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\</span><br><span class=\"line\">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// -------------自动配置类-------------</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnProperty</span>(value = <span class=\"string\">\"hello.name\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties</span>(HelloProperties<span class=\"class\">.<span class=\"keyword\">class</span>)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">public</span> <span class=\"title\">class</span> <span class=\"title\">HelloAutoConfitguration</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    HelloProperties helloProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IndexController <span class=\"title\">indexController</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> IndexController(helloProperties);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// -------------属性注入-------------</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties</span>(<span class=\"string\">\"hello\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloProperties</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// -------------具体业务处理-------------</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    HelloProperties helloProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">IndexController</span><span class=\"params\">(HelloProperties helloProperties)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.helloProperties=helloProperties;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">index</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> helloProperties.getName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">//</span> <span class=\"string\">-------------spring.factories配置类-------------</span></span><br><span class=\"line\"><span class=\"string\">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\</span></span><br><span class=\"line\">  <span class=\"string\">com.starter.HelloAutoConfitguration</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4、项目安装\"><a href=\"#4、项目安装\" class=\"headerlink\" title=\"4、项目安装\"></a>4、项目安装</h2><p>使用maven命令将两个项目安装至maven仓库，然后在其他项目中就可以引入starter，配置文件中根据自定义的starter规则配置，直接就可以实现开箱即用。</p>","next":{"title":"java设计模式之MVC模式","path":"api/articles/resource-designpattern-J2EE-mvc.json","image":"/img/header_img/Design/mvc.png","num_read":382,"num_like":329,"num_collection":642,"num_comments":51},"prev":{"title":"java设计模式之解释器模式","path":"api/articles/resource-designpattern-behavior-Interpreter.json","image":"/img/header_img/Design/Interpreter.png","num_read":775,"num_like":1051,"num_collection":783,"num_comments":139},"categories":[{"name":"Spring全家桶","path":"api/categories/Spring全家桶.json","pathContent":"api/categories/Spring全家桶","description":"更快、更容易、更安全","cover":"https://sunfy9.gitee.io/project/photo/project/spring.png"}],"tags":[{"name":"SpringBoot","path":"api/tags/SpringBoot.json","pathContent":"api/tags/SpringBoot","description":"更快、更容易、更安全","cover":"https://sunfy9.gitee.io/project/photo/project/spring.png"}]}