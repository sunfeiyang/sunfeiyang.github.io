{"title":"docker下gitlab安装配置使用","num_read":445,"num_like":487,"num_collection":527,"num_comments":57,"slug":"resource-RPC-Docker-docker下gitlab安装配置使用","date":"2020-12-14T16:00:00.000Z","img":"/img/header_img/docker/docker.gif","_id":"clhrbp2fm00e7o5lgc0efc0h4","project":"RPC","site":{"data":{}},"updated":"2022-09-20T02:13:59.030Z","author":"Sunfy","comments":true,"path":"api/articles/resource-RPC-Docker-docker下gitlab安装配置使用.json","webPath":"2020/12/15/resource-RPC-Docker-docker下gitlab安装配置使用/","permalink":"https://sunfy9.gitee.io/2020/12/15/resource-RPC-Docker-docker%E4%B8%8Bgitlab%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/","excerpt":"docker下gitlab安装配置使用(完整版)","covers":["../../../../img/docker下gitlab安装配置使用/image-20210227141137058.png","../../../../img/docker下gitlab安装配置使用/image-20210227141207422.png","../../../../img/docker下gitlab安装配置使用/image-20210227141234434.png","../../../../img/docker下gitlab安装配置使用/image-20210227141250217.png","../../../../img/docker下gitlab安装配置使用/image-20210227141308416.png","../../../../img/docker下gitlab安装配置使用/image-20210227141319942.png","../../../../img/docker下gitlab安装配置使用/image-20210227141337849.png","../../../../img/docker下gitlab安装配置使用/image-20210227141351085.png","../../../../img/docker下gitlab安装配置使用/image-20210227141405213.png","../../../../img/docker下gitlab安装配置使用/image-20210227141421384.png","../../../../img/docker下gitlab安装配置使用/image-20210227141438440.png","../../../../img/docker下gitlab安装配置使用/webp","../../../../img/docker下gitlab安装配置使用/image-20210227141453567.png","../../../../img/docker下gitlab安装配置使用/image-20210227141510681.png","../../../../img/docker下gitlab安装配置使用/image-20210227141523914.png","../../../../img/docker下gitlab安装配置使用/image-20210227141542867.png","../../../../img/docker下gitlab安装配置使用/image-20210227141601043.png","../../../../img/docker下gitlab安装配置使用/image-20210227141615614.png","../../../../img/docker下gitlab安装配置使用/image-20210227141629419.png","../../../../img/docker下gitlab安装配置使用/image-20210227141641044.png","../../../../img/docker下gitlab安装配置使用/image-20210227141653400.png","../../../../img/docker下gitlab安装配置使用/image-20210227141703602.png","../../../../img/docker下gitlab安装配置使用/image-20210227141717868.png","../../../../img/docker下gitlab安装配置使用/image-20210227141732533.png","../../../../img/docker下gitlab安装配置使用/image-20210227141746849.png"],"keywords":"sunfy, hexo-theme-snail","content":"<p>docker下gitlab安装配置使用(完整版)<a id=\"more\"></a></p>\n<p>docker 安装gitlab以及使用</p>\n<h2 id=\"一、安装及配置\"><a href=\"#一、安装及配置\" class=\"headerlink\" title=\"一、安装及配置\"></a>一、安装及配置</h2><h3 id=\"1-gitlab镜像拉取\"><a href=\"#1-gitlab镜像拉取\" class=\"headerlink\" title=\"1.gitlab镜像拉取\"></a>1.gitlab镜像拉取</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gitlab-ce为稳定版本，后面不填写版本则默认pull最新latest版本</span></span><br><span class=\"line\">$ docker pull gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141137058.png\" alt=\"image-20210227141137058\"><br>拉取镜像</p>\n<h3 id=\"2-运行gitlab镜像\"><a href=\"#2-运行gitlab镜像\" class=\"headerlink\" title=\"2.运行gitlab镜像\"></a>2.运行gitlab镜像</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -d  -p <span class=\"number\">443</span>:<span class=\"number\">443</span> -p <span class=\"number\">80</span>:<span class=\"number\">80</span> -p <span class=\"number\">222</span>:<span class=\"number\">22</span> --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/<span class=\"keyword\">var</span>/log/gitlab -v /home/gitlab/data:/<span class=\"keyword\">var</span>/opt/gitlab gitlab/gitlab-ce</span><br><span class=\"line\"><span class=\"meta\"># -d：后台运行</span></span><br><span class=\"line\"><span class=\"meta\"># -p：将容器内部端口向外映射</span></span><br><span class=\"line\"><span class=\"meta\"># --name：命名容器名称</span></span><br><span class=\"line\"><span class=\"meta\"># -v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录</span></span><br></pre></td></tr></table></figure>\n<p>运行成功后出现一串字符串<br><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141207422.png\" alt=\"image-20210227141207422\"><br>运行成功</p>\n<h3 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3.配置\"></a>3.配置<sunfy-line></h3><p>按上面的方式，gitlab容器运行没问题，但在gitlab上创建项目的时候，生成项目的URL访问地址是按容器的hostname来生成的，也就是容器的id。作为gitlab服务器，我们需要一个固定的URL访问地址，于是需要配置gitlab.rb（宿主机路径：/home/gitlab/config/gitlab.rb）。<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gitlab.rb文件内容默认全是注释</span></span><br><span class=\"line\">$ vim /home/gitlab/config/gitlab.rb</span><br></pre></td></tr></table></figure><br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置http协议所使用的访问地址,不加端口号默认为80</span></span><br><span class=\"line\">external_url <span class=\"string\">'http://192.168.199.231'</span></span><br><span class=\"line\"><span class=\"comment\"># 配置ssh协议所使用的访问地址和端口</span></span><br><span class=\"line\">gitlab_rails[<span class=\"string\">'gitlab_ssh_host'</span>] = <span class=\"string\">'192.168.199.231'</span></span><br><span class=\"line\">gitlab_rails[<span class=\"string\">'gitlab_shell_ssh_port'</span>] = <span class=\"number\">222</span> <span class=\"comment\"># 此端口是run时22端口映射的222端口</span></span><br><span class=\"line\"><span class=\"symbol\">:wq</span> <span class=\"comment\">#保存配置文件并退出</span></span><br></pre></td></tr></table></figure><br><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141234434.png\" alt=\"image-20210227141234434\"></p>\n<p>修改gitlab.rb文件</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重启gitlab容器</span></span><br><span class=\"line\">$ docker restart gitlab</span><br></pre></td></tr></table></figure>\n<p>此时项目的仓库地址就变了。如果ssh端口地址不是默认的22，就会加上ssh:// 协议头<br> 打开浏览器输入ip地址(因为我的gitlab端口为80，所以浏览器url不用输入端口号，如果端口号不是80，则打开为：ip:端口号)</p>\n<h3 id=\"4-创建一个项目\"><a href=\"#4-创建一个项目\" class=\"headerlink\" title=\"4.创建一个项目\"></a>4.创建一个项目</h3><p>第一次进入要输入新的root用户密码，设置好之后确定就行</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141250217.png\" alt=\"image-20210227141250217\"></p>\n<p>gitlab页面</p>\n<p>下面我们就可以新建一个项目了，点击Create a project</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141308416.png\" alt=\"image-20210227141308416\"></p>\n<p>Create a project</p>\n<p>创建完成后：<img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141319942.png\" alt=\"image-20210227141319942\"></p>\n<p>创建完成！</p>\n<h2 id=\"二、用户使用\"><a href=\"#二、用户使用\" class=\"headerlink\" title=\"二、用户使用\"></a>二、用户使用</h2><h3 id=\"1-下载git-exe\"><a href=\"#1-下载git-exe\" class=\"headerlink\" title=\"1.下载git.exe\"></a>1.下载git.exe</h3><p>双击git.exe安装git（一直点下一步，直到完成）<br> 点击电脑桌面空白地方右键看到如下两行即安装成功</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141337849.png\" alt=\"image-20210227141337849\"></p>\n<p>image.png</p>\n<h3 id=\"2-登录gitlab网页\"><a href=\"#2-登录gitlab网页\" class=\"headerlink\" title=\"2.登录gitlab网页\"></a>2.登录gitlab网页</h3><blockquote>\n<p><strong>url</strong>：<a href=\"http://192.168.1.111\" target=\"_blank\" rel=\"noopener\">http://192.168.1.111</a><br> 填写账号密码登录</p>\n</blockquote>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141351085.png\" alt=\"image-20210227141351085\"></p>\n<p>登录页面</p>\n<h3 id=\"3-设置ssh\"><a href=\"#3-设置ssh\" class=\"headerlink\" title=\"3.设置ssh\"></a>3.设置ssh</h3><p>1.打开本地git bash,使用如下命令生成ssh公钥和私钥对</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">'xxx@xxx.com'</span></span><br></pre></td></tr></table></figure>\n<p>然后一路回车(-C 参数是你的邮箱地址)</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141405213.png\" alt=\"image-20210227141405213\"></p>\n<p>生成密匙</p>\n<p>2.然后输入命令：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ~表示用户目录，比如我的windows就是C:\\Users\\Administrator，并复制其中的内容</span></span><br><span class=\"line\">$ cat ~<span class=\"regexp\">/.ssh/id</span>_rsa.pub</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141421384.png\" alt=\"image-20210227141421384\"></p>\n<p>公匙</p>\n<p>3.打开gitlab,找到Profile Settings—&gt;SSH Keys—-&gt;Add SSH Key,并把上一步中复制的内容粘贴到Key所对应的文本框</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141438440.png\" alt=\"image-20210227141438440\"></p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/webp\" alt=\"img\"></p>\n<p>添加公匙到gitlab</p>\n<h2 id=\"4-从gitlab克隆代码\"><a href=\"#4-从gitlab克隆代码\" class=\"headerlink\" title=\"4.从gitlab克隆代码\"></a>4.从gitlab克隆代码</h2><p>1.回到gitlab页面点击projects-&gt;your projects</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141453567.png\" alt=\"image-20210227141453567\"></p>\n<p>2.选择一个需要克隆的项目，进入</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141510681.png\" alt=\"image-20210227141510681\"></p>\n<p>我的项目页面</p>\n<p>3.点击按钮复制地址</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141523914.png\" alt=\"image-20210227141523914\"></p>\n<p>复制ssh地址</p>\n<p>4.新建一个文件夹，我在这里在我的电脑D盘下新建project文件夹</p>\n<p>5.进入projects文件夹右键选择-&gt;Git Bash Here</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141542867.png\" alt=\"image-20210227141542867\"></p>\n<p>点击Git Bash Here</p>\n<p>6.设置用户名和邮箱</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --<span class=\"keyword\">global</span> user.name <span class=\"string\">\"你的名字\"</span></span><br><span class=\"line\">$ git config --<span class=\"keyword\">global</span> user.email <span class=\"string\">\"你的邮箱\"</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141601043.png\" alt=\"image-20210227141601043\"></p>\n<p>设置名字和邮箱</p>\n<p>7.克隆项目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> 项目地址</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141615614.png\" alt=\"image-20210227141615614\"></p>\n<p>克隆项目</p>\n<p>8.查看projects文件夹，项目已经克隆下来了</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141629419.png\" alt=\"image-20210227141629419\"></p>\n<p>项目目录</p>\n<h3 id=\"5-提交代码到gitlab\"><a href=\"#5-提交代码到gitlab\" class=\"headerlink\" title=\"5.提交代码到gitlab\"></a>5.提交代码到gitlab</h3><p>1.基于以上步骤，在克隆的项目文件夹下新增一个测试文件</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141641044.png\" alt=\"image-20210227141641044\"></p>\n<p>新增txt文件</p>\n<p>2.查看同步状态<br> 在项目文件夹下右键点击-&gt;Git Bash Here</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141653400.png\" alt=\"image-20210227141653400\"></p>\n<p>输入</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141703602.png\" alt=\"image-20210227141703602\"></p>\n<p>状态</p>\n<p>可以看到红色部分有需要提交的文件<br> 3.提交代码<br> 输入</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"keyword\">add</span>  测试提交的文件.txt</span><br></pre></td></tr></table></figure>\n<p>(“git add“后加“.”则添加全部文件，也可以加”*.txt”表示添加全部需要提交的txt文件 )</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141717868.png\" alt=\"image-20210227141717868\"></p>\n<p>add需要提交的文件</p>\n<p>然后输入以下命令提交并添加提交信息</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m <span class=\"string\">\"message\"</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141732533.png\" alt=\"image-20210227141732533\"></p>\n<p>commit</p>\n<p>最后输出以下命令提交到gitlab</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin master</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141746849.png\" alt=\"image-20210227141746849\"></p>\n<p>push</p>\n<p>提交完成啦<br> 再回到gitlab上看该项目就可以看到多了一个txt测试文件</p>\n","more":"</p>\n<p>docker 安装gitlab以及使用</p>\n<h2 id=\"一、安装及配置\"><a href=\"#一、安装及配置\" class=\"headerlink\" title=\"一、安装及配置\"></a>一、安装及配置</h2><h3 id=\"1-gitlab镜像拉取\"><a href=\"#1-gitlab镜像拉取\" class=\"headerlink\" title=\"1.gitlab镜像拉取\"></a>1.gitlab镜像拉取</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gitlab-ce为稳定版本，后面不填写版本则默认pull最新latest版本</span></span><br><span class=\"line\">$ docker pull gitlab/gitlab-ce</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141137058.png\" alt=\"image-20210227141137058\"><br>拉取镜像</p>\n<h3 id=\"2-运行gitlab镜像\"><a href=\"#2-运行gitlab镜像\" class=\"headerlink\" title=\"2.运行gitlab镜像\"></a>2.运行gitlab镜像</h3><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -d  -p <span class=\"number\">443</span>:<span class=\"number\">443</span> -p <span class=\"number\">80</span>:<span class=\"number\">80</span> -p <span class=\"number\">222</span>:<span class=\"number\">22</span> --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/<span class=\"keyword\">var</span>/log/gitlab -v /home/gitlab/data:/<span class=\"keyword\">var</span>/opt/gitlab gitlab/gitlab-ce</span><br><span class=\"line\"><span class=\"meta\"># -d：后台运行</span></span><br><span class=\"line\"><span class=\"meta\"># -p：将容器内部端口向外映射</span></span><br><span class=\"line\"><span class=\"meta\"># --name：命名容器名称</span></span><br><span class=\"line\"><span class=\"meta\"># -v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录</span></span><br></pre></td></tr></table></figure>\n<p>运行成功后出现一串字符串<br><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141207422.png\" alt=\"image-20210227141207422\"><br>运行成功</p>\n<h3 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3.配置\"></a>3.配置<sunfy-line></h3><p>按上面的方式，gitlab容器运行没问题，但在gitlab上创建项目的时候，生成项目的URL访问地址是按容器的hostname来生成的，也就是容器的id。作为gitlab服务器，我们需要一个固定的URL访问地址，于是需要配置gitlab.rb（宿主机路径：/home/gitlab/config/gitlab.rb）。<br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># gitlab.rb文件内容默认全是注释</span></span><br><span class=\"line\">$ vim /home/gitlab/config/gitlab.rb</span><br></pre></td></tr></table></figure><br><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置http协议所使用的访问地址,不加端口号默认为80</span></span><br><span class=\"line\">external_url <span class=\"string\">'http://192.168.199.231'</span></span><br><span class=\"line\"><span class=\"comment\"># 配置ssh协议所使用的访问地址和端口</span></span><br><span class=\"line\">gitlab_rails[<span class=\"string\">'gitlab_ssh_host'</span>] = <span class=\"string\">'192.168.199.231'</span></span><br><span class=\"line\">gitlab_rails[<span class=\"string\">'gitlab_shell_ssh_port'</span>] = <span class=\"number\">222</span> <span class=\"comment\"># 此端口是run时22端口映射的222端口</span></span><br><span class=\"line\"><span class=\"symbol\">:wq</span> <span class=\"comment\">#保存配置文件并退出</span></span><br></pre></td></tr></table></figure><br><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141234434.png\" alt=\"image-20210227141234434\"></p>\n<p>修改gitlab.rb文件</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重启gitlab容器</span></span><br><span class=\"line\">$ docker restart gitlab</span><br></pre></td></tr></table></figure>\n<p>此时项目的仓库地址就变了。如果ssh端口地址不是默认的22，就会加上ssh:// 协议头<br> 打开浏览器输入ip地址(因为我的gitlab端口为80，所以浏览器url不用输入端口号，如果端口号不是80，则打开为：ip:端口号)</p>\n<h3 id=\"4-创建一个项目\"><a href=\"#4-创建一个项目\" class=\"headerlink\" title=\"4.创建一个项目\"></a>4.创建一个项目</h3><p>第一次进入要输入新的root用户密码，设置好之后确定就行</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141250217.png\" alt=\"image-20210227141250217\"></p>\n<p>gitlab页面</p>\n<p>下面我们就可以新建一个项目了，点击Create a project</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141308416.png\" alt=\"image-20210227141308416\"></p>\n<p>Create a project</p>\n<p>创建完成后：<img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141319942.png\" alt=\"image-20210227141319942\"></p>\n<p>创建完成！</p>\n<h2 id=\"二、用户使用\"><a href=\"#二、用户使用\" class=\"headerlink\" title=\"二、用户使用\"></a>二、用户使用</h2><h3 id=\"1-下载git-exe\"><a href=\"#1-下载git-exe\" class=\"headerlink\" title=\"1.下载git.exe\"></a>1.下载git.exe</h3><p>双击git.exe安装git（一直点下一步，直到完成）<br> 点击电脑桌面空白地方右键看到如下两行即安装成功</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141337849.png\" alt=\"image-20210227141337849\"></p>\n<p>image.png</p>\n<h3 id=\"2-登录gitlab网页\"><a href=\"#2-登录gitlab网页\" class=\"headerlink\" title=\"2.登录gitlab网页\"></a>2.登录gitlab网页</h3><blockquote>\n<p><strong>url</strong>：<a href=\"http://192.168.1.111\" target=\"_blank\" rel=\"noopener\">http://192.168.1.111</a><br> 填写账号密码登录</p>\n</blockquote>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141351085.png\" alt=\"image-20210227141351085\"></p>\n<p>登录页面</p>\n<h3 id=\"3-设置ssh\"><a href=\"#3-设置ssh\" class=\"headerlink\" title=\"3.设置ssh\"></a>3.设置ssh</h3><p>1.打开本地git bash,使用如下命令生成ssh公钥和私钥对</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">'xxx@xxx.com'</span></span><br></pre></td></tr></table></figure>\n<p>然后一路回车(-C 参数是你的邮箱地址)</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141405213.png\" alt=\"image-20210227141405213\"></p>\n<p>生成密匙</p>\n<p>2.然后输入命令：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ~表示用户目录，比如我的windows就是C:\\Users\\Administrator，并复制其中的内容</span></span><br><span class=\"line\">$ cat ~<span class=\"regexp\">/.ssh/id</span>_rsa.pub</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141421384.png\" alt=\"image-20210227141421384\"></p>\n<p>公匙</p>\n<p>3.打开gitlab,找到Profile Settings—&gt;SSH Keys—-&gt;Add SSH Key,并把上一步中复制的内容粘贴到Key所对应的文本框</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141438440.png\" alt=\"image-20210227141438440\"></p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/webp\" alt=\"img\"></p>\n<p>添加公匙到gitlab</p>\n<h2 id=\"4-从gitlab克隆代码\"><a href=\"#4-从gitlab克隆代码\" class=\"headerlink\" title=\"4.从gitlab克隆代码\"></a>4.从gitlab克隆代码</h2><p>1.回到gitlab页面点击projects-&gt;your projects</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141453567.png\" alt=\"image-20210227141453567\"></p>\n<p>2.选择一个需要克隆的项目，进入</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141510681.png\" alt=\"image-20210227141510681\"></p>\n<p>我的项目页面</p>\n<p>3.点击按钮复制地址</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141523914.png\" alt=\"image-20210227141523914\"></p>\n<p>复制ssh地址</p>\n<p>4.新建一个文件夹，我在这里在我的电脑D盘下新建project文件夹</p>\n<p>5.进入projects文件夹右键选择-&gt;Git Bash Here</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141542867.png\" alt=\"image-20210227141542867\"></p>\n<p>点击Git Bash Here</p>\n<p>6.设置用户名和邮箱</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --<span class=\"keyword\">global</span> user.name <span class=\"string\">\"你的名字\"</span></span><br><span class=\"line\">$ git config --<span class=\"keyword\">global</span> user.email <span class=\"string\">\"你的邮箱\"</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141601043.png\" alt=\"image-20210227141601043\"></p>\n<p>设置名字和邮箱</p>\n<p>7.克隆项目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> 项目地址</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141615614.png\" alt=\"image-20210227141615614\"></p>\n<p>克隆项目</p>\n<p>8.查看projects文件夹，项目已经克隆下来了</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141629419.png\" alt=\"image-20210227141629419\"></p>\n<p>项目目录</p>\n<h3 id=\"5-提交代码到gitlab\"><a href=\"#5-提交代码到gitlab\" class=\"headerlink\" title=\"5.提交代码到gitlab\"></a>5.提交代码到gitlab</h3><p>1.基于以上步骤，在克隆的项目文件夹下新增一个测试文件</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141641044.png\" alt=\"image-20210227141641044\"></p>\n<p>新增txt文件</p>\n<p>2.查看同步状态<br> 在项目文件夹下右键点击-&gt;Git Bash Here</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141653400.png\" alt=\"image-20210227141653400\"></p>\n<p>输入</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141703602.png\" alt=\"image-20210227141703602\"></p>\n<p>状态</p>\n<p>可以看到红色部分有需要提交的文件<br> 3.提交代码<br> 输入</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"keyword\">add</span>  测试提交的文件.txt</span><br></pre></td></tr></table></figure>\n<p>(“git add“后加“.”则添加全部文件，也可以加”*.txt”表示添加全部需要提交的txt文件 )</p>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141717868.png\" alt=\"image-20210227141717868\"></p>\n<p>add需要提交的文件</p>\n<p>然后输入以下命令提交并添加提交信息</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m <span class=\"string\">\"message\"</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141732533.png\" alt=\"image-20210227141732533\"></p>\n<p>commit</p>\n<p>最后输出以下命令提交到gitlab</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin master</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/docker下gitlab安装配置使用/image-20210227141746849.png\" alt=\"image-20210227141746849\"></p>\n<p>push</p>\n<p>提交完成啦<br> 再回到gitlab上看该项目就可以看到多了一个txt测试文件</p>","next":{"title":"Maven私服:Docker安装nexus3","path":"api/articles/resource-RPC-Docker-Centos-Docker-nexus.json","image":"/img/header_img/docker/docker.jpg","num_read":1400,"num_like":287,"num_collection":228,"num_comments":83},"prev":{"title":"解决： Incorrect username or password, or no permission","path":"api/articles/resource-RPC-Docker-Centos-Docker-nexus-error-pwd.json","image":"/img/header_img/docker/docker.jpg","num_read":525,"num_like":345,"num_collection":643,"num_comments":183},"categories":[{"name":"RPC远程调用","path":"api/categories/RPC远程调用.json","pathContent":"api/categories/RPC远程调用","description":"RPC（Remote Procedure Call）远程过程调用，简单的理解是一个节点请求另一个节点提供的服务","cover":"https://sunfy9.gitee.io/project/photo/project/rpc.jpg"}],"tags":[{"name":"CentOS","path":"api/tags/CentOS.json","pathContent":"api/tags/CentOS","description":"免费的、开源的、可以重新分发的开源操作系统","cover":"https://sunfy9.gitee.io/img/header_img/windows/centos.png"},{"name":"gitlab","path":"api/tags/gitlab.json","pathContent":"api/tags/gitlab","description":"[gitlab]暂未设置说明","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"},{"name":"Docker","path":"api/tags/Docker.json","pathContent":"api/tags/Docker","description":"一个开源的应用容器引擎。","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}