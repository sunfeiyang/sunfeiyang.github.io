{"title":"SPRINGBOOT上传文件到自定义路径并查看","num_read":1471,"num_like":874,"num_collection":184,"num_comments":216,"slug":"resource-java-Base-SPRINGBOOT上传文件到自定义路径并查看","date":"2023-05-11T16:00:00.000Z","img":"/sunfy-java/img/header_img/java/java.png","format":"max","_id":"clhrbp2dw00bgo5lgflvn8dgc","project":"Java","type":"hot","site":{"data":{}},"updated":"2023-05-12T03:32:44.253Z","author":"Sunfy","comments":true,"path":"api/articles/resource-java-Base-SPRINGBOOT上传文件到自定义路径并查看.json","webPath":"2023/05/12/resource-java-Base-SPRINGBOOT上传文件到自定义路径并查看/","permalink":"https://sunfy9.gitee.io/2023/05/12/resource-java-Base-SPRINGBOOT%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E8%B7%AF%E5%BE%84%E5%B9%B6%E6%9F%A5%E7%9C%8B/","excerpt":null,"covers":["../../../../img/SPRINGBOOT上传文件到自定义路径并查看/image-20230512112843766.png","../../../../img/SPRINGBOOT上传文件到自定义路径并查看/image-20230512113040896.png","../../../../img/SPRINGBOOT上传文件到自定义路径并查看/image-20230512113209010.png"],"keywords":"sunfy, hexo-theme-snail","content":"<h1 id=\"上传文件\"><a href=\"#上传文件\" class=\"headerlink\" title=\"上传文件\"></a>上传文件</h1><p>最近在学习springboot的文件上传过程中遇到一些问题，后来结合一些帖子，发现一个比较方便的解决方法。</p>\n<p>很多资料上的例子都是将文件存放在tomcat的临时文件目录之类的位置，访问时只需要在浏览器输入<code>localhost:8080/xxx/xxx.xxx</code>即可。但是由于某种需求，或者避免文件存在特殊位置会被误删，导致后续相关操作出错。</p>\n<p>我们需要将文件存放在指定位置，例如：<code>D:/file</code>或者<code>/home/root/file</code>。很显然，这时使用<code>localhost:8080/D:/file/xxx.xxx</code>或者<code>localhost:8080/xxx.xxx</code>等都是无法正确访问的。</p>\n<p>这里我是通过配置虚拟路径来解决的，例如：将<code>/files/**</code>映射为<code>D:/file</code>。配置完成后，上传文件完毕，再输入<code>localhost:8080/files/xxx.xxx</code>就可查看该文件了。</p>\n<h3 id=\"上传方法\"><a href=\"#上传方法\" class=\"headerlink\" title=\"上传方法\"></a>上传方法</h3><p>首先使用一个比较简单的方法用于上传文件。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    SimpleDateFormat sdf=<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd/\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/upload\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">upload</span><span class=\"params\">(MultipartFile file, HttpServletRequest req)</span> </span>&#123;</span><br><span class=\"line\">        String realPath=req.getSession().getServletContext().getRealPath(<span class=\"string\">\"/uploadFile/\"</span>);</span><br><span class=\"line\">        String format=sdf.format(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\">        File folder=<span class=\"keyword\">new</span> File(realPath+format);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!folder.isDirectory())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!folder.mkdirs())&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"文件夹创建失败\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String oldName=file.getOriginalFilename();</span><br><span class=\"line\">        String newName= UUID.randomUUID().toString()+oldName.substring(oldName.lastIndexOf(<span class=\"string\">\".\"</span>),oldName.length());</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            file.transferTo(<span class=\"keyword\">new</span> File(folder,newName));</span><br><span class=\"line\">            String filePath=req.getScheme()+<span class=\"string\">\"://\"</span>+req.getServerName()+<span class=\"string\">\":\"</span>+req.getServerPort()+<span class=\"string\">\"/uploadFile/\"</span>+format+newName;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> filePath;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"上传失败！\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里面的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String realPath=req.getSession().getServletContext().getRealPath(<span class=\"string\">\"/uploadFile/\"</span>);</span><br></pre></td></tr></table></figure>\n<p>是用来获取<strong>工程的绝对路径</strong>，得到的值是这种形式（示例为linux下）：<br><code>/tmp/tomcat-xxx.xxxxxxxxxxxxxx.8080/uploadFile/</code> 后面再拼接日期<code>2020/07/19/</code>。文件夹创建完成后，就可以将文件写入相应位置了。</p>\n<p>这里还要注意一下<code>folder.mkdirs()</code>和<code>folder.mkdir()</code>的区别。</p>\n<p>代码中的文件名以随机生成的UUID+后缀名构成。所有操作完成后，便返回该文件的url值。</p>\n<h3 id=\"前端页面\"><a href=\"#前端页面\" class=\"headerlink\" title=\"前端页面\"></a>前端页面</h3><p>接着，在<code>/resources/static</code>下写一个简单的html页面用于测试。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/upload\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"请选择文件\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"上传\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意<code>name</code>的名字要和前面方法接收的<code>MultipartFile</code>的参数名一样，这里统一用<code>file</code>。</p>\n<h3 id=\"运行测试\"><a href=\"#运行测试\" class=\"headerlink\" title=\"运行测试\"></a>运行测试</h3><p>做完这些我们直接在浏览器中进入前端测试页面，看到的是这个样子：</p>\n<p><img src=\"../../../../img/SPRINGBOOT上传文件到自定义路径并查看/image-20230512112843766.png\" alt=\"image-20230512112843766\"></p>\n<p><img src=\"../../../../img/SPRINGBOOT上传文件到自定义路径并查看/image-20230512113040896.png\" alt=\"image-20230512113040896\"><br>选择一个图片进行上传后，浏览器会接收到上传成功的图片链接：<br>![](<a href=\"https://www.freesion.com/images/87/f9ef1acdbe3b3fd787691835592abeb7.png\" target=\"_blank\" rel=\"noopener\">https://www.freesion.com/images/87/f9ef1acdbe3b3fd787691835592abeb7.png</a></p>\n<h1 id=\"修改为自定义路径\"><a href=\"#修改为自定义路径\" class=\"headerlink\" title=\"修改为自定义路径\"></a>修改为自定义路径</h1><p>下面我们要将文件保存的位置设在另外的地方，这里改为自己喜欢的位置<code>/home/root/Documents/WebFiles/test/pic/</code>。需要修改<code>folder</code>的路径还有返回的<code>filePath</code>路径。<code>realPath</code>这个参数已经用不上了，我们可以把它删掉。</p>\n<p>这里要注意<code>folder</code>的路径，要确保那个位置你的应用是有权限进行操作的，否则会创建文件夹失败。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/upload\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">upload</span><span class=\"params\">(MultipartFile file, HttpServletRequest req)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 删除 String realPath=req.getSession().getServletContext().getRealPath(\"/uploadFile/\");        </span></span><br><span class=\"line\">    <span class=\"comment\">// 省略部分内容</span></span><br><span class=\"line\">    File folder=<span class=\"keyword\">new</span> File(<span class=\"string\">\"/home/root/Documents/WebFiles/test/pic/\"</span>+format);</span><br><span class=\"line\">    <span class=\"comment\">// 省略部分内容        </span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;        </span><br><span class=\"line\">        <span class=\"comment\">// 省略部分内容</span></span><br><span class=\"line\">        String filePath=req.getScheme()+<span class=\"string\">\"://\"</span>+req.getServerName()+<span class=\"string\">\":\"</span>+req.getServerPort()+<span class=\"string\">\"/test/pic/\"</span>+format+newName;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> filePath;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"上传失败！\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过代码不难看出，如果我们按照这里返回的路径去查看图片，肯定是出错的。这里就不进行测试了，大家可以自行尝试。</p>\n<h3 id=\"配置虚拟路径\"><a href=\"#配置虚拟路径\" class=\"headerlink\" title=\"配置虚拟路径\"></a>配置虚拟路径</h3><p>这里采用实现<code>WebMvcConfigurer</code>接口并重写<code>addResourceHandlers</code>的方法，还有一种通过继承<code>WebMvcConfigurerAdapter</code>的方法，已经被废弃了。</p>\n<p>为了方便，示例代码直接在当前类中实现了<code>WebMvcConfigurer</code>接口。不知道这样算不算正规的写法，请大家谨慎参考。</p>\n<p>我们将<code>/files/**</code>映射为<code>/home/root/Documents/WebFiles/</code>，这时，浏览器只需要输入<code>localhost:8080/files/</code>便可以访问<code>/home/root/Documents/WebFiles/</code>下的文件。</p>\n<p>重写完方法后，前面的<code>upload</code>方法需要修改一下返回路径，在原路径前增加<code>/files</code>即可返回正确的路径.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileController</span> <span class=\"keyword\">implements</span> <span class=\"title\">WebMvcConfigurer</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    SimpleDateFormat sdf=<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd/\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/upload\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">upload</span><span class=\"params\">(MultipartFile file, HttpServletRequest req)</span> </span>&#123;</span><br><span class=\"line\">         <span class=\"comment\">// 省略部分内容      </span></span><br><span class=\"line\">         String filePath=req.getScheme()+<span class=\"string\">\"://\"</span>+req.getServerName()+<span class=\"string\">\":\"</span>+req.getServerPort()+<span class=\"string\">\"/files/test/pic/\"</span>+format+newName;</span><br><span class=\"line\">         <span class=\"comment\">// 省略部分内容</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addResourceHandlers</span><span class=\"params\">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">        registry.addResourceHandler(<span class=\"string\">\"/files/**\"</span>).addResourceLocations(<span class=\"string\">\"file:/home/root/Documents/WebFiles/\"</span>);</span><br><span class=\"line\">        WebMvcConfigurer.<span class=\"keyword\">super</span>.addResourceHandlers(registry);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最终测试\"><a href=\"#最终测试\" class=\"headerlink\" title=\"最终测试\"></a>最终测试</h3><p>我们再次进入浏览器上传图片，得到如下链接：<br><img src=\"../../../../img/SPRINGBOOT上传文件到自定义路径并查看/image-20230512113209010.png\" alt=\"image-20230512113209010\"><br>复制链接并打开，图片显示正常，这里不放全图了：<br>![显示结果](<a href=\"https://www.freesion.com/images/335/71db8e30ea0dcb9f4bd8ab248c67f03f.png\" target=\"_blank\" rel=\"noopener\">https://www.freesion.com/images/335/71db8e30ea0dcb9f4bd8ab248c67f03f.png</a><br>可以看到，图片真正所在位置是位于<code>/home/root/Documents/WebFiles/test/pic/2020/07/19</code>即我们设置<code>/files</code>映射的位置+<code>/test/pic/2020/07/19</code>。</p>\n<p>到这里，修改基本完成了，最后放上修改完成后的完整代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileController</span> <span class=\"keyword\">implements</span> <span class=\"title\">WebMvcConfigurer</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    SimpleDateFormat sdf=<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd/\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/upload\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">upload</span><span class=\"params\">(MultipartFile file, HttpServletRequest req)</span> </span>&#123;</span><br><span class=\"line\">        String format=sdf.format(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\">        File folder=<span class=\"keyword\">new</span> File(<span class=\"string\">\"/home/root/Documents/WebFiles/test/pic/\"</span>+format);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!folder.isDirectory())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!folder.mkdirs())&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"文件夹创建失败\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(folder.getPath());</span><br><span class=\"line\">        String oldName=file.getOriginalFilename();</span><br><span class=\"line\">        String newName= UUID.randomUUID().toString()+oldName.substring(oldName.lastIndexOf(<span class=\"string\">\".\"</span>),oldName.length());</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            file.transferTo(<span class=\"keyword\">new</span> File(folder,newName));</span><br><span class=\"line\">            String filePath=req.getScheme()+<span class=\"string\">\"://\"</span>+req.getServerName()+<span class=\"string\">\":\"</span>+req.getServerPort()+<span class=\"string\">\"/files/test/pic/\"</span>+format+newName;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> filePath;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"上传失败！\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addResourceHandlers</span><span class=\"params\">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">        registry.addResourceHandler(<span class=\"string\">\"/files/**\"</span>).addResourceLocations(<span class=\"string\">\"file:/home/root/Documents/WebFiles/\"</span>);</span><br><span class=\"line\">        WebMvcConfigurer.<span class=\"keyword\">super</span>.addResourceHandlers(registry);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<h1 id=\"上传文件\"><a href=\"#上传文件\" class=\"headerlink\" title=\"上传文件\"></a>上传文件</h1><p>最近在学习springboot的文件上传过程中遇到一些问题，后来结合一些帖子，发现一个比较方便的解决方法。</p>\n<p>很多资料上的例子都是将文件存放在tomcat的临时文件目录之类的位置，访问时只需要在浏览器输入<code>localhost:8080/xxx/xxx.xxx</code>即可。但是由于某种需求，或者避免文件存在特殊位置会被误删，导致后续相关操作出错。</p>\n<p>我们需要将文件存放在指定位置，例如：<code>D:/file</code>或者<code>/home/root/file</code>。很显然，这时使用<code>localhost:8080/D:/file/xxx.xxx</code>或者<code>localhost:8080/xxx.xxx</code>等都是无法正确访问的。</p>\n<p>这里我是通过配置虚拟路径来解决的，例如：将<code>/files/**</code>映射为<code>D:/file</code>。配置完成后，上传文件完毕，再输入<code>localhost:8080/files/xxx.xxx</code>就可查看该文件了。</p>\n<h3 id=\"上传方法\"><a href=\"#上传方法\" class=\"headerlink\" title=\"上传方法\"></a>上传方法</h3><p>首先使用一个比较简单的方法用于上传文件。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    SimpleDateFormat sdf=<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd/\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/upload\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">upload</span><span class=\"params\">(MultipartFile file, HttpServletRequest req)</span> </span>&#123;</span><br><span class=\"line\">        String realPath=req.getSession().getServletContext().getRealPath(<span class=\"string\">\"/uploadFile/\"</span>);</span><br><span class=\"line\">        String format=sdf.format(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\">        File folder=<span class=\"keyword\">new</span> File(realPath+format);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!folder.isDirectory())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!folder.mkdirs())&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"文件夹创建失败\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String oldName=file.getOriginalFilename();</span><br><span class=\"line\">        String newName= UUID.randomUUID().toString()+oldName.substring(oldName.lastIndexOf(<span class=\"string\">\".\"</span>),oldName.length());</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            file.transferTo(<span class=\"keyword\">new</span> File(folder,newName));</span><br><span class=\"line\">            String filePath=req.getScheme()+<span class=\"string\">\"://\"</span>+req.getServerName()+<span class=\"string\">\":\"</span>+req.getServerPort()+<span class=\"string\">\"/uploadFile/\"</span>+format+newName;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> filePath;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"上传失败！\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里面的：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String realPath=req.getSession().getServletContext().getRealPath(<span class=\"string\">\"/uploadFile/\"</span>);</span><br></pre></td></tr></table></figure>\n<p>是用来获取<strong>工程的绝对路径</strong>，得到的值是这种形式（示例为linux下）：<br><code>/tmp/tomcat-xxx.xxxxxxxxxxxxxx.8080/uploadFile/</code> 后面再拼接日期<code>2020/07/19/</code>。文件夹创建完成后，就可以将文件写入相应位置了。</p>\n<p>这里还要注意一下<code>folder.mkdirs()</code>和<code>folder.mkdir()</code>的区别。</p>\n<p>代码中的文件名以随机生成的UUID+后缀名构成。所有操作完成后，便返回该文件的url值。</p>\n<h3 id=\"前端页面\"><a href=\"#前端页面\" class=\"headerlink\" title=\"前端页面\"></a>前端页面</h3><p>接着，在<code>/resources/static</code>下写一个简单的html页面用于测试。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"/upload\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span> <span class=\"attr\">enctype</span>=<span class=\"string\">\"multipart/form-data\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"请选择文件\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"上传\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意<code>name</code>的名字要和前面方法接收的<code>MultipartFile</code>的参数名一样，这里统一用<code>file</code>。</p>\n<h3 id=\"运行测试\"><a href=\"#运行测试\" class=\"headerlink\" title=\"运行测试\"></a>运行测试</h3><p>做完这些我们直接在浏览器中进入前端测试页面，看到的是这个样子：</p>\n<p><img src=\"../../../../img/SPRINGBOOT上传文件到自定义路径并查看/image-20230512112843766.png\" alt=\"image-20230512112843766\"></p>\n<p><img src=\"../../../../img/SPRINGBOOT上传文件到自定义路径并查看/image-20230512113040896.png\" alt=\"image-20230512113040896\"><br>选择一个图片进行上传后，浏览器会接收到上传成功的图片链接：<br>![](<a href=\"https://www.freesion.com/images/87/f9ef1acdbe3b3fd787691835592abeb7.png\" target=\"_blank\" rel=\"noopener\">https://www.freesion.com/images/87/f9ef1acdbe3b3fd787691835592abeb7.png</a></p>\n<h1 id=\"修改为自定义路径\"><a href=\"#修改为自定义路径\" class=\"headerlink\" title=\"修改为自定义路径\"></a>修改为自定义路径</h1><p>下面我们要将文件保存的位置设在另外的地方，这里改为自己喜欢的位置<code>/home/root/Documents/WebFiles/test/pic/</code>。需要修改<code>folder</code>的路径还有返回的<code>filePath</code>路径。<code>realPath</code>这个参数已经用不上了，我们可以把它删掉。</p>\n<p>这里要注意<code>folder</code>的路径，要确保那个位置你的应用是有权限进行操作的，否则会创建文件夹失败。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/upload\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">upload</span><span class=\"params\">(MultipartFile file, HttpServletRequest req)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 删除 String realPath=req.getSession().getServletContext().getRealPath(\"/uploadFile/\");        </span></span><br><span class=\"line\">    <span class=\"comment\">// 省略部分内容</span></span><br><span class=\"line\">    File folder=<span class=\"keyword\">new</span> File(<span class=\"string\">\"/home/root/Documents/WebFiles/test/pic/\"</span>+format);</span><br><span class=\"line\">    <span class=\"comment\">// 省略部分内容        </span></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;        </span><br><span class=\"line\">        <span class=\"comment\">// 省略部分内容</span></span><br><span class=\"line\">        String filePath=req.getScheme()+<span class=\"string\">\"://\"</span>+req.getServerName()+<span class=\"string\">\":\"</span>+req.getServerPort()+<span class=\"string\">\"/test/pic/\"</span>+format+newName;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> filePath;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"上传失败！\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>通过代码不难看出，如果我们按照这里返回的路径去查看图片，肯定是出错的。这里就不进行测试了，大家可以自行尝试。</p>\n<h3 id=\"配置虚拟路径\"><a href=\"#配置虚拟路径\" class=\"headerlink\" title=\"配置虚拟路径\"></a>配置虚拟路径</h3><p>这里采用实现<code>WebMvcConfigurer</code>接口并重写<code>addResourceHandlers</code>的方法，还有一种通过继承<code>WebMvcConfigurerAdapter</code>的方法，已经被废弃了。</p>\n<p>为了方便，示例代码直接在当前类中实现了<code>WebMvcConfigurer</code>接口。不知道这样算不算正规的写法，请大家谨慎参考。</p>\n<p>我们将<code>/files/**</code>映射为<code>/home/root/Documents/WebFiles/</code>，这时，浏览器只需要输入<code>localhost:8080/files/</code>便可以访问<code>/home/root/Documents/WebFiles/</code>下的文件。</p>\n<p>重写完方法后，前面的<code>upload</code>方法需要修改一下返回路径，在原路径前增加<code>/files</code>即可返回正确的路径.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileController</span> <span class=\"keyword\">implements</span> <span class=\"title\">WebMvcConfigurer</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    SimpleDateFormat sdf=<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd/\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/upload\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">upload</span><span class=\"params\">(MultipartFile file, HttpServletRequest req)</span> </span>&#123;</span><br><span class=\"line\">         <span class=\"comment\">// 省略部分内容      </span></span><br><span class=\"line\">         String filePath=req.getScheme()+<span class=\"string\">\"://\"</span>+req.getServerName()+<span class=\"string\">\":\"</span>+req.getServerPort()+<span class=\"string\">\"/files/test/pic/\"</span>+format+newName;</span><br><span class=\"line\">         <span class=\"comment\">// 省略部分内容</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addResourceHandlers</span><span class=\"params\">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">        registry.addResourceHandler(<span class=\"string\">\"/files/**\"</span>).addResourceLocations(<span class=\"string\">\"file:/home/root/Documents/WebFiles/\"</span>);</span><br><span class=\"line\">        WebMvcConfigurer.<span class=\"keyword\">super</span>.addResourceHandlers(registry);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最终测试\"><a href=\"#最终测试\" class=\"headerlink\" title=\"最终测试\"></a>最终测试</h3><p>我们再次进入浏览器上传图片，得到如下链接：<br><img src=\"../../../../img/SPRINGBOOT上传文件到自定义路径并查看/image-20230512113209010.png\" alt=\"image-20230512113209010\"><br>复制链接并打开，图片显示正常，这里不放全图了：<br>![显示结果](<a href=\"https://www.freesion.com/images/335/71db8e30ea0dcb9f4bd8ab248c67f03f.png\" target=\"_blank\" rel=\"noopener\">https://www.freesion.com/images/335/71db8e30ea0dcb9f4bd8ab248c67f03f.png</a><br>可以看到，图片真正所在位置是位于<code>/home/root/Documents/WebFiles/test/pic/2020/07/19</code>即我们设置<code>/files</code>映射的位置+<code>/test/pic/2020/07/19</code>。</p>\n<p>到这里，修改基本完成了，最后放上修改完成后的完整代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FileController</span> <span class=\"keyword\">implements</span> <span class=\"title\">WebMvcConfigurer</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    SimpleDateFormat sdf=<span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy/MM/dd/\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/upload\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">upload</span><span class=\"params\">(MultipartFile file, HttpServletRequest req)</span> </span>&#123;</span><br><span class=\"line\">        String format=sdf.format(<span class=\"keyword\">new</span> Date());</span><br><span class=\"line\">        File folder=<span class=\"keyword\">new</span> File(<span class=\"string\">\"/home/root/Documents/WebFiles/test/pic/\"</span>+format);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!folder.isDirectory())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!folder.mkdirs())&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">\"文件夹创建失败\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(folder.getPath());</span><br><span class=\"line\">        String oldName=file.getOriginalFilename();</span><br><span class=\"line\">        String newName= UUID.randomUUID().toString()+oldName.substring(oldName.lastIndexOf(<span class=\"string\">\".\"</span>),oldName.length());</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            file.transferTo(<span class=\"keyword\">new</span> File(folder,newName));</span><br><span class=\"line\">            String filePath=req.getScheme()+<span class=\"string\">\"://\"</span>+req.getServerName()+<span class=\"string\">\":\"</span>+req.getServerPort()+<span class=\"string\">\"/files/test/pic/\"</span>+format+newName;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> filePath;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (IOException e)&#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"上传失败！\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addResourceHandlers</span><span class=\"params\">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">        registry.addResourceHandler(<span class=\"string\">\"/files/**\"</span>).addResourceLocations(<span class=\"string\">\"file:/home/root/Documents/WebFiles/\"</span>);</span><br><span class=\"line\">        WebMvcConfigurer.<span class=\"keyword\">super</span>.addResourceHandlers(registry);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","next":{"title":"Docker 修改容器hosts文件","path":"api/articles/resource-RPC-Docker-docker修改容器hosts.json","image":"/sunfy-rpc/img/header_img/docker/docker.jpg","num_read":499,"num_like":374,"num_collection":794,"num_comments":51},"prev":null,"categories":[{"name":"Java","path":"api/categories/Java.json","pathContent":"api/categories/Java","description":"知识点、常用功能","cover":"https://sunfy9.gitee.io/project/photo/project/java.png"}],"tags":[]}