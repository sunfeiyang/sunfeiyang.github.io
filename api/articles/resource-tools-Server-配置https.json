{"title":"配置https","num_read":563,"num_like":161,"num_collection":90,"num_comments":95,"slug":"resource-tools-Server-配置https","date":"2022-05-17T16:00:00.000Z","img":"/img/header_img/server/https.png","_id":"clhrbp2i300lao5lgd4a5c0vi","site":{"data":{}},"updated":"2022-07-20T06:45:36.000Z","comments":true,"path":"api/articles/resource-tools-Server-配置https.json","webPath":"2022/05/18/resource-tools-Server-配置https/","permalink":"https://sunfy9.gitee.io/2022/05/18/resource-tools-Server-%E9%85%8D%E7%BD%AEhttps/","excerpt":null,"covers":null,"keywords":"sunfy, hexo-theme-snail","content":"<p>首先需要生成一个keystore<br>keytool -genkey -alias kyfxbl -keyalg RSA -keystore f:\\kyfxbl.keystore -validity 3650 </p>\n<p>接下来需要把这个keystore放到应用服务器里，这里用的是jboss4.2.3 </p>\n<p>然后在%JBOSS_HOME%\\server\\default\\deploy\\jboss-web.deployer\\目录下编辑server.xml文件 </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"443\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"HTTP/1.1\"</span> <span class=\"attr\">SSLEnabled</span>=<span class=\"string\">\"true\"</span>  </span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"150\"</span> <span class=\"attr\">scheme</span>=<span class=\"string\">\"https\"</span> <span class=\"attr\">secure</span>=<span class=\"string\">\"true\"</span>  </span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">clientAuth</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">sslProtocol</span>=<span class=\"string\">\"TLS\"</span> <span class=\"attr\">keystoreFile</span>=<span class=\"string\">\"conf/kyfxbl.keystore\"</span>   </span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">keystorePass</span>=<span class=\"string\">\"changeit\"</span> <span class=\"attr\">keystoreType</span>=<span class=\"string\">\"jks\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>最后需要把刚才创建的这个keystore导出为证书，发给需要的客户端 </p>\n<p>-file是指定导出证书的路径和文件名 -keystore是指定从哪里导出，输入密码后，就可以了</p>\n<p>步骤：</p>\n<p>1、在jdk的bin目录下，运行keytool，生成证书：</p>\n<p>keytool -genkey -alias tomcat -keyalg RSA<br>输入keystore密码： test123<br>您的名字与姓氏是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： test<br>您的组织单位名称是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： test<br>您的组织名称是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： test<br>您所在的城市或区域名称是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： china<br>您所在的州或省份名称是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： beijing<br>该单位的两字母国家代码是什么<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： cn<br>CN=test, OU=test, O=test, L=china, ST=beijing, C=cn 正确吗？<br>[否]： y</p>\n<p>输入<tomcat>的主密码<br>（如果和 keystore 密码相同，按回车）：</p>\n<p>说明：输入的密码不要带特殊字符，否则在运行JBoss时可能会出错。</p>\n<p>证书文件将默认生成在当前用户的home目录下，文件名为.keystore。</p>\n<p>2、把证书文件拷贝到JbossHOME\\server\\default\\conf下，文件名可以自己修改</p>\n<p>3、打开JbossHOME\\server\\default\\deploy\\jbossweb-tomcat50.sar\\server.xml，修改如下配置：</p>\n<!-- SSL/TLS Connector configuration using the admin devl guide keystore  \n<Connector port=\"8443\" address=\"${jboss.bind.address}\" \n maxThreads=\"100\" strategy=\"ms\" maxHttpHeaderSize=\"8192\" \n emptySessionPath=\"true\" \n scheme=\"https\" secure=\"true\" clientAuth=\"false\"  \n keystoreFile=\"${jboss.server.home.dir}/conf/chap8.keystore\" \n keystorePass=\"test123\" sslProtocol = \"TLS\" />  \n-->  \n<p>首先本段是放在注释中的，要把注释打开；其次修改需要注意的项我用黑体大字标示了，端口改为你希望的端口号，证书文件名和你拷贝后的证书文件名字一致，密码也要和生成证书时输入的密码一致。</p>\n<p>以上工作完成后，重新启动jboss，在客户端浏览器访问时，就必须采用https协议了。</p>\n","more":"<p>首先需要生成一个keystore<br>keytool -genkey -alias kyfxbl -keyalg RSA -keystore f:\\kyfxbl.keystore -validity 3650 </p>\n<p>接下来需要把这个keystore放到应用服务器里，这里用的是jboss4.2.3 </p>\n<p>然后在%JBOSS_HOME%\\server\\default\\deploy\\jboss-web.deployer\\目录下编辑server.xml文件 </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"443\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"HTTP/1.1\"</span> <span class=\"attr\">SSLEnabled</span>=<span class=\"string\">\"true\"</span>  </span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"150\"</span> <span class=\"attr\">scheme</span>=<span class=\"string\">\"https\"</span> <span class=\"attr\">secure</span>=<span class=\"string\">\"true\"</span>  </span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">clientAuth</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">sslProtocol</span>=<span class=\"string\">\"TLS\"</span> <span class=\"attr\">keystoreFile</span>=<span class=\"string\">\"conf/kyfxbl.keystore\"</span>   </span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">keystorePass</span>=<span class=\"string\">\"changeit\"</span> <span class=\"attr\">keystoreType</span>=<span class=\"string\">\"jks\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>最后需要把刚才创建的这个keystore导出为证书，发给需要的客户端 </p>\n<p>-file是指定导出证书的路径和文件名 -keystore是指定从哪里导出，输入密码后，就可以了</p>\n<p>步骤：</p>\n<p>1、在jdk的bin目录下，运行keytool，生成证书：</p>\n<p>keytool -genkey -alias tomcat -keyalg RSA<br>输入keystore密码： test123<br>您的名字与姓氏是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： test<br>您的组织单位名称是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： test<br>您的组织名称是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： test<br>您所在的城市或区域名称是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： china<br>您所在的州或省份名称是什么？<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： beijing<br>该单位的两字母国家代码是什么<br><a href=\"http://wiki.matrix.org.cn/Wiki.jsp?page=Unknown\" target=\"_blank\" rel=\"noopener\">Unknown</a> ： cn<br>CN=test, OU=test, O=test, L=china, ST=beijing, C=cn 正确吗？<br>[否]： y</p>\n<p>输入<tomcat>的主密码<br>（如果和 keystore 密码相同，按回车）：</p>\n<p>说明：输入的密码不要带特殊字符，否则在运行JBoss时可能会出错。</p>\n<p>证书文件将默认生成在当前用户的home目录下，文件名为.keystore。</p>\n<p>2、把证书文件拷贝到JbossHOME\\server\\default\\conf下，文件名可以自己修改</p>\n<p>3、打开JbossHOME\\server\\default\\deploy\\jbossweb-tomcat50.sar\\server.xml，修改如下配置：</p>\n<!-- SSL/TLS Connector configuration using the admin devl guide keystore  \n<Connector port=\"8443\" address=\"${jboss.bind.address}\" \n maxThreads=\"100\" strategy=\"ms\" maxHttpHeaderSize=\"8192\" \n emptySessionPath=\"true\" \n scheme=\"https\" secure=\"true\" clientAuth=\"false\"  \n keystoreFile=\"${jboss.server.home.dir}/conf/chap8.keystore\" \n keystorePass=\"test123\" sslProtocol = \"TLS\" />  \n-->  \n<p>首先本段是放在注释中的，要把注释打开；其次修改需要注意的项我用黑体大字标示了，端口改为你希望的端口号，证书文件名和你拷贝后的证书文件名字一致，密码也要和生成证书时输入的密码一致。</p>\n<p>以上工作完成后，重新启动jboss，在客户端浏览器访问时，就必须采用https协议了。</p>\n","next":{"title":"SQL四种连接","path":"api/articles/resource-DB-MySQL-SQL四种连接.json","image":"/img/header_img/DB/connections.png","num_read":234,"num_like":262,"num_collection":801,"num_comments":94},"prev":{"title":"MySQL mybatis-generater","path":"api/articles/resource-DB-MySQL-mybatis-generater.json","image":"/img/header_img/DB/mybatis-generater.png","num_read":1540,"num_like":435,"num_collection":646,"num_comments":147},"categories":[{"name":"应用服务器","path":"api/categories/应用服务器.json","pathContent":"api/categories/应用服务器","description":"一种具有一定逻辑关系，在计算机中应用某种存储结构，并且封装了相应操作的数据元素集合。","cover":"https://sunfy9.gitee.io/project/photo/project/server.jpg"}],"tags":[{"name":"https","path":"api/tags/https.json","pathContent":"api/tags/https","description":"[https]暂未设置说明","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}