{"title":"java设计模式之组合实体模式","num_read":484,"num_like":74,"num_collection":313,"num_comments":131,"slug":"resource-designpattern-J2EE-Composite","date":"2020-10-11T16:00:00.000Z","img":"/img/header_img/Design/Composite.png","_id":"clhrbp2b4003zo5lgaes2aic5","project":"designPattern","site":{"data":{}},"updated":"2022-09-20T01:34:43.291Z","author":"Sunfy","comments":true,"path":"api/articles/resource-designpattern-J2EE-Composite.json","webPath":"2020/10/12/resource-designpattern-J2EE-Composite/","permalink":"https://sunfy9.gitee.io/2020/10/12/resource-designpattern-J2EE-Composite/","excerpt":null,"covers":["../../../../img/Composite/compositeentity.jpg"],"keywords":"sunfy, hexo-theme-snail","content":"<p>组合实体模式（Composite Entity Pattern）用在 EJB 持久化机制中。一个组合实体是一个 EJB 实体 bean，代表了对象的图解。当更新一个组合实体时，内部依赖对象 beans 会自动更新，因为它们是由 EJB 实体 bean 管理的。以下是组合实体 bean 的参与者。</p>\n<ul>\n<li><strong>组合实体（Composite Entity）</strong> - 它是主要的实体 bean。它可以是粗粒的，或者可以包含一个粗粒度对象，用于持续生命周期。</li>\n<li><strong>粗粒度对象（Coarse-Grained Object）</strong> - 该对象包含依赖对象。它有自己的生命周期，也能管理依赖对象的生命周期。</li>\n<li><strong>依赖对象（Dependent Object）</strong> - 依赖对象是一个持续生命周期依赖于粗粒度对象的对象。</li>\n<li><strong>策略（Strategies）</strong> - 策略表示如何实现组合实体。</li>\n</ul>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现<sunfy-line></h2><p>我们将创建作为组合实体的 <em>CompositeEntity</em> 对象。<em>CoarseGrainedObject</em> 是一个包含依赖对象的类。</p>\n<p><em>CompositeEntityPatternDemo</em>，我们的演示类使用 <em>Client</em> 类来演示组合实体模式的用法。</p>\n<p><img src=\"../../../../img/Composite/compositeentity.jpg\" alt=\"组合实体模式的 UML 图\"></p>\n<h3 id=\"步骤-1\"><a href=\"#步骤-1\" class=\"headerlink\" title=\"步骤 1\"></a>步骤 1</h3><p>创建依赖对象。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DependentObject1</span> </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">private</span> String data;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.data = data; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getData</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DependentObject2</span> </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">private</span> String data;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.data = data; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getData</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-2\"><a href=\"#步骤-2\" class=\"headerlink\" title=\"步骤 2\"></a>步骤 2</h3><p>创建粗粒度对象。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CoarseGrainedObject</span> </span>&#123;</span><br><span class=\"line\">   DependentObject1 do1 = <span class=\"keyword\">new</span> DependentObject1();</span><br><span class=\"line\">   DependentObject2 do2 = <span class=\"keyword\">new</span> DependentObject2();</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data1, String data2)</span></span>&#123;</span><br><span class=\"line\">      do1.setData(data1);</span><br><span class=\"line\">      do2.setData(data2);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"keyword\">public</span> String[] getData()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String[] &#123;do1.getData(),do2.getData()&#125;;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-3\"><a href=\"#步骤-3\" class=\"headerlink\" title=\"步骤 3\"></a>步骤 3</h3><p>创建组合实体。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CompositeEntity</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> CoarseGrainedObject cgo = <span class=\"keyword\">new</span> CoarseGrainedObject();</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data1, String data2)</span></span>&#123;</span><br><span class=\"line\">      cgo.setData(data1, data2);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"keyword\">public</span> String[] getData()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> cgo.getData();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-4\"><a href=\"#步骤-4\" class=\"headerlink\" title=\"步骤 4\"></a>步骤 4</h3><p>创建使用组合实体的客户端类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Client</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> CompositeEntity compositeEntity = <span class=\"keyword\">new</span> CompositeEntity();</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printData</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; compositeEntity.getData().length; i++) &#123;</span><br><span class=\"line\">         System.out.println(<span class=\"string\">\"Data: \"</span> + compositeEntity.getData()[i]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data1, String data2)</span></span>&#123;</span><br><span class=\"line\">      compositeEntity.setData(data1, data2);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-5\"><a href=\"#步骤-5\" class=\"headerlink\" title=\"步骤 5\"></a>步骤 5</h3><p>使用 <em>Client</em> 来演示组合实体设计模式的用法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CompositeEntityPatternDemo</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">       Client client = <span class=\"keyword\">new</span> Client();</span><br><span class=\"line\">       client.setData(<span class=\"string\">\"Test\"</span>, <span class=\"string\">\"Data\"</span>);</span><br><span class=\"line\">       client.printData();</span><br><span class=\"line\">       client.setData(<span class=\"string\">\"Second Test\"</span>, <span class=\"string\">\"Data1\"</span>);</span><br><span class=\"line\">       client.printData();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-6\"><a href=\"#步骤-6\" class=\"headerlink\" title=\"步骤 6\"></a>步骤 6</h3><p>执行程序，输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Student: </span><br><span class=\"line\">Name: Robert</span><br><span class=\"line\">Roll No: 10</span><br><span class=\"line\">Student: </span><br><span class=\"line\">Name: John</span><br><span class=\"line\">Roll No: 10</span><br></pre></td></tr></table></figure>\n","more":"<p>组合实体模式（Composite Entity Pattern）用在 EJB 持久化机制中。一个组合实体是一个 EJB 实体 bean，代表了对象的图解。当更新一个组合实体时，内部依赖对象 beans 会自动更新，因为它们是由 EJB 实体 bean 管理的。以下是组合实体 bean 的参与者。</p>\n<ul>\n<li><strong>组合实体（Composite Entity）</strong> - 它是主要的实体 bean。它可以是粗粒的，或者可以包含一个粗粒度对象，用于持续生命周期。</li>\n<li><strong>粗粒度对象（Coarse-Grained Object）</strong> - 该对象包含依赖对象。它有自己的生命周期，也能管理依赖对象的生命周期。</li>\n<li><strong>依赖对象（Dependent Object）</strong> - 依赖对象是一个持续生命周期依赖于粗粒度对象的对象。</li>\n<li><strong>策略（Strategies）</strong> - 策略表示如何实现组合实体。</li>\n</ul>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现<sunfy-line></h2><p>我们将创建作为组合实体的 <em>CompositeEntity</em> 对象。<em>CoarseGrainedObject</em> 是一个包含依赖对象的类。</p>\n<p><em>CompositeEntityPatternDemo</em>，我们的演示类使用 <em>Client</em> 类来演示组合实体模式的用法。</p>\n<p><img src=\"../../../../img/Composite/compositeentity.jpg\" alt=\"组合实体模式的 UML 图\"></p>\n<h3 id=\"步骤-1\"><a href=\"#步骤-1\" class=\"headerlink\" title=\"步骤 1\"></a>步骤 1</h3><p>创建依赖对象。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DependentObject1</span> </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">private</span> String data;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.data = data; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getData</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DependentObject2</span> </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">private</span> String data;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data)</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.data = data; </span><br><span class=\"line\">   &#125; </span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getData</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-2\"><a href=\"#步骤-2\" class=\"headerlink\" title=\"步骤 2\"></a>步骤 2</h3><p>创建粗粒度对象。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CoarseGrainedObject</span> </span>&#123;</span><br><span class=\"line\">   DependentObject1 do1 = <span class=\"keyword\">new</span> DependentObject1();</span><br><span class=\"line\">   DependentObject2 do2 = <span class=\"keyword\">new</span> DependentObject2();</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data1, String data2)</span></span>&#123;</span><br><span class=\"line\">      do1.setData(data1);</span><br><span class=\"line\">      do2.setData(data2);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"keyword\">public</span> String[] getData()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String[] &#123;do1.getData(),do2.getData()&#125;;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-3\"><a href=\"#步骤-3\" class=\"headerlink\" title=\"步骤 3\"></a>步骤 3</h3><p>创建组合实体。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CompositeEntity</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> CoarseGrainedObject cgo = <span class=\"keyword\">new</span> CoarseGrainedObject();</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data1, String data2)</span></span>&#123;</span><br><span class=\"line\">      cgo.setData(data1, data2);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"keyword\">public</span> String[] getData()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> cgo.getData();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-4\"><a href=\"#步骤-4\" class=\"headerlink\" title=\"步骤 4\"></a>步骤 4</h3><p>创建使用组合实体的客户端类。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Client</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">private</span> CompositeEntity compositeEntity = <span class=\"keyword\">new</span> CompositeEntity();</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">printData</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; compositeEntity.getData().length; i++) &#123;</span><br><span class=\"line\">         System.out.println(<span class=\"string\">\"Data: \"</span> + compositeEntity.getData()[i]);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setData</span><span class=\"params\">(String data1, String data2)</span></span>&#123;</span><br><span class=\"line\">      compositeEntity.setData(data1, data2);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-5\"><a href=\"#步骤-5\" class=\"headerlink\" title=\"步骤 5\"></a>步骤 5</h3><p>使用 <em>Client</em> 来演示组合实体设计模式的用法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CompositeEntityPatternDemo</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">       Client client = <span class=\"keyword\">new</span> Client();</span><br><span class=\"line\">       client.setData(<span class=\"string\">\"Test\"</span>, <span class=\"string\">\"Data\"</span>);</span><br><span class=\"line\">       client.printData();</span><br><span class=\"line\">       client.setData(<span class=\"string\">\"Second Test\"</span>, <span class=\"string\">\"Data1\"</span>);</span><br><span class=\"line\">       client.printData();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"步骤-6\"><a href=\"#步骤-6\" class=\"headerlink\" title=\"步骤 6\"></a>步骤 6</h3><p>执行程序，输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Student: </span><br><span class=\"line\">Name: Robert</span><br><span class=\"line\">Roll No: 10</span><br><span class=\"line\">Student: </span><br><span class=\"line\">Name: John</span><br><span class=\"line\">Roll No: 10</span><br></pre></td></tr></table></figure>\n","next":{"title":"java设计模式之业务代表模式","path":"api/articles/resource-designpattern-J2EE-Business.json","image":"/img/header_img/Design/Business.png","num_read":874,"num_like":212,"num_collection":94,"num_comments":53},"prev":{"title":"java设计模式之中介者模式","path":"api/articles/resource-designpattern-behavior-Mediator.json","image":"/img/header_img/Design/Mediator.png","num_read":901,"num_like":885,"num_collection":574,"num_comments":65},"categories":[{"name":"设计模式","path":"api/categories/设计模式.json","pathContent":"api/categories/设计模式","description":"简单快捷、解决方案","cover":"https://sunfy9.gitee.io/project/photo/project/design.jpg"}],"tags":[]}