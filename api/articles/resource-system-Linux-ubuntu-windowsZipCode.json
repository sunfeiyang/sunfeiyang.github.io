{"title":"Ubuntu系统解决Windows下Zip解压中文乱码问题","num_read":227,"num_like":165,"num_collection":51,"num_comments":160,"slug":"resource-system-Linux-ubuntu-windowsZipCode","date":"2020-03-10T16:00:00.000Z","img":"/img/header_img/15.gif","_id":"clhrbp2g700jpo5lg6j8rbu87","project":"Linux","site":{"data":{}},"updated":"2022-02-24T05:53:44.000Z","author":"Sunfy","comments":true,"path":"api/articles/resource-system-Linux-ubuntu-windowsZipCode.json","webPath":"2020/03/11/resource-system-Linux-ubuntu-windowsZipCode/","permalink":"https://sunfy9.gitee.io/2020/03/11/resource-system-Linux-ubuntu-windowsZipCode/","excerpt":"解决Ubuntu中解压Windows下的zip文件时乱码问题","covers":null,"keywords":"sunfy, hexo-theme-snail","content":"<p>解决Ubuntu中解压Windows下的zip文件时乱码问题<a id=\"more\"></a><br>三种方法 :</p>\n<h3 id=\"1-通过指定字符集解压\"><a href=\"#1-通过指定字符集解压\" class=\"headerlink\" title=\"1.通过指定字符集解压:\"></a>1.通过指定字符集解压:</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip -O CP936 file.zip    #将file修改成你要解压的压缩包名</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-环境变量中指定参数\"><a href=\"#2-环境变量中指定参数\" class=\"headerlink\" title=\"2.环境变量中指定参数:\"></a>2.环境变量中指定参数:</h3><p>1)打开环境变量文件<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit /etc/environment</span><br></pre></td></tr></table></figure><br>2)在文件中添加两行内容后并保存:<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UNZIP=\"-O CP936\"</span><br><span class=\"line\">ZIPINFO=\"-O CP936\"</span><br></pre></td></tr></table></figure><br>3)使上一步的更改生效(此步骤一定要做):</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/environment</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-使用其他的解压工具unar\"><a href=\"#3-使用其他的解压工具unar\" class=\"headerlink\" title=\"3.使用其他的解压工具unar:\"></a>3.使用其他的解压工具unar:</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install unar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">然后使用命令解压文件</span></span><br><span class=\"line\">unar file.zip</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-分析\"><a href=\"#1-分析\" class=\"headerlink\" title=\"1. 分析\"></a>1. 分析<sunfy-line></h2><h3 id=\"1-1-zip解压时文件乱码\"><a href=\"#1-1-zip解压时文件乱码\" class=\"headerlink\" title=\"1.1 zip解压时文件乱码\"></a>1.1 zip解压时文件乱码</h3><p>本质问题还是zip格式的缺陷，没有字段标志出文件名的编码格式。<br>ZIP在压缩与解压缩的时候默认使用了系统的本地编码，如windows中文环境下的编码多为gbk，gb2312，日文环境下是JIS，linux默认编码为UTF8等；那么在不同系统环境下，只要压缩与解压缩的编码不一致，就会出现乱码。<a href=\"http://godsing.top/2018/01/31/Ubuntu解压缩与文件(名\" target=\"_blank\" rel=\"noopener\">1</a>乱码问题/#fn_1)</p>\n<h3 id=\"1-2-tar-xz-文件\"><a href=\"#1-2-tar-xz-文件\" class=\"headerlink\" title=\"1.2 tar.xz 文件\"></a>1.2 tar.xz 文件</h3><p>tar.xz结尾的压缩文件，解决方法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$xz -d file.tar.xz # 会得到 file.tar 文件</span><br><span class=\"line\">$tar -xvf  file.tar -C your-directory</span><br></pre></td></tr></table></figure>\n<p>这个压缩包也是打包后再压缩，外面是xz压缩方式，里层是tar打包方式。</p>\n<h3 id=\"1-3-tar-gz-即-tgz-解压\"><a href=\"#1-3-tar-gz-即-tgz-解压\" class=\"headerlink\" title=\"1.3 tar.gz(即.tgz)解压\"></a>1.3 tar.gz(即.tgz)解压</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf File.tgz -C Your-Directory</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-文件名-乱码解决方案\"><a href=\"#2-文件名-乱码解决方案\" class=\"headerlink\" title=\"2. 文件名|乱码解决方案\"></a>2. 文件名|乱码解决方案</h2><h3 id=\"2-1-unzip方案\"><a href=\"#2-1-unzip方案\" class=\"headerlink\" title=\"2.1 unzip方案\"></a>2.1 unzip方案</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先试试</span><br><span class=\"line\">unzip -O GB18030 file.zip -d directory</span><br><span class=\"line\"># 不行再试试 GBK也可写成CP936，这是gbk编码在windows里的别称</span><br><span class=\"line\">unzip -O GBK file.zip -d directory </span><br><span class=\"line\"># 再不行继续试试</span><br><span class=\"line\">unzip -O GB2312 file.zip -d directory</span><br></pre></td></tr></table></figure>\n<p>这么试的原因是，编码技术的演进方向为：GB2312 ⇒ GBK(=CP936) ⇒ GB18030，最新的一般能兼容旧的编码技术，遇到不兼容的情况再用旧的编码去尝试。如果无法使用 <code>-O</code> 参数，参考以下链接打补丁。</p>\n<h4 id=\"缺参数，则给unzip打补丁\"><a href=\"#缺参数，则给unzip打补丁\" class=\"headerlink\" title=\"缺参数，则给unzip打补丁\"></a>缺参数，则给unzip打补丁</h4><p>参考 <a href=\"https://github.com/ikohara/dpkg-unzip-iconv\" target=\"_blank\" rel=\"noopener\">https://github.com/ikohara/dpkg-unzip-iconv</a> ；按步骤给unzip打补丁，打完即可使用<code>-O</code>参数了。</p>\n<h3 id=\"2-2-unar方案\"><a href=\"#2-2-unar方案\" class=\"headerlink\" title=\"2.2 unar方案\"></a>2.2 unar方案</h3><p>如果是Debian，已经默认安装了unar，这个工具会自动检测文件的编码，也可以通过-e来指定：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install unar</span><br><span class=\"line\">unar file.zip</span><br></pre></td></tr></table></figure>\n<p>即可解压出中文文件。</p>\n<p><strong>1. 安装</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install unar</span><br></pre></td></tr></table></figure>\n<p><strong>2.列出压缩包内容</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsar test.zip</span><br></pre></td></tr></table></figure>\n<p><strong>3.解压压缩包</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unar test.zip</span><br></pre></td></tr></table></figure>\n<p><strong>4.unar常用选项解释</strong></p>\n<p>-o</p>\n<blockquote>\n<p>解释：指定解压结果保存的位置<br><code>unar test.zip -o /home/dir/</code></p>\n</blockquote>\n<p>-e</p>\n<blockquote>\n<p>解释：指定编码<br><code>unar -e GBK test.zip</code></p>\n</blockquote>\n<p>-p</p>\n<blockquote>\n<p>解释：指定解压密码<br><code>unar -p 123456 test.zip</code></p>\n</blockquote>\n<p><strong>3.解决linux解压压缩包中文文件名乱码问题</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsar test.zip</span><br><span class=\"line\"></span><br><span class=\"line\">###若发现乱码，可指定压缩包文件名使用的编码格式##</span><br><span class=\"line\">lsar -e GB18030 test.zip</span><br><span class=\"line\"></span><br><span class=\"line\">###若能正常列出文件名，可解压###</span><br><span class=\"line\">unar -e GB18030 test.zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-7z和convmv结合方案\"><a href=\"#2-3-7z和convmv结合方案\" class=\"headerlink\" title=\"2.3 7z和convmv结合方案\"></a>2.3 7z和convmv结合方案</h3><p>在ubuntu下的安装命令是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install p7zip-full convmv</span><br></pre></td></tr></table></figure>\n<p>安装完之后，就可以用<code>7z</code>和<code>convmv</code>两个命令完成解压缩任务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LANG&#x3D;C 7z x zip-file.zip</span><br><span class=\"line\">convmv -f GBK -t utf8 --notest -r your_unzipped_file_floder&#x2F;</span><br><span class=\"line\"># 或者先cd到解压好的地方</span><br><span class=\"line\">convmv -f gbk -t utf8 --notest  .&#x2F;* （其实应该一个点 . 就行了，而不用 .&#x2F;*）</span><br></pre></td></tr></table></figure>\n<p>第一条命令用于解压缩，而LANG=C表示以US-ASCII这样的编码输出文件名，如果没有这个语言设置，它同样会输出乱码，只不过是UTF8格式的乱码(<code>convmv</code>会忽略这样的乱码)。</p>\n<p>第二条命令是将GBK编码的文件名转化为UTF8编码，<code>-r</code>表示递归访问目录，即对当前目录中所有文件进行转换。</p>\n<ul>\n<li><p>convmv支持的部分参数如下：</p>\n<p><code>-f</code> 源编码</p>\n<p><code>-t</code> 目标编码</p>\n<p><code>--notest</code> convmv默认只会显示文件名转换后的结果而不会实际进行转换。使用这个参数使convmv对文件名进行实际的编码转换。</p>\n<p><code>--list</code> 列出convmv支持的所有编码</p>\n<p><code>-r</code> 递归转换所有子目录的文件名编码</p>\n</li>\n</ul>\n<h3 id=\"2-4-7z方案\"><a href=\"#2-4-7z方案\" class=\"headerlink\" title=\"2.4 7z方案\"></a>2.4 7z方案</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install p7zip-full</span><br></pre></td></tr></table></figure>\n<p>7zip命令有7z和7za，7za是精简版部分格式不支持，7z是全功能版的，建议使用7z。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">7z &#123;a|d|l|e|u|x&#125; 压缩包文件名 &#123;文件列表或目录，可选&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>a 向压缩包里添加文件或创建压缩包，如向deepvps.7z添加deepvps001.jpg，执行：7z a deepvps.7z deepvps001.jpg；将deepvps目录打包执行：7z a deepvps.7z deepvps；</li>\n<li>d 从压缩里删除文件，如将deepvps.7z里的test.jpg删除，执行：7z d deepvps.7z test.jpg</li>\n<li>l 列出压缩包里的文件，如列出deepvps.7z里的文件，执行：7z l deepvps.7z</li>\n<li>e 解压到当前目录，目录结构会被破坏，如deepvps.rar内有如下目录及文件123/456/789.html，执行：7z e deepvps.rar，目录123和456及文件789.html都会存放在当前目录下。</li>\n<li>x 以完整路径解压。</li>\n</ul>\n<p>由于zip文件中没有声明其编码，所以在Linux上使用unzip解压以默认编码解压，中文文件名会出现乱码。</p>\n<p>使用7z解压即可解决：<code>7z x deepvps.zip</code></p>\n<p>也可以使用：<code>jar xvf deepvps.zip</code></p>\n<h2 id=\"3-文件内容-乱码解决方案\"><a href=\"#3-文件内容-乱码解决方案\" class=\"headerlink\" title=\"3 文件内容|乱码解决方案\"></a>3 文件内容|乱码解决方案</h2><h3 id=\"2-1-iconv工具\"><a href=\"#2-1-iconv工具\" class=\"headerlink\" title=\"2.1 iconv工具\"></a>2.1 iconv工具</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iconv -f gbk -t utf-8 file1 -o file2  # gbk编码转换为utf-8</span><br></pre></td></tr></table></figure>\n<p>命令很简单，可以man出手册或者<code>--help</code>看一下。</p>\n<h3 id=\"2-2-enca工具\"><a href=\"#2-2-enca工具\" class=\"headerlink\" title=\"2.2 enca工具\"></a>2.2 enca工具</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -L指明文件语言，一般可以省略</span><br><span class=\"line\">enca -L zh_CN file # 检查文件的编码</span><br><span class=\"line\">enca -L zh_CN -x UTF-8 file # 将文件编码转换为&quot;UTF-8&quot;编码</span><br><span class=\"line\">enca -L zh_CN -x UTF-8 file1 file2 # 如果不想覆盖原文件可以这样</span><br></pre></td></tr></table></figure>\n<p>说说遇到的坑：非得让我指定语言，不指定还不行，说可以用 <code>-L none</code>，然而根本识别不了。然后又试了 zh_CN，一样不行。用 <code>enca --list language</code> 查看所支持的语言列表，然而写那么多一堆，居然没有English，逗我？！而且，这列表里的项不能直接当作 <code>-L</code>的参数，不知道参数去哪里查！然后就懒得继续查了，毕竟问题已解决。</p>\n<h3 id=\"2-3-查看文件编码\"><a href=\"#2-3-查看文件编码\" class=\"headerlink\" title=\"2.3 查看文件编码\"></a>2.3 查看文件编码</h3><h4 id=\"2-3-1-用vim查看\"><a href=\"#2-3-1-用vim查看\" class=\"headerlink\" title=\"2.3.1 用vim查看\"></a>2.3.1 用vim查看</h4><p>用vim打开文件，输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:set fileencoding</span><br></pre></td></tr></table></figure>\n<p>回车便可看到编码，但是<strong>不一定可信</strong>！</p>\n<p>我的一个本地文件 besttrace4linux.txt ，明明是GB18030编码，但用vim查询显示是latin1编码，搞死我了！</p>\n<p>用<code>iconv</code>试着把该文件从latin1, ascii 转成 utf-8, iso88592, gb2312 各种错！最后试着转到 GB18030，发现居然能转过去，只是转过去后仍然是乱码。此时我灵机一动，该不会原本就是这个编码吧？然后回到我的zsh，发现果然在zsh打印的信息里显示了正确的中文！我屮艸芔茻，花了一个小时终于见到曙光了。这时候，一句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iconv -f gb18030 -t utf-8 besttrace4linux.txt -o readme.txt</span><br></pre></td></tr></table></figure>\n<p>哇！世界从未如此美好，成功！至此，知道<strong>用vim查看编码是会骗人的</strong>！！！</p>\n","more":"<br>三种方法 :</p>\n<h3 id=\"1-通过指定字符集解压\"><a href=\"#1-通过指定字符集解压\" class=\"headerlink\" title=\"1.通过指定字符集解压:\"></a>1.通过指定字符集解压:</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip -O CP936 file.zip    #将file修改成你要解压的压缩包名</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-环境变量中指定参数\"><a href=\"#2-环境变量中指定参数\" class=\"headerlink\" title=\"2.环境变量中指定参数:\"></a>2.环境变量中指定参数:</h3><p>1)打开环境变量文件<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit /etc/environment</span><br></pre></td></tr></table></figure><br>2)在文件中添加两行内容后并保存:<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UNZIP=\"-O CP936\"</span><br><span class=\"line\">ZIPINFO=\"-O CP936\"</span><br></pre></td></tr></table></figure><br>3)使上一步的更改生效(此步骤一定要做):</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/environment</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-使用其他的解压工具unar\"><a href=\"#3-使用其他的解压工具unar\" class=\"headerlink\" title=\"3.使用其他的解压工具unar:\"></a>3.使用其他的解压工具unar:</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install unar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">然后使用命令解压文件</span></span><br><span class=\"line\">unar file.zip</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-分析\"><a href=\"#1-分析\" class=\"headerlink\" title=\"1. 分析\"></a>1. 分析<sunfy-line></h2><h3 id=\"1-1-zip解压时文件乱码\"><a href=\"#1-1-zip解压时文件乱码\" class=\"headerlink\" title=\"1.1 zip解压时文件乱码\"></a>1.1 zip解压时文件乱码</h3><p>本质问题还是zip格式的缺陷，没有字段标志出文件名的编码格式。<br>ZIP在压缩与解压缩的时候默认使用了系统的本地编码，如windows中文环境下的编码多为gbk，gb2312，日文环境下是JIS，linux默认编码为UTF8等；那么在不同系统环境下，只要压缩与解压缩的编码不一致，就会出现乱码。<a href=\"http://godsing.top/2018/01/31/Ubuntu解压缩与文件(名\" target=\"_blank\" rel=\"noopener\">1</a>乱码问题/#fn_1)</p>\n<h3 id=\"1-2-tar-xz-文件\"><a href=\"#1-2-tar-xz-文件\" class=\"headerlink\" title=\"1.2 tar.xz 文件\"></a>1.2 tar.xz 文件</h3><p>tar.xz结尾的压缩文件，解决方法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$xz -d file.tar.xz # 会得到 file.tar 文件</span><br><span class=\"line\">$tar -xvf  file.tar -C your-directory</span><br></pre></td></tr></table></figure>\n<p>这个压缩包也是打包后再压缩，外面是xz压缩方式，里层是tar打包方式。</p>\n<h3 id=\"1-3-tar-gz-即-tgz-解压\"><a href=\"#1-3-tar-gz-即-tgz-解压\" class=\"headerlink\" title=\"1.3 tar.gz(即.tgz)解压\"></a>1.3 tar.gz(即.tgz)解压</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf File.tgz -C Your-Directory</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-文件名-乱码解决方案\"><a href=\"#2-文件名-乱码解决方案\" class=\"headerlink\" title=\"2. 文件名|乱码解决方案\"></a>2. 文件名|乱码解决方案</h2><h3 id=\"2-1-unzip方案\"><a href=\"#2-1-unzip方案\" class=\"headerlink\" title=\"2.1 unzip方案\"></a>2.1 unzip方案</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 先试试</span><br><span class=\"line\">unzip -O GB18030 file.zip -d directory</span><br><span class=\"line\"># 不行再试试 GBK也可写成CP936，这是gbk编码在windows里的别称</span><br><span class=\"line\">unzip -O GBK file.zip -d directory </span><br><span class=\"line\"># 再不行继续试试</span><br><span class=\"line\">unzip -O GB2312 file.zip -d directory</span><br></pre></td></tr></table></figure>\n<p>这么试的原因是，编码技术的演进方向为：GB2312 ⇒ GBK(=CP936) ⇒ GB18030，最新的一般能兼容旧的编码技术，遇到不兼容的情况再用旧的编码去尝试。如果无法使用 <code>-O</code> 参数，参考以下链接打补丁。</p>\n<h4 id=\"缺参数，则给unzip打补丁\"><a href=\"#缺参数，则给unzip打补丁\" class=\"headerlink\" title=\"缺参数，则给unzip打补丁\"></a>缺参数，则给unzip打补丁</h4><p>参考 <a href=\"https://github.com/ikohara/dpkg-unzip-iconv\" target=\"_blank\" rel=\"noopener\">https://github.com/ikohara/dpkg-unzip-iconv</a> ；按步骤给unzip打补丁，打完即可使用<code>-O</code>参数了。</p>\n<h3 id=\"2-2-unar方案\"><a href=\"#2-2-unar方案\" class=\"headerlink\" title=\"2.2 unar方案\"></a>2.2 unar方案</h3><p>如果是Debian，已经默认安装了unar，这个工具会自动检测文件的编码，也可以通过-e来指定：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install unar</span><br><span class=\"line\">unar file.zip</span><br></pre></td></tr></table></figure>\n<p>即可解压出中文文件。</p>\n<p><strong>1. 安装</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install unar</span><br></pre></td></tr></table></figure>\n<p><strong>2.列出压缩包内容</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsar test.zip</span><br></pre></td></tr></table></figure>\n<p><strong>3.解压压缩包</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unar test.zip</span><br></pre></td></tr></table></figure>\n<p><strong>4.unar常用选项解释</strong></p>\n<p>-o</p>\n<blockquote>\n<p>解释：指定解压结果保存的位置<br><code>unar test.zip -o /home/dir/</code></p>\n</blockquote>\n<p>-e</p>\n<blockquote>\n<p>解释：指定编码<br><code>unar -e GBK test.zip</code></p>\n</blockquote>\n<p>-p</p>\n<blockquote>\n<p>解释：指定解压密码<br><code>unar -p 123456 test.zip</code></p>\n</blockquote>\n<p><strong>3.解决linux解压压缩包中文文件名乱码问题</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsar test.zip</span><br><span class=\"line\"></span><br><span class=\"line\">###若发现乱码，可指定压缩包文件名使用的编码格式##</span><br><span class=\"line\">lsar -e GB18030 test.zip</span><br><span class=\"line\"></span><br><span class=\"line\">###若能正常列出文件名，可解压###</span><br><span class=\"line\">unar -e GB18030 test.zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-7z和convmv结合方案\"><a href=\"#2-3-7z和convmv结合方案\" class=\"headerlink\" title=\"2.3 7z和convmv结合方案\"></a>2.3 7z和convmv结合方案</h3><p>在ubuntu下的安装命令是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install p7zip-full convmv</span><br></pre></td></tr></table></figure>\n<p>安装完之后，就可以用<code>7z</code>和<code>convmv</code>两个命令完成解压缩任务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LANG&#x3D;C 7z x zip-file.zip</span><br><span class=\"line\">convmv -f GBK -t utf8 --notest -r your_unzipped_file_floder&#x2F;</span><br><span class=\"line\"># 或者先cd到解压好的地方</span><br><span class=\"line\">convmv -f gbk -t utf8 --notest  .&#x2F;* （其实应该一个点 . 就行了，而不用 .&#x2F;*）</span><br></pre></td></tr></table></figure>\n<p>第一条命令用于解压缩，而LANG=C表示以US-ASCII这样的编码输出文件名，如果没有这个语言设置，它同样会输出乱码，只不过是UTF8格式的乱码(<code>convmv</code>会忽略这样的乱码)。</p>\n<p>第二条命令是将GBK编码的文件名转化为UTF8编码，<code>-r</code>表示递归访问目录，即对当前目录中所有文件进行转换。</p>\n<ul>\n<li><p>convmv支持的部分参数如下：</p>\n<p><code>-f</code> 源编码</p>\n<p><code>-t</code> 目标编码</p>\n<p><code>--notest</code> convmv默认只会显示文件名转换后的结果而不会实际进行转换。使用这个参数使convmv对文件名进行实际的编码转换。</p>\n<p><code>--list</code> 列出convmv支持的所有编码</p>\n<p><code>-r</code> 递归转换所有子目录的文件名编码</p>\n</li>\n</ul>\n<h3 id=\"2-4-7z方案\"><a href=\"#2-4-7z方案\" class=\"headerlink\" title=\"2.4 7z方案\"></a>2.4 7z方案</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install p7zip-full</span><br></pre></td></tr></table></figure>\n<p>7zip命令有7z和7za，7za是精简版部分格式不支持，7z是全功能版的，建议使用7z。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">7z &#123;a|d|l|e|u|x&#125; 压缩包文件名 &#123;文件列表或目录，可选&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>a 向压缩包里添加文件或创建压缩包，如向deepvps.7z添加deepvps001.jpg，执行：7z a deepvps.7z deepvps001.jpg；将deepvps目录打包执行：7z a deepvps.7z deepvps；</li>\n<li>d 从压缩里删除文件，如将deepvps.7z里的test.jpg删除，执行：7z d deepvps.7z test.jpg</li>\n<li>l 列出压缩包里的文件，如列出deepvps.7z里的文件，执行：7z l deepvps.7z</li>\n<li>e 解压到当前目录，目录结构会被破坏，如deepvps.rar内有如下目录及文件123/456/789.html，执行：7z e deepvps.rar，目录123和456及文件789.html都会存放在当前目录下。</li>\n<li>x 以完整路径解压。</li>\n</ul>\n<p>由于zip文件中没有声明其编码，所以在Linux上使用unzip解压以默认编码解压，中文文件名会出现乱码。</p>\n<p>使用7z解压即可解决：<code>7z x deepvps.zip</code></p>\n<p>也可以使用：<code>jar xvf deepvps.zip</code></p>\n<h2 id=\"3-文件内容-乱码解决方案\"><a href=\"#3-文件内容-乱码解决方案\" class=\"headerlink\" title=\"3 文件内容|乱码解决方案\"></a>3 文件内容|乱码解决方案</h2><h3 id=\"2-1-iconv工具\"><a href=\"#2-1-iconv工具\" class=\"headerlink\" title=\"2.1 iconv工具\"></a>2.1 iconv工具</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iconv -f gbk -t utf-8 file1 -o file2  # gbk编码转换为utf-8</span><br></pre></td></tr></table></figure>\n<p>命令很简单，可以man出手册或者<code>--help</code>看一下。</p>\n<h3 id=\"2-2-enca工具\"><a href=\"#2-2-enca工具\" class=\"headerlink\" title=\"2.2 enca工具\"></a>2.2 enca工具</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -L指明文件语言，一般可以省略</span><br><span class=\"line\">enca -L zh_CN file # 检查文件的编码</span><br><span class=\"line\">enca -L zh_CN -x UTF-8 file # 将文件编码转换为&quot;UTF-8&quot;编码</span><br><span class=\"line\">enca -L zh_CN -x UTF-8 file1 file2 # 如果不想覆盖原文件可以这样</span><br></pre></td></tr></table></figure>\n<p>说说遇到的坑：非得让我指定语言，不指定还不行，说可以用 <code>-L none</code>，然而根本识别不了。然后又试了 zh_CN，一样不行。用 <code>enca --list language</code> 查看所支持的语言列表，然而写那么多一堆，居然没有English，逗我？！而且，这列表里的项不能直接当作 <code>-L</code>的参数，不知道参数去哪里查！然后就懒得继续查了，毕竟问题已解决。</p>\n<h3 id=\"2-3-查看文件编码\"><a href=\"#2-3-查看文件编码\" class=\"headerlink\" title=\"2.3 查看文件编码\"></a>2.3 查看文件编码</h3><h4 id=\"2-3-1-用vim查看\"><a href=\"#2-3-1-用vim查看\" class=\"headerlink\" title=\"2.3.1 用vim查看\"></a>2.3.1 用vim查看</h4><p>用vim打开文件，输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:set fileencoding</span><br></pre></td></tr></table></figure>\n<p>回车便可看到编码，但是<strong>不一定可信</strong>！</p>\n<p>我的一个本地文件 besttrace4linux.txt ，明明是GB18030编码，但用vim查询显示是latin1编码，搞死我了！</p>\n<p>用<code>iconv</code>试着把该文件从latin1, ascii 转成 utf-8, iso88592, gb2312 各种错！最后试着转到 GB18030，发现居然能转过去，只是转过去后仍然是乱码。此时我灵机一动，该不会原本就是这个编码吧？然后回到我的zsh，发现果然在zsh打印的信息里显示了正确的中文！我屮艸芔茻，花了一个小时终于见到曙光了。这时候，一句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iconv -f gb18030 -t utf-8 besttrace4linux.txt -o readme.txt</span><br></pre></td></tr></table></figure>\n<p>哇！世界从未如此美好，成功！至此，知道<strong>用vim查看编码是会骗人的</strong>！！！</p>","next":{"title":"前端基础插件","path":"api/articles/resource-desk-npm-前端基础插件.json","image":"/img/header_img/desk/npm.jpg","num_read":903,"num_like":779,"num_collection":298,"num_comments":120},"prev":{"title":"CentOS根目录下各目录介绍","path":"api/articles/resource-system-Linux-Centos-directory.json","image":"/img/header_img/15.gif","num_read":1403,"num_like":895,"num_collection":108,"num_comments":186},"categories":[{"name":"操作系统","path":"api/categories/操作系统.json","pathContent":"api/categories/操作系统","description":"包含CentOS、Ubuntu、Windows等相关","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}],"tags":[{"name":"Ubuntu","path":"api/tags/Ubuntu.json","pathContent":"api/tags/Ubuntu","description":"[Ubuntu]暂未设置说明","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}