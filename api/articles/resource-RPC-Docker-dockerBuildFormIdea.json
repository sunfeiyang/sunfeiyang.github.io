{"title":"idea利用docker插件打包上传","num_read":997,"num_like":993,"num_collection":657,"num_comments":279,"slug":"resource-RPC-Docker-dockerBuildFormIdea","date":"2021-05-10T16:00:00.000Z","img":"/img/header_img/17.gif","_id":"clhrbp2fo00f4o5lg4dh49vsy","project":"RPC","site":{"data":{}},"updated":"2022-09-20T02:15:50.526Z","author":"Sunfy","comments":true,"path":"api/articles/resource-RPC-Docker-dockerBuildFormIdea.json","webPath":"2021/05/11/resource-RPC-Docker-dockerBuildFormIdea/","permalink":"https://sunfy9.gitee.io/2021/05/11/resource-RPC-Docker-dockerBuildFormIdea/","excerpt":"idea 利用 docker插件打包上传镜像","covers":["../../../../img/dockerBuildFormIdea/image-20210122095457335.png","../../../../img/dockerBuildFormIdea/image-20210122095822612.png","../../../../img/dockerBuildFormIdea/image-20210122095914492.png","../../../../img/dockerBuildFormIdea/image-20210122100013090.png","../../../../img/dockerBuildFormIdea/image-20210122100131336.png","../../../../img/dockerBuildFormIdea/image-20210122100155280.png","../../../../img/dockerBuildFormIdea/image-20210122100252540.png","../../../../img/dockerBuildFormIdea/image-20210122100515829.png","../../../../img/dockerBuildFormIdea/image-20210122100642183.png"],"keywords":"sunfy, hexo-theme-snail","content":"<p>idea 利用 docker插件打包上传镜像 <a id=\"more\"></a></p>\n<h2 id=\"1：idea环境准备\"><a href=\"#1：idea环境准备\" class=\"headerlink\" title=\"1：idea环境准备\"></a>1：idea环境准备</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">点击 file&gt;settings&gt;plugins&gt;搜索docker下载  如下图</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122095457335.png\" alt=\"image-20210122095457335\"></p>\n<h2 id=\"2：docker服务环境准备\"><a href=\"#2：docker服务环境准备\" class=\"headerlink\" title=\"2：docker服务环境准备\"></a>2：docker服务环境准备</h2><ul>\n<li><p>正常安装docker环境</p>\n</li>\n<li><p>第一步：配置Docker，开启远程访问（注：仅供学习参考，实际生产环境万万不可，会产生很大的安全风险），默认端口是2375，也可以修改为其他端口<sunfy-line></p>\n<p>1、修改/lib/systemd/system/docker.service文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure>\n<p>在<code>ExecStart</code>后面追加 <code>-H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock</code></p>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122095822612.png\" alt=\"image-20210122095822612\"></p>\n<p>修改完保存退出命令 :wq</p>\n<p>2、重新加载配置文件，重启docker，使得刚才的配置生效</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重新加载配置文件</span></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重启docker服务</span></span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n<p>3、使用curl命令检查是否开启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">curl下载docker的服务信息</span></span><br><span class=\"line\">curl http://127.0.0.1:2375/info</span><br></pre></td></tr></table></figure>\n<p>如果有返回说明，就证明开启成功了，可以看到我的Docker版本，镜像加速器地址等其他信息，但是这时候远程可能依然访问不了</p>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122095914492.png\" alt=\"image-20210122095914492\"></p>\n<p>开放端口后，可以远程访问，直接在服务器中也可以验证</p>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100013090.png\" alt=\"image-20210122100013090\"></p>\n</li>\n</ul>\n<h2 id=\"3：idea远程连接docker\"><a href=\"#3：idea远程连接docker\" class=\"headerlink\" title=\"3：idea远程连接docker\"></a>3：idea远程连接docker</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">点击 file&gt;settings&gt;docker  如下图</span><br></pre></td></tr></table></figure>\n<p>注意我所标记的地方，地址填写docker访问地址，端口2375为固定的，记得服务器需要开放端口，不然连接不上。<br>连接成功下面会显示：Connection successful； 表示连接成功<br><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100131336.png\" alt=\"image-20210122100131336\"></p>\n<p>连接成功后idea下方会有一个docker窗口，可以镜像和容器进行操作，如下图<br><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100155280.png\" alt=\"image-20210122100155280\"><br><strong>以上表示idea已经远程成功连接docker</strong></p>\n<h2 id=\"4：利用idea远程发布springboot项目\"><a href=\"#4：利用idea远程发布springboot项目\" class=\"headerlink\" title=\"4：利用idea远程发布springboot项目\"></a>4：利用idea远程发布springboot项目</h2><p><strong>1：新建Dockerfile文件，注意文件位置，和文件名称一定不能搞错，文件在项目的根目录下，与src同级</strong></p>\n<p>配置文件可以在打包时指定位置</p>\n<p><strong>Dokcerfile文件内容</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#打包需要用到的jdk</span><br><span class=\"line\">FROM openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\">#前面是idea打包的jar包路径，路径不能错，  后面是 添加到docker的jar包名称，可自定义</span><br><span class=\"line\">ADD /target/eureka-server1-<span class=\"number\">0.0</span><span class=\"number\">.1</span>-SNAPSHOT.jar eureka-server1-<span class=\"number\">0.0</span><span class=\"number\">.1</span>-SNAPSHOT.jar</span><br><span class=\"line\">#容器的端口映射</span><br><span class=\"line\">EXPOSE <span class=\"number\">10001</span> <span class=\"number\">10001</span></span><br><span class=\"line\">#运行jar命令</span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">\"java\"</span>,<span class=\"string\">\"-jar\"</span>,<span class=\"string\">\"/eureka-server1-0.0.1-SNAPSHOT.jar\"</span>]</span><br></pre></td></tr></table></figure>\n<p><strong>Dockerfile文件位置</strong><br><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100252540.png\" alt=\"image-20210122100252540\"></p>\n<p><strong>2：项目添加docker运行并上传</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.1：首先点击下图1下拉选择 Edit Configurations</span><br><span class=\"line\"></span><br><span class=\"line\">2.2：点击如下图2位置的加号。</span><br></pre></td></tr></table></figure>\n<p><strong>3：dockeer参数设置</strong><br><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100515829.png\" alt=\"image-20210122100515829\"></p>\n<p><strong>4：直接运行dockerfile配置自动上传</strong></p>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100642183.png\" alt=\"image-20210122100642183\"></p>\n","more":"</p>\n<h2 id=\"1：idea环境准备\"><a href=\"#1：idea环境准备\" class=\"headerlink\" title=\"1：idea环境准备\"></a>1：idea环境准备</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">点击 file&gt;settings&gt;plugins&gt;搜索docker下载  如下图</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122095457335.png\" alt=\"image-20210122095457335\"></p>\n<h2 id=\"2：docker服务环境准备\"><a href=\"#2：docker服务环境准备\" class=\"headerlink\" title=\"2：docker服务环境准备\"></a>2：docker服务环境准备</h2><ul>\n<li><p>正常安装docker环境</p>\n</li>\n<li><p>第一步：配置Docker，开启远程访问（注：仅供学习参考，实际生产环境万万不可，会产生很大的安全风险），默认端口是2375，也可以修改为其他端口<sunfy-line></p>\n<p>1、修改/lib/systemd/system/docker.service文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /lib/systemd/system/docker.service</span><br></pre></td></tr></table></figure>\n<p>在<code>ExecStart</code>后面追加 <code>-H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock</code></p>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122095822612.png\" alt=\"image-20210122095822612\"></p>\n<p>修改完保存退出命令 :wq</p>\n<p>2、重新加载配置文件，重启docker，使得刚才的配置生效</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重新加载配置文件</span></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重启docker服务</span></span><br><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n<p>3、使用curl命令检查是否开启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">curl下载docker的服务信息</span></span><br><span class=\"line\">curl http://127.0.0.1:2375/info</span><br></pre></td></tr></table></figure>\n<p>如果有返回说明，就证明开启成功了，可以看到我的Docker版本，镜像加速器地址等其他信息，但是这时候远程可能依然访问不了</p>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122095914492.png\" alt=\"image-20210122095914492\"></p>\n<p>开放端口后，可以远程访问，直接在服务器中也可以验证</p>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100013090.png\" alt=\"image-20210122100013090\"></p>\n</li>\n</ul>\n<h2 id=\"3：idea远程连接docker\"><a href=\"#3：idea远程连接docker\" class=\"headerlink\" title=\"3：idea远程连接docker\"></a>3：idea远程连接docker</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">点击 file&gt;settings&gt;docker  如下图</span><br></pre></td></tr></table></figure>\n<p>注意我所标记的地方，地址填写docker访问地址，端口2375为固定的，记得服务器需要开放端口，不然连接不上。<br>连接成功下面会显示：Connection successful； 表示连接成功<br><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100131336.png\" alt=\"image-20210122100131336\"></p>\n<p>连接成功后idea下方会有一个docker窗口，可以镜像和容器进行操作，如下图<br><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100155280.png\" alt=\"image-20210122100155280\"><br><strong>以上表示idea已经远程成功连接docker</strong></p>\n<h2 id=\"4：利用idea远程发布springboot项目\"><a href=\"#4：利用idea远程发布springboot项目\" class=\"headerlink\" title=\"4：利用idea远程发布springboot项目\"></a>4：利用idea远程发布springboot项目</h2><p><strong>1：新建Dockerfile文件，注意文件位置，和文件名称一定不能搞错，文件在项目的根目录下，与src同级</strong></p>\n<p>配置文件可以在打包时指定位置</p>\n<p><strong>Dokcerfile文件内容</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#打包需要用到的jdk</span><br><span class=\"line\">FROM openjdk:<span class=\"number\">8</span>-jdk-alpine</span><br><span class=\"line\">#前面是idea打包的jar包路径，路径不能错，  后面是 添加到docker的jar包名称，可自定义</span><br><span class=\"line\">ADD /target/eureka-server1-<span class=\"number\">0.0</span><span class=\"number\">.1</span>-SNAPSHOT.jar eureka-server1-<span class=\"number\">0.0</span><span class=\"number\">.1</span>-SNAPSHOT.jar</span><br><span class=\"line\">#容器的端口映射</span><br><span class=\"line\">EXPOSE <span class=\"number\">10001</span> <span class=\"number\">10001</span></span><br><span class=\"line\">#运行jar命令</span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">\"java\"</span>,<span class=\"string\">\"-jar\"</span>,<span class=\"string\">\"/eureka-server1-0.0.1-SNAPSHOT.jar\"</span>]</span><br></pre></td></tr></table></figure>\n<p><strong>Dockerfile文件位置</strong><br><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100252540.png\" alt=\"image-20210122100252540\"></p>\n<p><strong>2：项目添加docker运行并上传</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.1：首先点击下图1下拉选择 Edit Configurations</span><br><span class=\"line\"></span><br><span class=\"line\">2.2：点击如下图2位置的加号。</span><br></pre></td></tr></table></figure>\n<p><strong>3：dockeer参数设置</strong><br><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100515829.png\" alt=\"image-20210122100515829\"></p>\n<p><strong>4：直接运行dockerfile配置自动上传</strong></p>\n<p><img src=\"../../../../img/dockerBuildFormIdea/image-20210122100642183.png\" alt=\"image-20210122100642183\"></p>","next":{"title":"Windows服务器定时任务执行","path":"api/articles/resource-system-Windows-windows-timer.json","image":"/img/header_img/windows/timer1.gif","num_read":574,"num_like":422,"num_collection":880,"num_comments":124},"prev":{"title":"正排索引与倒排索引","path":"api/articles/resource-java-algorithm-indexSort.json","image":"/img/header_img/tools/sort2.gif","num_read":1632,"num_like":752,"num_collection":771,"num_comments":78},"categories":[{"name":"RPC远程调用","path":"api/categories/RPC远程调用.json","pathContent":"api/categories/RPC远程调用","description":"RPC（Remote Procedure Call）远程过程调用，简单的理解是一个节点请求另一个节点提供的服务","cover":"https://sunfy9.gitee.io/project/photo/project/rpc.jpg"}],"tags":[{"name":"Docker","path":"api/tags/Docker.json","pathContent":"api/tags/Docker","description":"一个开源的应用容器引擎。","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"},{"name":"IDEA","path":"api/tags/IDEA.json","pathContent":"api/tags/IDEA","description":"全称 IntelliJ IDEA，是java编程语言开发的集成环境","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}