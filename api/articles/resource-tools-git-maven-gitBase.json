{"title":"Git基本操作","num_read":111,"num_like":337,"num_collection":699,"num_comments":105,"slug":"resource-tools-git-maven-gitBase","date":"2019-06-15T13:54:02.000Z","img":"/img/header_img/tools/git.jpg","_id":"clhrbp2ia00mko5lg8tmb025d","site":{"data":{}},"updated":"2022-09-20T02:34:44.969Z","comments":true,"path":"api/articles/resource-tools-git-maven-gitBase.json","webPath":"2019/06/15/resource-tools-git-maven-gitBase/","permalink":"https://sunfy9.gitee.io/2019/06/15/resource-tools-git-maven-gitBase/","excerpt":"git基本操作,本博客只是最基本操作说明和相应图解  [Figure] ","covers":["/img/git/50.png","../../../../img/gitBase/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NmeTEwMjYxMQ==,size_16,color_FFFFFF,t_70.png","../../../../img/image-20210909105447360.png"],"keywords":"sunfy, hexo-theme-snail","content":"<p>git基本操作,本博客只是最基本操作说明和相应图解 </p>\n<p><img src=\"/img/git/50.png\" alt=\"image-20200908222733250\"><a id=\"more\"></a></p>\n<p>Git下载</p>\n<p>git下载安装地址：<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/downloads</a></p>\n<p>安装过程基本属于一路next，这里不做介绍，主要介绍git的操作命令</p>\n<p>Git工作流程</p>\n<p> <img src=\"../../../../img/gitBase/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NmeTEwMjYxMQ==,size_16,color_FFFFFF,t_70.png\" alt=\"img\"></p>\n<p>git 基本命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 将当前目录初始化为一个git仓库</span></span><br><span class=\"line\"> git init</span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 在当前目录下创建<span class=\"built_in\">test</span>目录，并初始化为一个git仓库</span></span><br><span class=\"line\"> git init test</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 查看本地仓库中文件状态</span></span><br><span class=\"line\"> git status</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 将本地文件添加至暂存区</span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 当前目录下的所有文件全部添加</span></span><br><span class=\"line\"> git add -A</span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 只将当前选中的文件添加至暂存区</span></span><br><span class=\"line\"> git add [filename]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 将暂存区文件提交至本地仓库</span></span><br><span class=\"line\"> git commit -m \"提交备注\"</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 将本地仓库关联至远程仓库</span></span><br><span class=\"line\"> git remote add orgin https://github.com/xxxxx/xxx</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 提交本地仓库至远程仓库</span></span><br><span class=\"line\"> git push origin</span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 此时由于本地仓库没有找到上游仓库位置，git会提示设置上游仓库命令</span></span><br><span class=\"line\"> git push --set-upstream origin master</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"><span class=\"comment\">##################################################</span></span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 至此，git仓库就已经提交完成，在远程仓库中可以看到和本地仓库同步的内容</span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 当再次修改本地仓库内容后，可以直接使用 </span></span><br><span class=\"line\"> git add -A;git commit -m \"提交备注\";git push;</span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 用以上命令进行代码提交同步</span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"><span class=\"comment\">##################################################</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 上图中右侧位置是已经存在远程仓库，在本地并没有创建仓库而是直接使用以下命令获取远程仓库内容</span></span><br><span class=\"line\"> git clone [远程仓库地址]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 然后就可以通过上述的git基本命令就行git操作</span></span><br></pre></td></tr></table></figure>\n<p>git切换仓库地址</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote remove origin</span><br><span class=\"line\">git remote add origin git@192.168.1.240:root/poba-angular-pc.git</span><br><span class=\"line\">git push -u origin develop</span><br></pre></td></tr></table></figure>\n<p>实现功能：</p>\n<p>将git仓库的某个tag导出为一个分支，（tag标签导出后是无法直接编辑文件的）</p>\n<p>在阅读github框架源码时有使用过（Spring）</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询当前仓库中所有tag</span></span><br><span class=\"line\">git tag</span><br><span class=\"line\"><span class=\"comment\"># 检出某个tag</span></span><br><span class=\"line\">git checkout tagxxx</span><br><span class=\"line\"><span class=\"comment\"># 利用当前检出创建分支</span></span><br><span class=\"line\">git checkout -b branchName  tagName</span><br><span class=\"line\"><span class=\"comment\"># 检出完成</span></span><br></pre></td></tr></table></figure>\n<p>git查看分支时添加注释说明</p>\n<p>官方git并没有此项功能，需要借助插件来实现git-br</p>\n<p>步骤：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 给分支添加说明</span></span><br><span class=\"line\">git config branch.xxxbranchName.description <span class=\"string\">\"添加分支说明\"</span></span><br><span class=\"line\"><span class=\"comment\"># 此时如果我们通过内置命令也是可以看到添加的分支说明的，只不过会比较繁琐</span></span><br><span class=\"line\">git config branch.xxxbranchName.descripiton</span><br><span class=\"line\"><span class=\"comment\"># git命令长且每次只能查看某个分支的说明</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装简便的查看工具 npm安装</span></span><br><span class=\"line\">npm i -g git-br</span><br><span class=\"line\"><span class=\"comment\"># 使用命令查看</span></span><br><span class=\"line\">git br</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/image-20210909105447360.png\" alt=\"image-20210909105447360\"></p>\n","more":"</p>\n<p>Git下载</p>\n<p>git下载安装地址：<a href=\"https://git-scm.com/downloads\" target=\"_blank\" rel=\"noopener\">https://git-scm.com/downloads</a></p>\n<p>安装过程基本属于一路next，这里不做介绍，主要介绍git的操作命令</p>\n<p>Git工作流程</p>\n<p> <img src=\"../../../../img/gitBase/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NmeTEwMjYxMQ==,size_16,color_FFFFFF,t_70.png\" alt=\"img\"></p>\n<p>git 基本命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 将当前目录初始化为一个git仓库</span></span><br><span class=\"line\"> git init</span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 在当前目录下创建<span class=\"built_in\">test</span>目录，并初始化为一个git仓库</span></span><br><span class=\"line\"> git init test</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 查看本地仓库中文件状态</span></span><br><span class=\"line\"> git status</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 将本地文件添加至暂存区</span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 当前目录下的所有文件全部添加</span></span><br><span class=\"line\"> git add -A</span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 只将当前选中的文件添加至暂存区</span></span><br><span class=\"line\"> git add [filename]</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 将暂存区文件提交至本地仓库</span></span><br><span class=\"line\"> git commit -m \"提交备注\"</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 将本地仓库关联至远程仓库</span></span><br><span class=\"line\"> git remote add orgin https://github.com/xxxxx/xxx</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 提交本地仓库至远程仓库</span></span><br><span class=\"line\"> git push origin</span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 此时由于本地仓库没有找到上游仓库位置，git会提示设置上游仓库命令</span></span><br><span class=\"line\"> git push --set-upstream origin master</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"><span class=\"comment\">##################################################</span></span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 至此，git仓库就已经提交完成，在远程仓库中可以看到和本地仓库同步的内容</span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 当再次修改本地仓库内容后，可以直接使用 </span></span><br><span class=\"line\"> git add -A;git commit -m \"提交备注\";git push;</span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 用以上命令进行代码提交同步</span></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"><span class=\"comment\">##################################################</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 上图中右侧位置是已经存在远程仓库，在本地并没有创建仓库而是直接使用以下命令获取远程仓库内容</span></span><br><span class=\"line\"> git clone [远程仓库地址]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\"> 然后就可以通过上述的git基本命令就行git操作</span></span><br></pre></td></tr></table></figure>\n<p>git切换仓库地址</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote remove origin</span><br><span class=\"line\">git remote add origin git@192.168.1.240:root/poba-angular-pc.git</span><br><span class=\"line\">git push -u origin develop</span><br></pre></td></tr></table></figure>\n<p>实现功能：</p>\n<p>将git仓库的某个tag导出为一个分支，（tag标签导出后是无法直接编辑文件的）</p>\n<p>在阅读github框架源码时有使用过（Spring）</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询当前仓库中所有tag</span></span><br><span class=\"line\">git tag</span><br><span class=\"line\"><span class=\"comment\"># 检出某个tag</span></span><br><span class=\"line\">git checkout tagxxx</span><br><span class=\"line\"><span class=\"comment\"># 利用当前检出创建分支</span></span><br><span class=\"line\">git checkout -b branchName  tagName</span><br><span class=\"line\"><span class=\"comment\"># 检出完成</span></span><br></pre></td></tr></table></figure>\n<p>git查看分支时添加注释说明</p>\n<p>官方git并没有此项功能，需要借助插件来实现git-br</p>\n<p>步骤：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 给分支添加说明</span></span><br><span class=\"line\">git config branch.xxxbranchName.description <span class=\"string\">\"添加分支说明\"</span></span><br><span class=\"line\"><span class=\"comment\"># 此时如果我们通过内置命令也是可以看到添加的分支说明的，只不过会比较繁琐</span></span><br><span class=\"line\">git config branch.xxxbranchName.descripiton</span><br><span class=\"line\"><span class=\"comment\"># git命令长且每次只能查看某个分支的说明</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装简便的查看工具 npm安装</span></span><br><span class=\"line\">npm i -g git-br</span><br><span class=\"line\"><span class=\"comment\"># 使用命令查看</span></span><br><span class=\"line\">git br</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/image-20210909105447360.png\" alt=\"image-20210909105447360\"></p>","next":{"title":"Centos设置静态ip","path":"api/articles/resource-system-Linux-Centos-staticIP.json","image":"/img/header_img/15.gif","num_read":1803,"num_like":566,"num_collection":174,"num_comments":180},"prev":{"title":"Java设计模式之单例模式","path":"api/articles/resource-designpattern-build-singleton.json","image":"/img/header_img/Design/Singleton.PNG","num_read":1471,"num_like":1019,"num_collection":310,"num_comments":47},"categories":[{"name":"工具集","path":"api/categories/工具集.json","pathContent":"api/categories/工具集","description":"各种工具类相关","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}],"tags":[{"name":"git","path":"api/tags/git.json","pathContent":"api/tags/git","description":"[git]暂未设置说明","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}