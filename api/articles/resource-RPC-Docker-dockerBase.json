{"title":"docker基本命令","num_read":1493,"num_like":875,"num_collection":578,"num_comments":201,"slug":"resource-RPC-Docker-dockerBase","date":"2020-08-13T16:00:00.000Z","img":"/img/header_img/docker/docker.jpg","_id":"clhrbp2fo00euo5lg3qic9bgw","project":"RPC","site":{"data":{}},"updated":"2022-09-20T02:15:03.043Z","author":"Sunfy","comments":true,"path":"api/articles/resource-RPC-Docker-dockerBase.json","webPath":"2020/08/14/resource-RPC-Docker-dockerBase/","permalink":"https://sunfy9.gitee.io/2020/08/14/resource-RPC-Docker-dockerBase/","excerpt":"docker 客户端非常简单 ,我们可以直接输入 docker 命令来查看到 Docker 客户端的所有命令选项。","covers":["../../../../img/dockerBase/image-20210122101233015.png","../../../../img/dockerBase/image-20210122101335591.png","../../../../img/dockerBase/docker-attach.png","../../../../img/dockerBase/docker-exec.png","../../../../img/dockerBase/docker-export.png","../../../../img/dockerBase/docker-import.png","../../../../img/dockerBase/docker-container-rmi.png"],"keywords":"sunfy, hexo-theme-snail","content":"<p>docker 客户端非常简单 ,我们可以直接输入 docker 命令来查看到 Docker 客户端的所有命令选项。<a id=\"more\"></a></p>\n<h3 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure>\n<p><strong>Docker Compose的安装</strong> </p>\n<p>Compose的安装有多种方式，例如通过shell安装、通过pip安装、以及将compose作为容器安装等等。本文讲解通过shell安装的方式。其他安装方式如有兴趣，可以查看Docker的官方文档：<a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/install/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> docker compose安装步骤</span></span><br><span class=\"line\">sudo curl -L \"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose</span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\">docker-compose --version</span><br></pre></td></tr></table></figure>\n<h3 id=\"docker服务器重启\"><a href=\"#docker服务器重启\" class=\"headerlink\" title=\"docker服务器重启\"></a>docker服务器重启<sunfy-line></h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service docker restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h3><p><img src=\"../../../../img/dockerBase/image-20210122101233015.png\" alt=\"image-20210122101233015\"></p>\n<p>可以通过命令 <strong>docker command —help</strong> 更深入的了解指定的 Docker 命令使用方法。</p>\n<p>例如我们要查看 <strong>docker stats</strong> 指令的具体使用方法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stats --help</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/dockerBase/image-20210122101335591.png\" alt=\"image-20210122101335591\"></p>\n<h3 id=\"搜索镜像\"><a href=\"#搜索镜像\" class=\"headerlink\" title=\"搜索镜像\"></a>搜索镜像</h3><p>官网查看镜像版本地址</p>\n<p><code>https://hub.docker.com/</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker search httpd</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取镜像\"><a href=\"#获取镜像\" class=\"headerlink\" title=\"获取镜像\"></a>获取镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull xxxx</span><br></pre></td></tr></table></figure>\n<h3 id=\"新建并启动容器\"><a href=\"#新建并启动容器\" class=\"headerlink\" title=\"新建并启动容器\"></a>新建并启动容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run </span><br><span class=\"line\">docker run ‐d ‐p 8761:8761 microservice‐eureka‐server:0.0.1</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用 -v 可以挂载一个主机上的目录到容器的目录</span></span><br><span class=\"line\">docker run ‐p 8761:8761 ‐v /log:/container‐log microservice‐eureka‐server:0.0.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动容器（已创建的）\"><a href=\"#启动容器（已创建的）\" class=\"headerlink\" title=\"启动容器（已创建的）\"></a>启动容器（已创建的）</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看启动容器\"><a href=\"#查看启动容器\" class=\"headerlink\" title=\"查看启动容器\"></a>查看启动容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看所有容器\"><a href=\"#查看所有容器\" class=\"headerlink\" title=\"查看所有容器\"></a>查看所有容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n<h3 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop &lt;容器 ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"重启容器\"><a href=\"#重启容器\" class=\"headerlink\" title=\"重启容器\"></a>重启容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker restart &lt;容器 ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"进入容器\"><a href=\"#进入容器\" class=\"headerlink\" title=\"进入容器\"></a>进入容器</h3><p>在使用 <strong>-d</strong> 参数时，容器启动后会进入后台。此时想要进入容器，可以通过以下指令进入：</p>\n<ul>\n<li><strong>docker attach</strong></li>\n<li><strong>docker exec</strong>：推荐大家使用 docker exec 命令，因为此退出容器终端，不会导致容器的停止。</li>\n</ul>\n<p><strong>attach 命令</strong></p>\n<p>下面演示了使用 docker attach 命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker attach 1e560fca3906</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-attach.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-attach.png\" alt=\"img\"></a></p>\n<p><strong>注意：</strong> 如果从这个容器退出，会导致容器的停止。</p>\n<p><strong>exec 命令</strong></p>\n<p>下面演示了使用 docker exec 命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it 243c32535da7 &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-exec.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-exec.png\" alt=\"img\"></a></p>\n<p><strong>注意：</strong> 如果从这个容器退出，容器不会停止，这就是为什么推荐大家使用 <strong>docker exec</strong> 的原因。</p>\n<p>更多参数说明请使用 <strong>docker exec —help</strong> 命令查看。</p>\n<h3 id=\"获得容器root权限\"><a href=\"#获得容器root权限\" class=\"headerlink\" title=\"获得容器root权限\"></a>获得容器root权限</h3><p>第一步：查看容器的CONTAINER ID</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n<p>ps:需要运行中的容器</p>\n<p>第二步：获取root权限，例如需要进入的CONTAINER ID为2209371edd48</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -ti -u root 2209371edd48 bash</span><br></pre></td></tr></table></figure>\n<h3 id=\"导出和导入容器\"><a href=\"#导出和导入容器\" class=\"headerlink\" title=\"导出和导入容器\"></a>导出和导入容器</h3><p><strong>导出容器</strong></p>\n<p>如果要导出本地某个容器，可以使用 <strong>docker export</strong> 命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker export 1e560fca3906 &gt; ubuntu.tar</span><br></pre></td></tr></table></figure>\n<p>导出容器 1e560fca3906 快照到本地文件 ubuntu.tar。</p>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-export.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-export.png\" alt=\"img\"></a></p>\n<p>这样将导出容器快照到本地文件。</p>\n<p><strong>导入容器快照</strong></p>\n<p>可以使用 docker import 从容器快照文件中再导入为镜像，以下实例将快照文件 ubuntu.tar 导入到镜像 test/ubuntu:v1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat docker&#x2F;ubuntu.tar | docker import - test&#x2F;ubuntu:v1</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-import.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-import.png\" alt=\"img\"></a></p>\n<p>此外，也可以通过指定 URL 或者某个目录来导入，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker import http:&#x2F;&#x2F;example.com&#x2F;exampleimage.tgz example&#x2F;imagerepo</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除容器\"><a href=\"#删除容器\" class=\"headerlink\" title=\"删除容器\"></a>删除容器</h3><p>删除容器使用 <strong>docker rm</strong> 命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm -f 1e560fca3906</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-container-rmi.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-container-rmi.png\" alt=\"img\"></a></p>\n<p>下面的命令可以清理掉所有处于终止状态的容器。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker container prune</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置容器自动启动\"><a href=\"#设置容器自动启动\" class=\"headerlink\" title=\"设置容器自动启动\"></a>设置容器自动启动</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在运行docker容器时可以加如下参数来保证每次docker服务重启后容器也自动重启：</span></span><br><span class=\"line\">docker run --restart=always</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 如果已经启动了则可以使用如下命令：</span></span><br><span class=\"line\">docker update --restart=always &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Docker-cp-命令\"><a href=\"#Docker-cp-命令\" class=\"headerlink\" title=\"Docker cp 命令\"></a>Docker cp 命令</h3><hr>\n<p><strong>docker cp :</strong>用于容器与主机之间的数据拷贝。</p>\n<h4 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-</span><br><span class=\"line\">docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH</span><br></pre></td></tr></table></figure>\n<p>OPTIONS说明：</p>\n<ul>\n<li><strong>-L :</strong>保持源目标中的链接</li>\n</ul>\n<h4 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h4><p>将主机/www/runoob目录拷贝到容器96f7f14e99ab的/www目录下。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp &#x2F;www&#x2F;runoob 96f7f14e99ab:&#x2F;www&#x2F;</span><br></pre></td></tr></table></figure><br>将主机/www/runoob目录拷贝到容器96f7f14e99ab中，目录重命名为www。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp &#x2F;www&#x2F;runoob 96f7f14e99ab:&#x2F;www</span><br></pre></td></tr></table></figure><br>将容器96f7f14e99ab的/www目录拷贝到主机的/tmp目录中。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp  96f7f14e99ab:&#x2F;www &#x2F;tmp&#x2F;</span><br></pre></td></tr></table></figure>\n<h3 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h3><p>菜鸟教程-docker <code>https://www.runoob.com/docker/docker-tutorial.html</code></p>\n","more":"</p>\n<h3 id=\"docker安装\"><a href=\"#docker安装\" class=\"headerlink\" title=\"docker安装\"></a>docker安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure>\n<p><strong>Docker Compose的安装</strong> </p>\n<p>Compose的安装有多种方式，例如通过shell安装、通过pip安装、以及将compose作为容器安装等等。本文讲解通过shell安装的方式。其他安装方式如有兴趣，可以查看Docker的官方文档：<a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/install/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> docker compose安装步骤</span></span><br><span class=\"line\">sudo curl -L \"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose</span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\">docker-compose --version</span><br></pre></td></tr></table></figure>\n<h3 id=\"docker服务器重启\"><a href=\"#docker服务器重启\" class=\"headerlink\" title=\"docker服务器重启\"></a>docker服务器重启<sunfy-line></h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service docker restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h3><p><img src=\"../../../../img/dockerBase/image-20210122101233015.png\" alt=\"image-20210122101233015\"></p>\n<p>可以通过命令 <strong>docker command —help</strong> 更深入的了解指定的 Docker 命令使用方法。</p>\n<p>例如我们要查看 <strong>docker stats</strong> 指令的具体使用方法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stats --help</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/dockerBase/image-20210122101335591.png\" alt=\"image-20210122101335591\"></p>\n<h3 id=\"搜索镜像\"><a href=\"#搜索镜像\" class=\"headerlink\" title=\"搜索镜像\"></a>搜索镜像</h3><p>官网查看镜像版本地址</p>\n<p><code>https://hub.docker.com/</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker search httpd</span><br></pre></td></tr></table></figure>\n<h3 id=\"获取镜像\"><a href=\"#获取镜像\" class=\"headerlink\" title=\"获取镜像\"></a>获取镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull xxxx</span><br></pre></td></tr></table></figure>\n<h3 id=\"新建并启动容器\"><a href=\"#新建并启动容器\" class=\"headerlink\" title=\"新建并启动容器\"></a>新建并启动容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run </span><br><span class=\"line\">docker run ‐d ‐p 8761:8761 microservice‐eureka‐server:0.0.1</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用 -v 可以挂载一个主机上的目录到容器的目录</span></span><br><span class=\"line\">docker run ‐p 8761:8761 ‐v /log:/container‐log microservice‐eureka‐server:0.0.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动容器（已创建的）\"><a href=\"#启动容器（已创建的）\" class=\"headerlink\" title=\"启动容器（已创建的）\"></a>启动容器（已创建的）</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看启动容器\"><a href=\"#查看启动容器\" class=\"headerlink\" title=\"查看启动容器\"></a>查看启动容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看所有容器\"><a href=\"#查看所有容器\" class=\"headerlink\" title=\"查看所有容器\"></a>查看所有容器</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps -a</span><br></pre></td></tr></table></figure>\n<h3 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop &lt;容器 ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"重启容器\"><a href=\"#重启容器\" class=\"headerlink\" title=\"重启容器\"></a>重启容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker restart &lt;容器 ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"进入容器\"><a href=\"#进入容器\" class=\"headerlink\" title=\"进入容器\"></a>进入容器</h3><p>在使用 <strong>-d</strong> 参数时，容器启动后会进入后台。此时想要进入容器，可以通过以下指令进入：</p>\n<ul>\n<li><strong>docker attach</strong></li>\n<li><strong>docker exec</strong>：推荐大家使用 docker exec 命令，因为此退出容器终端，不会导致容器的停止。</li>\n</ul>\n<p><strong>attach 命令</strong></p>\n<p>下面演示了使用 docker attach 命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker attach 1e560fca3906</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-attach.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-attach.png\" alt=\"img\"></a></p>\n<p><strong>注意：</strong> 如果从这个容器退出，会导致容器的停止。</p>\n<p><strong>exec 命令</strong></p>\n<p>下面演示了使用 docker exec 命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it 243c32535da7 &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-exec.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-exec.png\" alt=\"img\"></a></p>\n<p><strong>注意：</strong> 如果从这个容器退出，容器不会停止，这就是为什么推荐大家使用 <strong>docker exec</strong> 的原因。</p>\n<p>更多参数说明请使用 <strong>docker exec —help</strong> 命令查看。</p>\n<h3 id=\"获得容器root权限\"><a href=\"#获得容器root权限\" class=\"headerlink\" title=\"获得容器root权限\"></a>获得容器root权限</h3><p>第一步：查看容器的CONTAINER ID</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n<p>ps:需要运行中的容器</p>\n<p>第二步：获取root权限，例如需要进入的CONTAINER ID为2209371edd48</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -ti -u root 2209371edd48 bash</span><br></pre></td></tr></table></figure>\n<h3 id=\"导出和导入容器\"><a href=\"#导出和导入容器\" class=\"headerlink\" title=\"导出和导入容器\"></a>导出和导入容器</h3><p><strong>导出容器</strong></p>\n<p>如果要导出本地某个容器，可以使用 <strong>docker export</strong> 命令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker export 1e560fca3906 &gt; ubuntu.tar</span><br></pre></td></tr></table></figure>\n<p>导出容器 1e560fca3906 快照到本地文件 ubuntu.tar。</p>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-export.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-export.png\" alt=\"img\"></a></p>\n<p>这样将导出容器快照到本地文件。</p>\n<p><strong>导入容器快照</strong></p>\n<p>可以使用 docker import 从容器快照文件中再导入为镜像，以下实例将快照文件 ubuntu.tar 导入到镜像 test/ubuntu:v1:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat docker&#x2F;ubuntu.tar | docker import - test&#x2F;ubuntu:v1</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-import.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-import.png\" alt=\"img\"></a></p>\n<p>此外，也可以通过指定 URL 或者某个目录来导入，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker import http:&#x2F;&#x2F;example.com&#x2F;exampleimage.tgz example&#x2F;imagerepo</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除容器\"><a href=\"#删除容器\" class=\"headerlink\" title=\"删除容器\"></a>删除容器</h3><p>删除容器使用 <strong>docker rm</strong> 命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm -f 1e560fca3906</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.runoob.com/wp-content/uploads/2016/05/docker-container-rmi.png\" target=\"_blank\" rel=\"noopener\"><img src=\"../../../../img/dockerBase/docker-container-rmi.png\" alt=\"img\"></a></p>\n<p>下面的命令可以清理掉所有处于终止状态的容器。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker container prune</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置容器自动启动\"><a href=\"#设置容器自动启动\" class=\"headerlink\" title=\"设置容器自动启动\"></a>设置容器自动启动</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在运行docker容器时可以加如下参数来保证每次docker服务重启后容器也自动重启：</span></span><br><span class=\"line\">docker run --restart=always</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 如果已经启动了则可以使用如下命令：</span></span><br><span class=\"line\">docker update --restart=always &lt;CONTAINER ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Docker-cp-命令\"><a href=\"#Docker-cp-命令\" class=\"headerlink\" title=\"Docker cp 命令\"></a>Docker cp 命令</h3><hr>\n<p><strong>docker cp :</strong>用于容器与主机之间的数据拷贝。</p>\n<h4 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-</span><br><span class=\"line\">docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH</span><br></pre></td></tr></table></figure>\n<p>OPTIONS说明：</p>\n<ul>\n<li><strong>-L :</strong>保持源目标中的链接</li>\n</ul>\n<h4 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h4><p>将主机/www/runoob目录拷贝到容器96f7f14e99ab的/www目录下。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp &#x2F;www&#x2F;runoob 96f7f14e99ab:&#x2F;www&#x2F;</span><br></pre></td></tr></table></figure><br>将主机/www/runoob目录拷贝到容器96f7f14e99ab中，目录重命名为www。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp &#x2F;www&#x2F;runoob 96f7f14e99ab:&#x2F;www</span><br></pre></td></tr></table></figure><br>将容器96f7f14e99ab的/www目录拷贝到主机的/tmp目录中。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp  96f7f14e99ab:&#x2F;www &#x2F;tmp&#x2F;</span><br></pre></td></tr></table></figure>\n<h3 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录\"></a>附录</h3><p>菜鸟教程-docker <code>https://www.runoob.com/docker/docker-tutorial.html</code></p>","next":{"title":"java设计模式之动态代理实现与原理详细分析","path":"api/articles/resource-designpattern-structure-proxy.json","image":"/img/header_img/Design/Proxy.PNG","num_read":1532,"num_like":613,"num_collection":496,"num_comments":111},"prev":{"title":"Linux常用命令","path":"api/articles/resource-system-Linux-CommonCommands.json","image":"/img/header_img/15.gif","num_read":1323,"num_like":45,"num_collection":862,"num_comments":47},"categories":[{"name":"RPC远程调用","path":"api/categories/RPC远程调用.json","pathContent":"api/categories/RPC远程调用","description":"RPC（Remote Procedure Call）远程过程调用，简单的理解是一个节点请求另一个节点提供的服务","cover":"https://sunfy9.gitee.io/project/photo/project/rpc.jpg"}],"tags":[{"name":"Docker","path":"api/tags/Docker.json","pathContent":"api/tags/Docker","description":"一个开源的应用容器引擎。","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}