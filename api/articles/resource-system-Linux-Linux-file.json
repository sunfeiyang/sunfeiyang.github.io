{"title":"Linux系统之间传输文件的几种方法","num_read":309,"num_like":201,"num_collection":313,"num_comments":139,"slug":"resource-system-Linux-Linux-file","date":"2019-05-05T16:00:00.000Z","img":"/img/header_img/15.gif","_id":"clhrbp2g900k6o5lg23rlaphy","project":"Linux","type":"banner","site":{"data":{}},"updated":"2022-09-20T02:22:48.841Z","author":"Sunfy","comments":true,"path":"api/articles/resource-system-Linux-Linux-file.json","webPath":"2019/05/06/resource-system-Linux-Linux-file/","permalink":"https://sunfy9.gitee.io/2019/05/06/resource-system-Linux-Linux-file/","excerpt":"Linux系统文件传输的方法及使用说明。","covers":["../../../../img/Linux-file/20160614165916068"],"keywords":"sunfy, hexo-theme-snail","content":"<p>Linux系统文件传输的方法及使用说明。<a id=\"more\"></a></p>\n<h1 id=\"scp传输\"><a href=\"#scp传输\" class=\"headerlink\" title=\"scp传输\"></a>scp传输</h1><p>当两台LINUX主机之间要互传文件时可使用SCP命令来实现<br>scp传输速度较慢,但使用ssh通道保证了传输的安全性</p>\n<h2 id=\"复制文件\"><a href=\"#复制文件\" class=\"headerlink\" title=\"复制文件\"></a>复制文件</h2><hr>\n<ul>\n<li>将本地文件拷贝到远程</li>\n</ul>\n<blockquote>\n<p>scp 文件名 –用户名@计算机IP或者计算机名称:远程路径</p>\n</blockquote>\n<ul>\n<li>从远程将文件拷回本地</li>\n</ul>\n<blockquote>\n<p>scp –用户名@计算机IP或者计算机名称:文件名 本地路径</p>\n</blockquote>\n<p><em>命令格式</em></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp local_file remote_username@remote_ip:remote_folder </span><br><span class=\"line\">或者 </span><br><span class=\"line\">scp local_file remote_username@remote_ip:remote_file </span><br><span class=\"line\">或者 </span><br><span class=\"line\">scp local_file remote_ip:remote_folder </span><br><span class=\"line\">或者 </span><br><span class=\"line\">scp local_file remote_ip:remote_file <span class=\"number\">1234567</span></span><br></pre></td></tr></table></figure>\n<p>第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名；<br>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名；</p>\n<h2 id=\"复制目录\"><a href=\"#复制目录\" class=\"headerlink\" title=\"复制目录\"></a>复制目录</h2><ul>\n<li>将本地目录拷贝到远程</li>\n</ul>\n<blockquote>\n<p>scp -r 目录名 用户名@计算机IP或者计算机名称:远程路径</p>\n</blockquote>\n<ul>\n<li>从远程将目录拷回本地</li>\n</ul>\n<blockquote>\n<p>scp -r 用户名@计算机IP或者计算机名称:目录名 本地路径</p>\n</blockquote>\n<p><strong>命令格式</strong><sunfy-line></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r local_folder remote_username@remote_ip:remote_folder </span><br><span class=\"line\">或者 </span><br><span class=\"line\">scp -r local_folder remote_ip:remote_folder <span class=\"number\">123</span></span><br></pre></td></tr></table></figure>\n<p>第1个指定了用户名，命令执行后需要再输入密码；<br>第2个没有指定用户名，命令执行后需要输入用户名和密码；</p>\n<p><strong>例子</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r /<span class=\"built_in\">home</span>/space/music/ root@www.cumt.edu.cn:/<span class=\"built_in\">home</span>/root/others/ </span><br><span class=\"line\">scp -r /<span class=\"built_in\">home</span>/space/music/ www.cumt.edu.cn:/<span class=\"built_in\">home</span>/root/others/ <span class=\"number\">12</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参数详解\"><a href=\"#参数详解\" class=\"headerlink\" title=\"参数详解\"></a>参数详解</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-a</td>\n<td>尽可能将档案状态、权限等资料都照原状予以复制</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>若 source 中含有目录名，则将目录下之档案亦皆依序拷贝至目的地</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>和大多数 linux 命令中的 -v 意思一样 , 用来显示进度 . 可以用来查看连接 , 认证 , 或是配置错误</td>\n</tr>\n<tr>\n<td>-C</td>\n<td>使能压缩选项</td>\n</tr>\n<tr>\n<td>-P</td>\n<td>选择端口 . 注意 -p 已经被 rcp 使用</td>\n</tr>\n<tr>\n<td>-4</td>\n<td>强行使用 IPV4 地址</td>\n</tr>\n<tr>\n<td>-6</td>\n<td>强行使用 IPV6 地址</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"举例说明\"><a href=\"#举例说明\" class=\"headerlink\" title=\"举例说明\"></a>举例说明</h2><ol>\n<li>把计算机名为“v111.nn”下所有的东西都拷贝到本机/home/admin/目录下</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r * v111.nn:/<span class=\"built_in\">home</span>/admin/ <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>以admin的身份把IP地址为“192.168.219.125”，/home/admin/test目录下所有的东西都拷贝到本机/home/admin/目录下</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r  admin@192.168.88.88:/home/admin/test  /home/admin/1</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/Linux-file/20160614165916068\" alt=\"scp示例\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><blockquote>\n<p><a href=\"http://www.linuxidc.com/Linux/2015-01/111894.htm\" target=\"_blank\" rel=\"noopener\">配置scp在Linux或Unix之间传输文件无需密码</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-09/107127.htm\" target=\"_blank\" rel=\"noopener\">Linux之cp/scp命令＋scp命令详解</a></p>\n<p>[CentOS 不能使用scp命令 解决方法](<a href=\"http://www.linuxidc.com/Linux/2014-09/106569.htm_\" target=\"_blank\" rel=\"noopener\">http://www.linuxidc.com/Linux/2014-09/106569.htm_</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-04/99979.htm\" target=\"_blank\" rel=\"noopener\">两台Linux主机之间scp复制文件</a></p>\n</blockquote>\n<h1 id=\"rsync差异化传输-支持断点续传-数据同步\"><a href=\"#rsync差异化传输-支持断点续传-数据同步\" class=\"headerlink\" title=\"rsync差异化传输(支持断点续传,数据同步)\"></a>rsync差异化传输(支持断点续传,数据同步)</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync -av /backup/ -e ssh root@<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.110</span>:/bak1</span><br></pre></td></tr></table></figure>\n<p>-a: archive归档模式，表示以递归方式传输文件，并保持所有文件属性，链接等,等于-rlptgoDrsync——remote sync。</p>\n<p>rsync是Linux系统下的文件同步和数据传输工具，它采用“rsync”算法，可以将一个客户机和远程文件服务器之间的文件同步，也可以在本地系统中将数据从一个分区备份到另一个分区上。</p>\n<p>如果rsync在备份过程中出现了数据传输中断，恢复后可以继续传输不一致的部分。rsync可以执行完整备份或增量备份。</p>\n<p>它的主要特点有：</p>\n<ol>\n<li>可以镜像保存整个目录树和文件系统；</li>\n<li>可以很容易做到保持原来文件的权限、时间、软硬链接；无须特殊权限即可安装；</li>\n<li>可以增量同步数据，文件传输效率高，因而同步时间短；</li>\n<li>可以使用rcp、ssh等方式来传输文件，当然也可以通过直接的socket连接；</li>\n<li>支持匿名传输，以方便进行网站镜象等；</li>\n<li>加密传输数据，保证了数据的安全性；</li>\n</ol>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-09/106967.htm\" target=\"_blank\" rel=\"noopener\">Rsync实现文件备份同步详解</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-09/106574.htm\" target=\"_blank\" rel=\"noopener\">Rsync同步两台服务器</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-05/101084.htmUbuntu\" target=\"_blank\" rel=\"noopener\">CentOS 6.5下Rsync远程同步</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-03/97592.htm\" target=\"_blank\" rel=\"noopener\">Linux下用Rsync进行数据备份和同步配制</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-02/97068.htm\" target=\"_blank\" rel=\"noopener\">Linux使用Rsync客户端与服务端同步目录进行备份</a></p>\n<h1 id=\"管道传输-降低IO开销\"><a href=\"#管道传输-降低IO开销\" class=\"headerlink\" title=\"管道传输(降低IO开销)\"></a>管道传输(降低IO开销)</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gzip -c sda.img | ssh root@<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.110</span> <span class=\"string\">\"gunzip -c - &gt; /image/sda.img\"</span><span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>对sda.img使用gzip压缩,-c参数表示输出到stdout,即通过管道传送</p>\n<p>gunzip -c - 中的”-“表示接收从管道传进的sdtin</p>\n<h1 id=\"nc传输-一种网络的数据流重定向\"><a href=\"#nc传输-一种网络的数据流重定向\" class=\"headerlink\" title=\"nc传输(一种网络的数据流重定向)\"></a>nc传输(一种网络的数据流重定向)</h1><p>nc所做的就是在两台电脑之间建立tcp或udp链接,并在两个端口之间传输数据流,是一种网络的数据流重定向</p>\n<p>使用dd结合nc命令网络克隆磁盘分区</p>\n<p>主机:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd <span class=\"keyword\">if</span>=/dev/vda | gzip -c | nc -l <span class=\"number\">505221</span></span><br></pre></td></tr></table></figure>\n<p>待恢复机:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc <span class=\"number\">192.168</span><span class=\"number\">.215</span><span class=\"number\">.63</span> <span class=\"number\">50522</span> | gzip -dc | dd of=/dev/sda1</span><br></pre></td></tr></table></figure>\n<p>dd命令克隆/dev/vda磁盘,并使用gzip压缩,把数据流重定向到本机50522端口,待恢复机上使用nc连接主机50522端口,就能接收主机50522端口的比特数据流,然后使用gzip解压缩,并恢复到/dev/sda磁盘</p>\n<p>dd命令读取的是磁盘扇区,所以不论磁盘文件系统,或者分区表,磁盘MBR信息,dd都能够复制,可以使用bs,count参数控制要克隆的大小</p>\n<p>例如dd bs=512 count=1 if=/dev/vda of=mbr.img 只复制磁盘vda的第一个扇区512K字节数据(引导程序和分区表)</p>\n<p>通常，可以用scp完成两台主机间的文件传输任务，但在主机间未建立信任关系的情况下，scp每次都需要输入密码，用起来感觉不是很方便，之前这篇笔记介绍过不用输入密码执行脚本或传输文件的方法，但对于一些临时性的任务，准备工作还是比较麻烦。</p>\n<h2 id=\"what-is-nc\"><a href=\"#what-is-nc\" class=\"headerlink\" title=\"what is nc ?\"></a>what is nc ?</h2><p>nc是netcat的简写，关于nc是什么，man如是说：arbitrary TCP and UDP connections and listens</p>\n<p>nc可以方便地实现任意TCP/UDP端口的侦听，连接的建立，端口的扫描，等等。也即，nc既可以作为server以TCP或UDP方式侦听指定端口，也可以作为client发起TCP连接或方式UDP包。下面要介绍的技巧就是借助其TCP连接来实现主机间文件传输的。</p>\n<p>nc的控制参数不少，常用的几个参数如下所列：</p>\n<blockquote>\n<p>备注：nc要连接的目的端口可以是具体的整数，也可以直接通过服务名指定，这种情况下，nc会负责将name映射至某个well-known port（可用cat /etc/services查看这些端口跟服务名的映射关系）</p>\n</blockquote>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-l</td>\n<td>用于指定nc将处于侦听模式。指定该参数，则意味着nc被当作server，侦听并接受连接，而非向其它地址发起连接</td>\n</tr>\n<tr>\n<td>-p port</td>\n<td>指定nc要使用的端口。若之前已指定-l，则这里的-p指定具体的侦听端口；若未指定-l，则表示向这个端口发起连接</td>\n</tr>\n<tr>\n<td>-s hostname/ip-address</td>\n<td>指定发送数据的源IP地址，适用于多网卡机器</td>\n</tr>\n<tr>\n<td>-u</td>\n<td>指定nc使用UDP协议，默认为TCP</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>输出交互或出错信息，新手调试时尤为有用</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"use-nc-to-transmit-data-between-hosts\"><a href=\"#use-nc-to-transmit-data-between-hosts\" class=\"headerlink\" title=\"use nc to transmit data between hosts\"></a>use nc to transmit data between hosts</h2><p>经过上面对nc的简介，估计不少同学已经知道怎么用nc来实现两台机器间的文件传输了。这里对实现流程做简单说明。</p>\n<h3 id=\"在数据接收方的机器上侦听指定端口\"><a href=\"#在数据接收方的机器上侦听指定端口\" class=\"headerlink\" title=\"在数据接收方的机器上侦听指定端口\"></a>在数据接收方的机器上侦听指定端口</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -l -p <span class=\"number\">8210</span> &gt; demo.txt        # 在本机<span class=\"number\">8210</span>端口侦听TCP连接，将收到的数据写入文本文件</span><br><span class=\"line\">nc -l -p <span class=\"number\">8210</span> &gt; demo.tar.bz2    # 在本机<span class=\"number\">8210</span>端口侦听TCP连接，将收到的数据写成压缩文件<span class=\"number\">12</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"在数据发送方机器上向指定地址-ip-port-以TCP方式发送数据\"><a href=\"#在数据发送方机器上向指定地址-ip-port-以TCP方式发送数据\" class=\"headerlink\" title=\"在数据发送方机器上向指定地址(ip+port)以TCP方式发送数据\"></a>在数据发送方机器上向指定地址(ip+port)以TCP方式发送数据</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc dest_ip <span class=\"number\">8210</span> &lt; demo.txt      # 向ip为dest_ip的机器的<span class=\"number\">8210</span>端口发送demo.txt文件</span><br><span class=\"line\">nc dest_ip <span class=\"number\">8210</span> &lt; $(tar -jcvf demo.tar.bz2 demo.txt) # 压缩后发送<span class=\"number\">12</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"v打印出错信息\"><a href=\"#v打印出错信息\" class=\"headerlink\" title=\"-v打印出错信息\"></a>-v打印出错信息</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">接收方：nc -v -l -p <span class=\"number\">8210</span>  </span><br><span class=\"line\">发送方：nc -v dest_ip <span class=\"number\">821012</span></span><br></pre></td></tr></table></figure>\n<p>注意：使用nc传文件时，需注意操作次序，receiver先侦听端口，sender向receiver所在机器的该端口发送数据。否则发送失败。</p>\n<h1 id=\"建立文件服务器\"><a href=\"#建立文件服务器\" class=\"headerlink\" title=\"建立文件服务器\"></a>建立文件服务器</h1><p>除了上面集中传输文件的方式之外,还可以通过简历文件服务器,然后通过网络挂载的方式传输,这种适用于经常性的拷贝,下面是一个挂载ftp服务器的例子<br>挂载ftp服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install curlftpfs</span><br><span class=\"line\">mkdir /data/ftp</span><br><span class=\"line\">curlftpfs username:password@ftp.yourdomain.com /data/ftp</span><br></pre></td></tr></table></figure>","more":"</p>\n<h1 id=\"scp传输\"><a href=\"#scp传输\" class=\"headerlink\" title=\"scp传输\"></a>scp传输</h1><p>当两台LINUX主机之间要互传文件时可使用SCP命令来实现<br>scp传输速度较慢,但使用ssh通道保证了传输的安全性</p>\n<h2 id=\"复制文件\"><a href=\"#复制文件\" class=\"headerlink\" title=\"复制文件\"></a>复制文件</h2><hr>\n<ul>\n<li>将本地文件拷贝到远程</li>\n</ul>\n<blockquote>\n<p>scp 文件名 –用户名@计算机IP或者计算机名称:远程路径</p>\n</blockquote>\n<ul>\n<li>从远程将文件拷回本地</li>\n</ul>\n<blockquote>\n<p>scp –用户名@计算机IP或者计算机名称:文件名 本地路径</p>\n</blockquote>\n<p><em>命令格式</em></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp local_file remote_username@remote_ip:remote_folder </span><br><span class=\"line\">或者 </span><br><span class=\"line\">scp local_file remote_username@remote_ip:remote_file </span><br><span class=\"line\">或者 </span><br><span class=\"line\">scp local_file remote_ip:remote_folder </span><br><span class=\"line\">或者 </span><br><span class=\"line\">scp local_file remote_ip:remote_file <span class=\"number\">1234567</span></span><br></pre></td></tr></table></figure>\n<p>第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名；<br>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名；</p>\n<h2 id=\"复制目录\"><a href=\"#复制目录\" class=\"headerlink\" title=\"复制目录\"></a>复制目录</h2><ul>\n<li>将本地目录拷贝到远程</li>\n</ul>\n<blockquote>\n<p>scp -r 目录名 用户名@计算机IP或者计算机名称:远程路径</p>\n</blockquote>\n<ul>\n<li>从远程将目录拷回本地</li>\n</ul>\n<blockquote>\n<p>scp -r 用户名@计算机IP或者计算机名称:目录名 本地路径</p>\n</blockquote>\n<p><strong>命令格式</strong><sunfy-line></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r local_folder remote_username@remote_ip:remote_folder </span><br><span class=\"line\">或者 </span><br><span class=\"line\">scp -r local_folder remote_ip:remote_folder <span class=\"number\">123</span></span><br></pre></td></tr></table></figure>\n<p>第1个指定了用户名，命令执行后需要再输入密码；<br>第2个没有指定用户名，命令执行后需要输入用户名和密码；</p>\n<p><strong>例子</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r /<span class=\"built_in\">home</span>/space/music/ root@www.cumt.edu.cn:/<span class=\"built_in\">home</span>/root/others/ </span><br><span class=\"line\">scp -r /<span class=\"built_in\">home</span>/space/music/ www.cumt.edu.cn:/<span class=\"built_in\">home</span>/root/others/ <span class=\"number\">12</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"参数详解\"><a href=\"#参数详解\" class=\"headerlink\" title=\"参数详解\"></a>参数详解</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-a</td>\n<td>尽可能将档案状态、权限等资料都照原状予以复制</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>若 source 中含有目录名，则将目录下之档案亦皆依序拷贝至目的地</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>和大多数 linux 命令中的 -v 意思一样 , 用来显示进度 . 可以用来查看连接 , 认证 , 或是配置错误</td>\n</tr>\n<tr>\n<td>-C</td>\n<td>使能压缩选项</td>\n</tr>\n<tr>\n<td>-P</td>\n<td>选择端口 . 注意 -p 已经被 rcp 使用</td>\n</tr>\n<tr>\n<td>-4</td>\n<td>强行使用 IPV4 地址</td>\n</tr>\n<tr>\n<td>-6</td>\n<td>强行使用 IPV6 地址</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"举例说明\"><a href=\"#举例说明\" class=\"headerlink\" title=\"举例说明\"></a>举例说明</h2><ol>\n<li>把计算机名为“v111.nn”下所有的东西都拷贝到本机/home/admin/目录下</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r * v111.nn:/<span class=\"built_in\">home</span>/admin/ <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>以admin的身份把IP地址为“192.168.219.125”，/home/admin/test目录下所有的东西都拷贝到本机/home/admin/目录下</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r  admin@192.168.88.88:/home/admin/test  /home/admin/1</span><br></pre></td></tr></table></figure>\n<p><img src=\"../../../../img/Linux-file/20160614165916068\" alt=\"scp示例\"></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><blockquote>\n<p><a href=\"http://www.linuxidc.com/Linux/2015-01/111894.htm\" target=\"_blank\" rel=\"noopener\">配置scp在Linux或Unix之间传输文件无需密码</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-09/107127.htm\" target=\"_blank\" rel=\"noopener\">Linux之cp/scp命令＋scp命令详解</a></p>\n<p>[CentOS 不能使用scp命令 解决方法](<a href=\"http://www.linuxidc.com/Linux/2014-09/106569.htm_\" target=\"_blank\" rel=\"noopener\">http://www.linuxidc.com/Linux/2014-09/106569.htm_</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-04/99979.htm\" target=\"_blank\" rel=\"noopener\">两台Linux主机之间scp复制文件</a></p>\n</blockquote>\n<h1 id=\"rsync差异化传输-支持断点续传-数据同步\"><a href=\"#rsync差异化传输-支持断点续传-数据同步\" class=\"headerlink\" title=\"rsync差异化传输(支持断点续传,数据同步)\"></a>rsync差异化传输(支持断点续传,数据同步)</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rsync -av /backup/ -e ssh root@<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.110</span>:/bak1</span><br></pre></td></tr></table></figure>\n<p>-a: archive归档模式，表示以递归方式传输文件，并保持所有文件属性，链接等,等于-rlptgoDrsync——remote sync。</p>\n<p>rsync是Linux系统下的文件同步和数据传输工具，它采用“rsync”算法，可以将一个客户机和远程文件服务器之间的文件同步，也可以在本地系统中将数据从一个分区备份到另一个分区上。</p>\n<p>如果rsync在备份过程中出现了数据传输中断，恢复后可以继续传输不一致的部分。rsync可以执行完整备份或增量备份。</p>\n<p>它的主要特点有：</p>\n<ol>\n<li>可以镜像保存整个目录树和文件系统；</li>\n<li>可以很容易做到保持原来文件的权限、时间、软硬链接；无须特殊权限即可安装；</li>\n<li>可以增量同步数据，文件传输效率高，因而同步时间短；</li>\n<li>可以使用rcp、ssh等方式来传输文件，当然也可以通过直接的socket连接；</li>\n<li>支持匿名传输，以方便进行网站镜象等；</li>\n<li>加密传输数据，保证了数据的安全性；</li>\n</ol>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-09/106967.htm\" target=\"_blank\" rel=\"noopener\">Rsync实现文件备份同步详解</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-09/106574.htm\" target=\"_blank\" rel=\"noopener\">Rsync同步两台服务器</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-05/101084.htmUbuntu\" target=\"_blank\" rel=\"noopener\">CentOS 6.5下Rsync远程同步</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-03/97592.htm\" target=\"_blank\" rel=\"noopener\">Linux下用Rsync进行数据备份和同步配制</a></p>\n<p><a href=\"http://www.linuxidc.com/Linux/2014-02/97068.htm\" target=\"_blank\" rel=\"noopener\">Linux使用Rsync客户端与服务端同步目录进行备份</a></p>\n<h1 id=\"管道传输-降低IO开销\"><a href=\"#管道传输-降低IO开销\" class=\"headerlink\" title=\"管道传输(降低IO开销)\"></a>管道传输(降低IO开销)</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gzip -c sda.img | ssh root@<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.110</span> <span class=\"string\">\"gunzip -c - &gt; /image/sda.img\"</span><span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>对sda.img使用gzip压缩,-c参数表示输出到stdout,即通过管道传送</p>\n<p>gunzip -c - 中的”-“表示接收从管道传进的sdtin</p>\n<h1 id=\"nc传输-一种网络的数据流重定向\"><a href=\"#nc传输-一种网络的数据流重定向\" class=\"headerlink\" title=\"nc传输(一种网络的数据流重定向)\"></a>nc传输(一种网络的数据流重定向)</h1><p>nc所做的就是在两台电脑之间建立tcp或udp链接,并在两个端口之间传输数据流,是一种网络的数据流重定向</p>\n<p>使用dd结合nc命令网络克隆磁盘分区</p>\n<p>主机:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dd <span class=\"keyword\">if</span>=/dev/vda | gzip -c | nc -l <span class=\"number\">505221</span></span><br></pre></td></tr></table></figure>\n<p>待恢复机:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc <span class=\"number\">192.168</span><span class=\"number\">.215</span><span class=\"number\">.63</span> <span class=\"number\">50522</span> | gzip -dc | dd of=/dev/sda1</span><br></pre></td></tr></table></figure>\n<p>dd命令克隆/dev/vda磁盘,并使用gzip压缩,把数据流重定向到本机50522端口,待恢复机上使用nc连接主机50522端口,就能接收主机50522端口的比特数据流,然后使用gzip解压缩,并恢复到/dev/sda磁盘</p>\n<p>dd命令读取的是磁盘扇区,所以不论磁盘文件系统,或者分区表,磁盘MBR信息,dd都能够复制,可以使用bs,count参数控制要克隆的大小</p>\n<p>例如dd bs=512 count=1 if=/dev/vda of=mbr.img 只复制磁盘vda的第一个扇区512K字节数据(引导程序和分区表)</p>\n<p>通常，可以用scp完成两台主机间的文件传输任务，但在主机间未建立信任关系的情况下，scp每次都需要输入密码，用起来感觉不是很方便，之前这篇笔记介绍过不用输入密码执行脚本或传输文件的方法，但对于一些临时性的任务，准备工作还是比较麻烦。</p>\n<h2 id=\"what-is-nc\"><a href=\"#what-is-nc\" class=\"headerlink\" title=\"what is nc ?\"></a>what is nc ?</h2><p>nc是netcat的简写，关于nc是什么，man如是说：arbitrary TCP and UDP connections and listens</p>\n<p>nc可以方便地实现任意TCP/UDP端口的侦听，连接的建立，端口的扫描，等等。也即，nc既可以作为server以TCP或UDP方式侦听指定端口，也可以作为client发起TCP连接或方式UDP包。下面要介绍的技巧就是借助其TCP连接来实现主机间文件传输的。</p>\n<p>nc的控制参数不少，常用的几个参数如下所列：</p>\n<blockquote>\n<p>备注：nc要连接的目的端口可以是具体的整数，也可以直接通过服务名指定，这种情况下，nc会负责将name映射至某个well-known port（可用cat /etc/services查看这些端口跟服务名的映射关系）</p>\n</blockquote>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-l</td>\n<td>用于指定nc将处于侦听模式。指定该参数，则意味着nc被当作server，侦听并接受连接，而非向其它地址发起连接</td>\n</tr>\n<tr>\n<td>-p port</td>\n<td>指定nc要使用的端口。若之前已指定-l，则这里的-p指定具体的侦听端口；若未指定-l，则表示向这个端口发起连接</td>\n</tr>\n<tr>\n<td>-s hostname/ip-address</td>\n<td>指定发送数据的源IP地址，适用于多网卡机器</td>\n</tr>\n<tr>\n<td>-u</td>\n<td>指定nc使用UDP协议，默认为TCP</td>\n</tr>\n<tr>\n<td>-v</td>\n<td>输出交互或出错信息，新手调试时尤为有用</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"use-nc-to-transmit-data-between-hosts\"><a href=\"#use-nc-to-transmit-data-between-hosts\" class=\"headerlink\" title=\"use nc to transmit data between hosts\"></a>use nc to transmit data between hosts</h2><p>经过上面对nc的简介，估计不少同学已经知道怎么用nc来实现两台机器间的文件传输了。这里对实现流程做简单说明。</p>\n<h3 id=\"在数据接收方的机器上侦听指定端口\"><a href=\"#在数据接收方的机器上侦听指定端口\" class=\"headerlink\" title=\"在数据接收方的机器上侦听指定端口\"></a>在数据接收方的机器上侦听指定端口</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -l -p <span class=\"number\">8210</span> &gt; demo.txt        # 在本机<span class=\"number\">8210</span>端口侦听TCP连接，将收到的数据写入文本文件</span><br><span class=\"line\">nc -l -p <span class=\"number\">8210</span> &gt; demo.tar.bz2    # 在本机<span class=\"number\">8210</span>端口侦听TCP连接，将收到的数据写成压缩文件<span class=\"number\">12</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"在数据发送方机器上向指定地址-ip-port-以TCP方式发送数据\"><a href=\"#在数据发送方机器上向指定地址-ip-port-以TCP方式发送数据\" class=\"headerlink\" title=\"在数据发送方机器上向指定地址(ip+port)以TCP方式发送数据\"></a>在数据发送方机器上向指定地址(ip+port)以TCP方式发送数据</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc dest_ip <span class=\"number\">8210</span> &lt; demo.txt      # 向ip为dest_ip的机器的<span class=\"number\">8210</span>端口发送demo.txt文件</span><br><span class=\"line\">nc dest_ip <span class=\"number\">8210</span> &lt; $(tar -jcvf demo.tar.bz2 demo.txt) # 压缩后发送<span class=\"number\">12</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"v打印出错信息\"><a href=\"#v打印出错信息\" class=\"headerlink\" title=\"-v打印出错信息\"></a>-v打印出错信息</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">接收方：nc -v -l -p <span class=\"number\">8210</span>  </span><br><span class=\"line\">发送方：nc -v dest_ip <span class=\"number\">821012</span></span><br></pre></td></tr></table></figure>\n<p>注意：使用nc传文件时，需注意操作次序，receiver先侦听端口，sender向receiver所在机器的该端口发送数据。否则发送失败。</p>\n<h1 id=\"建立文件服务器\"><a href=\"#建立文件服务器\" class=\"headerlink\" title=\"建立文件服务器\"></a>建立文件服务器</h1><p>除了上面集中传输文件的方式之外,还可以通过简历文件服务器,然后通过网络挂载的方式传输,这种适用于经常性的拷贝,下面是一个挂载ftp服务器的例子<br>挂载ftp服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install curlftpfs</span><br><span class=\"line\">mkdir /data/ftp</span><br><span class=\"line\">curlftpfs username:password@ftp.yourdomain.com /data/ftp</span><br></pre></td></tr></table></figure>","next":null,"prev":{"title":"Tomcat下项目被启动两次为问题","path":"api/articles/resource-tools-Server-Tomcat-startTwice.json","image":"/img/header_img/server/startTwice.png","num_read":1276,"num_like":238,"num_collection":74,"num_comments":89},"categories":[{"name":"操作系统","path":"api/categories/操作系统.json","pathContent":"api/categories/操作系统","description":"包含CentOS、Ubuntu、Windows等相关","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}],"tags":[{"name":"Ubuntu","path":"api/tags/Ubuntu.json","pathContent":"api/tags/Ubuntu","description":"[Ubuntu]暂未设置说明","cover":"https://sunfy9.gitee.io/img/header_img/sunfy-default.png"}]}